/*
v as T throws exception when failure

a op b only search for
  1. A.op(b)
  2. B.op(a)
  operator should be static
  child's operator declaration hides parent's

extension method
  this should be the first
  should be static
  should be in static class

in T and out T can only appears at interface
*/
namespace System
{
	using System.CompilerModel;

	public class Object
	{
		[AutoGenerated]
		public virtual Type GetType();

		public external bool ReferenceEquals(object a, object b);

		public virtual string ToString()
		{
			return GetType().FullName;
		}

		public virtual bool Equals(object o)
		{
			return ReferenceEquals(this, o);
		}

		public static bool operator==(object a, object b)
		{
			return CallEquals<object>(a, b);
		}

		public static bool operator!=(object a, object b)
		{
			return !CallEquals<object>(a, b);
		}

		generic<inout T>
		public static bool CallEquals(T a, T b)
		{
			if(a==null && b==null) return true;
			else if(a!=null && b!=null) return a.Equals(b);
			else return false;
		}

		generic<inout T>
		public static external bool TryCast(object src, out T dst);

		generic<inout T>
		public static external bool IsCastable(object src);
	}

	[NotInstantiable]
	public struct Void
	{
	}
}
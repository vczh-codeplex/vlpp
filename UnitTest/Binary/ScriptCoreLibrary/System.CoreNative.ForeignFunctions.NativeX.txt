unit ForeignFunctions;

structure __ForeignHandle
{
}

#public
foreign function void* MemAlloc(int size)
    alias SystemCoreForeignFunctions.MemAlloc;
    
#public
foreign function bool MemFree(void* handle)
    alias SystemCoreForeignFunctions.MemFree;
    
#public
foreign function bool MemIsValidHandle(void* handle)
    alias SystemCoreForeignFunctions.MemIsValidHandle;
    
#public
foreign function int MemGetHandleSize(void* handle)
    alias SystemCoreForeignFunctions.MemGetHandleSize;
    
#public
foreign function void* MemGetOwnerHandle(void* handle)
    alias SystemCoreForeignFunctions.MemGetOwnerHandle;

#public
structure GcMetaSegment
{
    int size;
	int subHandleCount;
	int* subHandles;
}

#public
structure GcMeta
{
    GcMetaSegment mainSegment;
	GcMetaSegment repeatSegment;
}

#public
structure GcHandle
{
}

foreign function bool __GcInit(function void(GcHandle*) dtor)
    alias SystemCoreForeignFunctions.GcInit;

#public
foreign function bool GcIsMultipleThreadingSupported()
    alias SystemCoreForeignFunctions.GcIsMultipleThreadingSupported;
    
#public
foreign function GcHandle* GcCreateHandle(GcMeta* meta, int repeat)
    alias SystemCoreForeignFunctions.GcCreateHandle;
    
#public
foreign function GcMeta* GcGetHandleMeta(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcGetHandleMeta;
    
#public
foreign function bool GcIsValidHandle(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcIsValidHandle;
    
#public
foreign function bool GcIncreaseHandleRef(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcIncreaseHandleRef;
    
#public
foreign function bool GcDecreaseHandleRef(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcDecreaseHandleRef;
    
#public
foreign function void* GcIncreaseHandlePin(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcIncreaseHandlePin;
    
#public
foreign function bool GcDecreaseHandlePin(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcDecreaseHandlePin;
    
#public
foreign function bool GcDisposeHandle(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcDisposeHandle;
    
#public
foreign function bool GcIsHandleDisposed(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcIsHandleDisposed;
    
#public
foreign function int GcGetHandleSize(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcGetHandleSize;
    
#public
foreign function int GcGetHandleRepeat(GcHandle* handle)
    alias SystemCoreForeignFunctions.GcGetHandleRepeat;
    
#public
foreign function bool GcReadHandle(GcHandle* handle, int repeat, int offset, GcHandle** value, bool increaseRef)
    alias SystemCoreForeignFunctions.GcReadHandle;
    
#public
foreign function bool GcWriteHandle(GcHandle* handle, int repeat, int offset, GcHandle* value, bool decreaseRef)
    alias SystemCoreForeignFunctions.GcWriteHandle;
    
#public
foreign function bool GcRead(GcHandle* handle, int offset, int length, void* buffer)
    alias SystemCoreForeignFunctions.GcRead;
    
#public
foreign function bool GcWrite(GcHandle* handle, int offset, int length, void* buffer)
    alias SystemCoreForeignFunctions.GcWrite;
    
#public
foreign function bool GcCopy(GcHandle* hDst, int oDst, GcHandle* hSrc, int oSrc, int length)
    alias SystemCoreForeignFunctions.GcCopy;
    
#public
foreign function bool GcCollect()
    alias SystemCoreForeignFunctions.GcCollect;

#public
structure SynCriticalSection
{
}

#public
structure SynWaitable
{
}

#public
foreign function SynCriticalSection* SynCreateCriticalSection()
    alias SystemCoreForeignFunctions.SynCreateCriticalSection;
    
#public
foreign function bool SynDisposeCriticalSection(SynCriticalSection* cs)
    alias SystemCoreForeignFunctions.SynDisposeCriticalSection;
    
#public
foreign function bool SynTryEnterCriticalSection(SynCriticalSection* cs)
    alias SystemCoreForeignFunctions.SynTryEnterCriticalSection;
    
#public
foreign function bool SynEnterCriticalSection(SynCriticalSection* cs)
    alias SystemCoreForeignFunctions.SynEnterCriticalSection;
    
#public
foreign function bool SynLeaveCriticalSection(SynCriticalSection* cs)
    alias SystemCoreForeignFunctions.SynLeaveCriticalSection;
    
#public
foreign function SynWaitable* SynCreateMutex(bool owned)
    alias SystemCoreForeignFunctions.SynCreateMutex;
    
#public
foreign function bool SynReleaseMutex(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynReleaseMutex;
    
#public
foreign function SynWaitable* SynCreateSemaphore(int init, int max)
    alias SystemCoreForeignFunctions.SynCreateSemaphore;
    
#public
foreign function bool SynReleaseSemaphore(SynWaitable* w, int count)
    alias SystemCoreForeignFunctions.SynReleaseSemaphore;
    
#public
foreign function SynWaitable* SynCreateAutoEvent(bool signaled)
    alias SystemCoreForeignFunctions.SynCreateAutoEvent;
    
#public
foreign function SynWaitable* SynCreateManualEvent(bool signaled)
    alias SystemCoreForeignFunctions.SynCreateManualEvent;
    
#public
foreign function bool SynSignalEvent(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynSignalEvent;
    
#public
foreign function bool SynUnsignalEvent(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynUnsignalEvent;
    
#public
foreign function bool SynDisposeWaitable(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynDisposeWaitable;
    
#public
foreign function bool SynWait(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynWait;
    
#public
foreign function bool SynWaitForTime(SynWaitable* w, int ms)
    alias SystemCoreForeignFunctions.SynWaitForTime;

foreign function SynWaitable* __SynCreateThread(function void(void*) procedure, void* arguments)
    alias SystemCoreForeignFunctions.SynCreateThread;

foreign function bool __SynStartThread(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynStartThread;

foreign function bool __SynPauseAndWaitThread(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynPauseAndWaitThread;

foreign function bool __SynResumeThread(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynResumeThread;

foreign function bool __SynStopAndWaitThread(SynWaitable* w)
    alias SystemCoreForeignFunctions.SynStopAndWaitThread;
    
#public
foreign function bool SynSleep(int ms)
    alias SystemCoreForeignFunctions.SynSleep;

#public
type astring = char*;

#public
type wstring = wchar*;

#public
foreign function astring strcpy(astring dst, astring src)
    alias SystemCoreForeignFunctions.strcpy;

#public
foreign function astring strncpy(astring dst, astring src, int size)
    alias SystemCoreForeignFunctions.strncpy;

#public
foreign function astring strcat(astring dst, astring src)
    alias SystemCoreForeignFunctions.strcat;

#public
foreign function astring strncat(astring dst, astring src, int size)
    alias SystemCoreForeignFunctions.strncat;

#public
foreign function int strcmp(astring a, astring b)
    alias SystemCoreForeignFunctions.strcmp;

#public
foreign function int strncmp(astring a, astring b, int size)
    alias SystemCoreForeignFunctions.strncmp;

#public
foreign function int stricmp(astring a, astring b)
    alias SystemCoreForeignFunctions.stricmp;

#public
foreign function int strnicmp(astring a, astring b, int size)
    alias SystemCoreForeignFunctions.strnicmp;

#public
foreign function astring strstr(astring a, astring b)
    alias SystemCoreForeignFunctions.strstr;

#public
foreign function int strlen(astring s)
    alias SystemCoreForeignFunctions.strlen;

#public
foreign function wstring wcscpy(wstring dst, wstring src)
    alias SystemCoreForeignFunctions.wcscpy;

#public
foreign function wstring wcsncpy(wstring dst, wstring src, int size)
    alias SystemCoreForeignFunctions.wcsncpy;

#public
foreign function wstring wcscat(wstring dst, wstring src)
    alias SystemCoreForeignFunctions.wcscat;

#public
foreign function wstring wcsncat(wstring dst, wstring src, int size)
    alias SystemCoreForeignFunctions.wcsncat;

#public
foreign function int wcscmp(wstring a, wstring b)
    alias SystemCoreForeignFunctions.wcscmp;

#public
foreign function int wcsncmp(wstring a, wstring b, int size)
    alias SystemCoreForeignFunctions.wcsncmp;

#public
foreign function int wcsicmp(wstring a, wstring b)
    alias SystemCoreForeignFunctions.wcsicmp;

#public
foreign function int wcsnicmp(wstring a, wstring b, int size)
    alias SystemCoreForeignFunctions.wcsnicmp;

#public
foreign function wstring wcsstr(wstring a, wstring b)
    alias SystemCoreForeignFunctions.wcsstr;

#public
foreign function int wcslen(wstring s)
    alias SystemCoreForeignFunctions.wcslen;

#public
foreign function int strtowcs(astring a, wstring w, int chars)
    alias SystemCoreForeignFunctions.strtowcs;

#public
foreign function int wcstostr(wstring s, astring a, int chars)
    alias SystemCoreForeignFunctions.wcstostr;

#public
foreign function void* memcpy(void* dst, void* src, int size)
    alias SystemCoreForeignFunctions.memcpy;

#public
foreign function int memcmp(void* dst, void* src, int size)
    alias SystemCoreForeignFunctions.memcmp;

#public
foreign function int atoi(astring input, astring* endptr, int radix)
    alias SystemCoreForeignFunctions.atoi;

#public
foreign function int wtoi(wstring input, wstring* endptr, int radix)
    alias SystemCoreForeignFunctions.wtoi;

#public
foreign function int64 atoi64(astring input, astring* endptr, int radix)
    alias SystemCoreForeignFunctions.atoi64;

#public
foreign function int64 wtoi64(wstring input, wstring* endptr, int radix)
    alias SystemCoreForeignFunctions.wtoi64;

#public
foreign function uint atou(astring input, astring* endptr, int radix)
    alias SystemCoreForeignFunctions.atou;

#public
foreign function uint wtou(wstring input, wstring* endptr, int radix)
    alias SystemCoreForeignFunctions.wtou;

#public
foreign function uint64 atou64(astring input, astring* endptr, int radix)
    alias SystemCoreForeignFunctions.atou64;

#public
foreign function uint64 wtou64(wstring input, wstring* endptr, int radix)
    alias SystemCoreForeignFunctions.wtou64;

#public
foreign function f64 atof(astring input, astring* endptr)
    alias SystemCoreForeignFunctions.atof;

#public
foreign function f64 wtof(wstring input, wstring* endptr)
    alias SystemCoreForeignFunctions.wtof;

#public
foreign function astring itoa(int number, astring output, int size, int radix)
    alias SystemCoreForeignFunctions.itoa;

#public
foreign function wstring itow(int number, wstring output, int size, int radix)
    alias SystemCoreForeignFunctions.itow;

#public
foreign function astring i64toa(int64 number, astring output, int size, int radix)
    alias SystemCoreForeignFunctions.i64toa;

#public
foreign function wstring i64tow(int64 number, wstring output, int size, int radix)
    alias SystemCoreForeignFunctions.i64tow;

#public
foreign function astring utoa(uint number, astring output, int size, int radix)
    alias SystemCoreForeignFunctions.utoa;

#public
foreign function wstring utow(uint number, wstring output, int size, int radix)
    alias SystemCoreForeignFunctions.utow;

#public
foreign function astring u64toa(uint64 number, astring output, int size, int radix)
    alias SystemCoreForeignFunctions.u64toa;

#public
foreign function wstring u64tow(uint64 number, wstring output, int size, int radix)
    alias SystemCoreForeignFunctions.u64tow;

#public
foreign function astring ftoa(f64 number, astring output, int size)
    alias SystemCoreForeignFunctions.ftoa;

#public
foreign function wstring ftow(f64 number, wstring output, int size)
    alias SystemCoreForeignFunctions.ftow;

#public
constant f64 PI = 3.1415926535897932;

#public
foreign function int rand16()
    alias SystemCoreForeignFunctions.rand16;

#public
foreign function f64 sin(f64 i)
    alias SystemCoreForeignFunctions.sin;

#public
foreign function f64 cos(f64 i)
    alias SystemCoreForeignFunctions.cos;

#public
foreign function f64 tan(f64 i)
    alias SystemCoreForeignFunctions.tan;

#public
foreign function f64 asin(f64 i)
    alias SystemCoreForeignFunctions.asin;

#public
foreign function f64 acos(f64 i)
    alias SystemCoreForeignFunctions.acos;

#public
foreign function f64 atan(f64 i)
    alias SystemCoreForeignFunctions.atan;

#public
foreign function f64 exp(f64 i)
    alias SystemCoreForeignFunctions.exp;

#public
foreign function f64 log2(f64 i)
    alias SystemCoreForeignFunctions.log2;

#public
foreign function f64 log10(f64 i)
    alias SystemCoreForeignFunctions.log10;

#public
foreign function f64 floor(f64 i)
    alias SystemCoreForeignFunctions.floor;

#public
foreign function f64 ceil(f64 i)
    alias SystemCoreForeignFunctions.ceil;

#public
foreign function f64 abs(f64 i)
    alias SystemCoreForeignFunctions.abs;
    
#public
foreign function f32 sinf(f32 i)
    alias SystemCoreForeignFunctions.sinf;

#public
foreign function f32 cosf(f32 i)
    alias SystemCoreForeignFunctions.cosf;

#public
foreign function f32 tanf(f32 i)
    alias SystemCoreForeignFunctions.tanf;

#public
foreign function f32 asinf(f32 i)
    alias SystemCoreForeignFunctions.asinf;

#public
foreign function f32 acosf(f32 i)
    alias SystemCoreForeignFunctions.acosf;

#public
foreign function f32 atanf(f32 i)
    alias SystemCoreForeignFunctions.atanf;

#public
foreign function f32 expf(f32 i)
    alias SystemCoreForeignFunctions.expf;

#public
foreign function f32 log2f(f32 i)
    alias SystemCoreForeignFunctions.log2f;

#public
foreign function f32 log10f(f32 i)
    alias SystemCoreForeignFunctions.log10f;

#public
foreign function f32 floorf(f32 i)
    alias SystemCoreForeignFunctions.floorf;

#public
foreign function f32 ceilf(f32 i)
    alias SystemCoreForeignFunctions.ceilf;

#public
foreign function f32 absf(f32 i)
    alias SystemCoreForeignFunctions.absf;
unit program;

concept T:Eq
{
	Equals=function bool(T,T);
	NotEquals=function bool(T,T);
}

function bool IntEquals(int a, int b) result=a==b;
function bool IntNotEquals(int a, int b) result=a!=b;

instance int:Eq
{
	Equals=IntEquals;
	NotEquals=IntNotEquals;
}

generic<T>
structure Vector
{
	T x;
	T y;
}

generic<T> where T:Eq
function bool VectorEquals(Vector<T> a, Vector<T> b)
	result=Eq<T>::Equals(a.x,b.x)&&Eq<T>::Equals(a.y,b.y);

generic<T> where T:Eq
function bool VectorNotEquals(Vector<T> a, Vector<T> b)
	result=!VectorEquals<T>(a,b);

generic<T> where T:Eq
instance Vector:Eq
{
	Equals=VectorEquals<T>;
	NotEquals=VectorNotEquals<T>;
}

foreign function void* malloc(int size) alias Memory.Malloc;
foreign function void free(void* pointer) alias Memory.Free;
foreign function void memcpy(void* dst, void* src, int size) alias Memory.Copy;
foreign function int strlen(char* buffer) alias Memory.Strlen;

function int main()
{
	variable Student[2] students;
	students[0].name=CreateString("vczh1");
	students[0].id=CreateString("vczh1_id");
	students[0].chinese=100;
	students[0].mathematics=90;
	students[0].english=80;
	students[1].name=CreateString("vczh2");
	students[1].id=CreateString("vczh2_id");
	students[1].chinese=80;
	students[1].mathematics=90;
	students[1].english=100;

	DisposeString(students[0].name);
	DisposeString(students[0].id);
	DisposeString(students[1].name);
	DisposeString(students[1].id);

	result=0;
	for(variable int index = 0; when(index < 2) with index++;) do
	{
		result+=students[0].chinese+students[0].mathematics+students[0].english;
	}
}

structure String
{
	char* buffer;
	int length;
}

function String CreateString(char* buffer)
{
	variable String string;
	variable int size=strlen(buffer)+1;
	string.buffer=malloc(size);
	memcpy(string.buffer, buffer, size);
	string.length=size-1;
	result=string;
}

function void DisposeString(String* string)
{
	free(string->buffer);
	string->buffer=null;
	string->length=0;
}

structure Student
{
	String name;
	String id;
	int chinese;
	int mathematics;
	int english;
}
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandDescription_Clear" xml:space="preserve">
    <value>清除当前显示的消息</value>
  </data>
  <data name="CommandDescription_File_Exit" xml:space="preserve">
    <value>退出程序</value>
  </data>
  <data name="CommandDescription_Help" xml:space="preserve">
    <value>打印出所有命令及其描述</value>
  </data>
  <data name="CommandDescription_Tools_Options" xml:space="preserve">
    <value>打开选项窗口</value>
  </data>
  <data name="CommandDescription_View_CommandWindow" xml:space="preserve">
    <value>打开命令行窗口</value>
  </data>
  <data name="CommandDescription_View_OutputWindow" xml:space="preserve">
    <value>打开输出窗口</value>
  </data>
  <data name="ExceptionAddGroupAfterInitialization" xml:space="preserve">
    <value>不能在初始化完成之后添加UI项。</value>
  </data>
  <data name="ExceptionCommandNotExists" xml:space="preserve">
    <value>命令"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionDuplicatedCommand" xml:space="preserve">
    <value>命令"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedGroup" xml:space="preserve">
    <value>ShellGroup"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedOption" xml:space="preserve">
    <value>选项"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedOptionEditor" xml:space="preserve">
    <value>选项编辑器"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedOutputChannel" xml:space="preserve">
    <value>输出频道"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedService" xml:space="preserve">
    <value>服务类型"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedToolWindiw" xml:space="preserve">
    <value>工具窗口"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionNullCommandName" xml:space="preserve">
    <value>命令名不可为空。</value>
  </data>
  <data name="ExceptionNullToolWindowToolBarGroup" xml:space="preserve">
    <value>工具窗口的工具栏不能被取消。</value>
  </data>
  <data name="ExceptionOptionEditorNoExists" xml:space="preserve">
    <value>选项编辑器"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionOptionNotExists" xml:space="preserve">
    <value>选项"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionOutputChannelNotExists" xml:space="preserve">
    <value>输出频道"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionResetToolWindowToolBarGroup" xml:space="preserve">
    <value>工具窗口的工具栏只能设置一次。</value>
  </data>
  <data name="ExceptionToolWindowNotExists" xml:space="preserve">
    <value>工具窗口"{0}"没有被注册。</value>
  </data>
  <data name="LogCommandExecuted" xml:space="preserve">
    <value>命令{0}执行成功。</value>
  </data>
  <data name="LogPackageLoaded" xml:space="preserve">
    <value>插件{0}加载成功。</value>
  </data>
  <data name="LogServiceCreated" xml:space="preserve">
    <value>服务{0}注册成功。</value>
  </data>
  <data name="MenuTextDockBottom" xml:space="preserve">
    <value>停靠在底部(&amp;B)</value>
  </data>
  <data name="MenuTextDockClose" xml:space="preserve">
    <value>关闭{0}(&amp;X)</value>
  </data>
  <data name="MenuTextDockCloseAllButThis" xml:space="preserve">
    <value>关闭其他窗口(&amp;A)</value>
  </data>
  <data name="MenuTextDockDocument" xml:space="preserve">
    <value>停靠在文档区(&amp;D)</value>
  </data>
  <data name="MenuTextDockFloating" xml:space="preserve">
    <value>浮动(&amp;F)</value>
  </data>
  <data name="MenuTextDockHide" xml:space="preserve">
    <value>关闭{0}(&amp;X)</value>
  </data>
  <data name="MenuTextDockLeft" xml:space="preserve">
    <value>停靠在左边(&amp;L)</value>
  </data>
  <data name="MenuTextDockRight" xml:space="preserve">
    <value>停靠在右边(&amp;R)</value>
  </data>
  <data name="MenuTextDockTop" xml:space="preserve">
    <value>停靠在顶部(&amp;T)</value>
  </data>
  <data name="MenuTextFile" xml:space="preserve">
    <value>文件(&amp;F)</value>
  </data>
  <data name="MenuTextFileExit" xml:space="preserve">
    <value>退出(&amp;X)</value>
  </data>
  <data name="MenuTextHelp" xml:space="preserve">
    <value>帮助(&amp;H)</value>
  </data>
  <data name="MenuTextHelpAbout" xml:space="preserve">
    <value>关于{0}(&amp;A)...</value>
  </data>
  <data name="MenuTextTools" xml:space="preserve">
    <value>工具(&amp;T)</value>
  </data>
  <data name="MenuTextToolsOptions" xml:space="preserve">
    <value>选项(&amp;O)...</value>
  </data>
  <data name="MenuTextView" xml:space="preserve">
    <value>视图(&amp;V)</value>
  </data>
  <data name="MenuTextViewCommandWindow" xml:space="preserve">
    <value>命令行窗口(&amp;C)</value>
  </data>
  <data name="MenuTextViewOutputWindow" xml:space="preserve">
    <value>输出窗口(&amp;O)</value>
  </data>
  <data name="MenuTextViewToolbars" xml:space="preserve">
    <value>工具栏(&amp;T)</value>
  </data>
  <data name="MenuTextWindow" xml:space="preserve">
    <value>窗口(&amp;W)</value>
  </data>
  <data name="OptionNameEnvironment" xml:space="preserve">
    <value>环境设置</value>
  </data>
  <data name="OutputChannelAutoShell" xml:space="preserve">
    <value>AutoShell记录</value>
  </data>
  <data name="ToolItemClearChannel" xml:space="preserve">
    <value>清空</value>
  </data>
  <data name="ToolItemOutput" xml:space="preserve">
    <value>输出频道：</value>
  </data>
  <data name="ToolTipClearChannel" xml:space="preserve">
    <value>清空当前输出频道的消息</value>
  </data>
  <data name="ToolWindowCommand" xml:space="preserve">
    <value>命令行</value>
  </data>
  <data name="ToolWindowOutput" xml:space="preserve">
    <value>输出</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandDescription_Edit_Copy" xml:space="preserve">
    <value>复制当前文档选中的部分</value>
  </data>
  <data name="CommandDescription_Edit_Cut" xml:space="preserve">
    <value>剪切当前文档选中的部分</value>
  </data>
  <data name="CommandDescription_Edit_Delete" xml:space="preserve">
    <value>删除当前文档选中的部分</value>
  </data>
  <data name="CommandDescription_Edit_Paste" xml:space="preserve">
    <value>把剪贴板的内容粘帖到当前文档</value>
  </data>
  <data name="CommandDescription_Edit_Redo" xml:space="preserve">
    <value>重做最近的一次修改</value>
  </data>
  <data name="CommandDescription_Edit_SelectAll" xml:space="preserve">
    <value>选中当前文档的所有内容</value>
  </data>
  <data name="CommandDescription_Edit_Undo" xml:space="preserve">
    <value>撤销最近的一次修改</value>
  </data>
  <data name="CommandDescription_File_Close" xml:space="preserve">
    <value>关闭当前文档</value>
  </data>
  <data name="CommandDescription_File_New_File" xml:space="preserve">
    <value>新建文件</value>
  </data>
  <data name="CommandDescription_File_Open_File" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="CommandDescription_File_Save" xml:space="preserve">
    <value>保存当前文档</value>
  </data>
  <data name="CommandDescription_File_SaveAll" xml:space="preserve">
    <value>保存所有打开的文档</value>
  </data>
  <data name="CommandDescription_File_SaveAs" xml:space="preserve">
    <value>将当前文档另存为</value>
  </data>
  <data name="DialogOpen" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="DialogSave" xml:space="preserve">
    <value>保存文件</value>
  </data>
  <data name="ExceptionDuplicatedFileCategory" xml:space="preserve">
    <value>文件组"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedFileEditor" xml:space="preserve">
    <value>文件编辑器"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionDuplicatedFileType" xml:space="preserve">
    <value>文件类型"{0}"已经被注册。</value>
  </data>
  <data name="ExceptionEditorWindowDoesNotImplementIEditorWindow" xml:space="preserve">
    <value>指定的编辑器工具窗口"{0}"没有继承自IEditorWindow。</value>
  </data>
  <data name="ExceptionFileCategoryNotExists" xml:space="preserve">
    <value>文件组"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionFileEditorNotExists" xml:space="preserve">
    <value>文件编辑器"{0}"没有被注册。</value>
  </data>
  <data name="ExceptionFileTypeNotExists" xml:space="preserve">
    <value>文件类型"{0}"没有被注册。</value>
  </data>
  <data name="FileDialogFilter" xml:space="preserve">
    <value>{0}({1})|{1}</value>
  </data>
  <data name="MenuTextEdit" xml:space="preserve">
    <value>编辑(&amp;E)</value>
  </data>
  <data name="MenuTextEditCopy" xml:space="preserve">
    <value>复制(&amp;C)</value>
  </data>
  <data name="MenuTextEditCut" xml:space="preserve">
    <value>剪切(&amp;T)</value>
  </data>
  <data name="MenuTextEditDelete" xml:space="preserve">
    <value>删除(&amp;D)</value>
  </data>
  <data name="MenuTextEditPaste" xml:space="preserve">
    <value>粘帖(&amp;P)</value>
  </data>
  <data name="MenuTextEditRedo" xml:space="preserve">
    <value>重做(&amp;R)</value>
  </data>
  <data name="MenuTextEditSelectAll" xml:space="preserve">
    <value>全选(&amp;A)</value>
  </data>
  <data name="MenuTextEditUndo" xml:space="preserve">
    <value>撤销(&amp;U)</value>
  </data>
  <data name="MenuTextFileClose" xml:space="preserve">
    <value>关闭{0}(&amp;C)</value>
  </data>
  <data name="MenuTextFileNew" xml:space="preserve">
    <value>新建(&amp;N)</value>
  </data>
  <data name="MenuTextFileNewFile" xml:space="preserve">
    <value>文件(&amp;F)...</value>
  </data>
  <data name="MenuTextFileOpen" xml:space="preserve">
    <value>打开(&amp;O)</value>
  </data>
  <data name="MenuTextFileOpenFile" xml:space="preserve">
    <value>文件(&amp;F)...</value>
  </data>
  <data name="MenuTextFileRecentFiles" xml:space="preserve">
    <value>最近打开的文件(&amp;F)</value>
  </data>
  <data name="MenuTextFileRecentFilesEmpty" xml:space="preserve">
    <value>（空）</value>
  </data>
  <data name="MenuTextFileSave" xml:space="preserve">
    <value>保存{0}(&amp;S)...</value>
  </data>
  <data name="MenuTextFileSaveAll" xml:space="preserve">
    <value>保存所有文件(&amp;L)</value>
  </data>
  <data name="MenuTextFileSaveAs" xml:space="preserve">
    <value>另存为(&amp;A)...</value>
  </data>
  <data name="MenuTextWindowWindows" xml:space="preserve">
    <value>所有窗口(&amp;A)...</value>
  </data>
  <data name="MessageBoxNoAssociatedEditor" xml:space="preserve">
    <value>没有安装可以编辑文件{0}的编辑器。</value>
  </data>
  <data name="MessageBoxSaveModificationTo" xml:space="preserve">
    <value>是否保存对{0}的更改？</value>
  </data>
  <data name="ToolBarStandard" xml:space="preserve">
    <value>标准</value>
  </data>
  <data name="ToolTipStandardCopy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="ToolTipStandardCut" xml:space="preserve">
    <value>剪切</value>
  </data>
  <data name="ToolTipStandardNew" xml:space="preserve">
    <value>新建文件</value>
  </data>
  <data name="ToolTipStandardOpen" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="ToolTipStandardPaste" xml:space="preserve">
    <value>粘贴</value>
  </data>
  <data name="ToolTipStandardRedo" xml:space="preserve">
    <value>重做</value>
  </data>
  <data name="ToolTipStandardSave" xml:space="preserve">
    <value>保存{0}</value>
  </data>
  <data name="ToolTipStandardSaveAll" xml:space="preserve">
    <value>保存所有文件</value>
  </data>
  <data name="ToolTipStandardUndo" xml:space="preserve">
    <value>撤销</value>
  </data>
  <data name="ToolWindowUnsavedDocument" xml:space="preserve">
    <value>未命名&lt;{0}&gt;*</value>
  </data>
</root>
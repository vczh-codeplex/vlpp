/***********************************************************************
DO NOT MODIFY!!!
THIS FILE IS GENERATED BY _TranslateXMLtoCode.exe

Developer: 陈梓瀚(vczh)
***********************************************************************/

#include "GuiTypeDescriptorImpProvider_codegen.h"
#include "..\GacUI.h"

namespace vl
{
	namespace presentation
	{
		namespace reflection_implementation
		{

/***********************************************************************
Alignment :: Type (vl::presentation::Alignment::Type)
***********************************************************************/

			class gacui_tpimp_Alignment
			{
			public:
				class gacui_tpimp_Type : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Left", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Left", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Top", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Top", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Center", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Center", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Right", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Right", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bottom", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Bottom", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
Array_of_ColorEntry (vl::collections::Array<vl::presentation::elements::text::ColorEntry,vl::presentation::elements::text::ColorEntry>)
***********************************************************************/

			class gacui_tpimp_Array_of_ColorEntry : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Array", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Resize", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
AxisAlignedItemCoordinateTransformer (vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer)
***********************************************************************/

			class gacui_tpimp_AxisAlignedItemCoordinateTransformer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"AxisAlignedItemCoordinateTransformer", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Alignment", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAlignment", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
AxisAlignedItemCoordinateTransformer :: Alignment (vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer::Alignment)
***********************************************************************/

				class gacui_tpimp_Alignment : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"LeftDown", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LeftDown", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RightDown", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_RightDown", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LeftUp", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LeftUp", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RightUp", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_RightUp", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"DownLeft", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_DownLeft", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"DownRight", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_DownRight", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UpLeft", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UpLeft", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UpRight", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UpRight", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
CharAtt (vl::presentation::elements::text::CharAtt)
***********************************************************************/

			class gacui_tpimp_CharAtt : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
CharMeasurer (vl::presentation::elements::text::CharMeasurer)
***********************************************************************/

			class gacui_tpimp_CharMeasurer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"MeasureWidth", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Color (vl::presentation::Color)
***********************************************************************/

			class gacui_tpimp_Color : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Color", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Color", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"r", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_r", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_r", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_g", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_g", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"b", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_b", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_b", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"a", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_a", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_a", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"value", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_value", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_value", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
DefaultItemCoordinateTransformer (vl::presentation::controls::list::DefaultItemCoordinateTransformer)
***********************************************************************/

			class gacui_tpimp_DefaultItemCoordinateTransformer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"DefaultItemCoordinateTransformer", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
DescriptableObject (vl::presentation::DescriptableObject)
***********************************************************************/

			class gacui_tpimp_DescriptableObject : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"DescriptableObject", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ElementShape :: Type (vl::presentation::elements::ElementShape::Type)
***********************************************************************/

			class gacui_tpimp_ElementShape
			{
			public:
				class gacui_tpimp_Type : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Rectangle", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Rectangle", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Ellipse", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
FixedHeightItemArranger (vl::presentation::controls::list::FixedHeightItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedHeightItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedHeightItemArranger", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
FixedHeightMultiColumnItemArranger (vl::presentation::controls::list::FixedHeightMultiColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedHeightMultiColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedHeightMultiColumnItemArranger", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
FixedSizeMultiColumnItemArranger (vl::presentation::controls::list::FixedSizeMultiColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedSizeMultiColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedSizeMultiColumnItemArranger", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
FontProperties (vl::presentation::FontProperties)
***********************************************************************/

			class gacui_tpimp_FontProperties : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FontProperties", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"FontProperties", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"fontFamily", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_fontFamily", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_fontFamily", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"size", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_size", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_size", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bold", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_bold", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_bold", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"italic", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_italic", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_italic", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"underline", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_underline", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_underline", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"strikeline", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_strikeline", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_strikeline", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"antialias", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_antialias", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_antialias", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Gui3DBorderElement (vl::presentation::elements::Gui3DBorderElement)
***********************************************************************/

			class gacui_tpimp_Gui3DBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Gui3DSplitterElement (vl::presentation::elements::Gui3DSplitterElement)
***********************************************************************/

			class gacui_tpimp_Gui3DSplitterElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:

/***********************************************************************
Gui3DSplitterElement :: Direction (vl::presentation::elements::Gui3DSplitterElement::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiApplication (vl::presentation::controls::GuiApplication)
***********************************************************************/

			class gacui_tpimp_GuiApplication : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Run", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetWindow", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsInMainThread", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Windows", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWindows", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiBoundsComposition (vl::presentation::elements::GuiBoundsComposition)
***********************************************************************/

			class gacui_tpimp_GuiBoundsComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiBoundsComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ClearAlignmentToParent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsAlignedToParent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlignmentToParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAlignmentToParent", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlignmentToParent", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlignmentToParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAlignmentToParent", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlignmentToParent", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BoundsChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_BoundsChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_BoundsChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiButton (vl::presentation::controls::GuiButton)
***********************************************************************/

			class gacui_tpimp_GuiButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiButton", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Clicked", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_Clicked", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_Clicked", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiButton :: ControlState (vl::presentation::controls::GuiButton::ControlState)
***********************************************************************/

				class gacui_tpimp_ControlState : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Normal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Normal", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Active", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Active", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Pressed", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Pressed", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiButton :: IStyleController (vl::presentation::controls::GuiButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Transfer", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiCellComposition (vl::presentation::elements::GuiCellComposition)
***********************************************************************/

			class gacui_tpimp_GuiCellComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCellComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSite", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TableParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTableParent", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Row", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRow", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowSpan", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRowSpan", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Column", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColumn", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ColumnSpan", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColumnSpan", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiCellOption (vl::presentation::elements::GuiCellOption)
***********************************************************************/

			class gacui_tpimp_GuiCellOption : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCellOption", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AbsoluteOption", IMemberDescriptor::Static))
					);
					AddMethod(
						(new MethodDescriptor(L"PercentageOption", IMemberDescriptor::Static))
					);
					AddMethod(
						(new MethodDescriptor(L"MinSizeOption", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"composeType", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_composeType", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_composeType", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"absolute", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_absolute", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_absolute", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"percentage", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_percentage", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_percentage", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiCellOption :: ComposeType (vl::presentation::elements::GuiCellOption::ComposeType)
***********************************************************************/

				class gacui_tpimp_ComposeType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Absolute", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Absolute", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Percentage", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Percentage", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"MinSize", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_MinSize", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiCharEventArgs (vl::presentation::elements::GuiCharEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiCharEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCharEventArgs", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiColorizedTextElement (vl::presentation::elements::GuiColorizedTextElement)
***********************************************************************/

			class gacui_tpimp_GuiColorizedTextElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Lines", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetLines", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Colors", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColors", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetViewPosition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretBegin", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretEnd", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Colors", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColors", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetViewPosition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretBegin", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretEnd", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:

/***********************************************************************
GuiColorizedTextElement :: ICallback (vl::presentation::elements::GuiColorizedTextElement::ICallback)
***********************************************************************/

				class gacui_tpimp_ICallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddMethod(
							(new MethodDescriptor(L"ColorChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"FontChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiComboBoxBase (vl::presentation::controls::GuiComboBoxBase)
***********************************************************************/

			class gacui_tpimp_GuiComboBoxBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComboBoxBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Popup", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPopup", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PopupOpened", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_PopupOpened", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_PopupOpened", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PopupClosed", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_PopupClosed", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_PopupClosed", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemSelecting", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_ItemSelecting", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_ItemSelecting", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemSelected", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_ItemSelected", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_ItemSelected", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiComboBoxBase :: ICommandExecutor (vl::presentation::controls::GuiComboBoxBase::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SelectItem", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiComboBoxBase :: IStyleController (vl::presentation::controls::GuiComboBoxBase::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"OnClicked", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnPopupOpened", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnPopupClosed", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnItemSelected", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePopupStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiComboBoxListControl (vl::presentation::controls::GuiComboBoxListControl)
***********************************************************************/

			class gacui_tpimp_GuiComboBoxListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComboBoxListControl", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ContainedListControl", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetContainedListControl", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndex", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectedIndex", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectedIndex", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetItemProvider", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndex", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectedIndex", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectedIndex", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndexChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SelectedIndexChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedIndexChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiComponent (vl::presentation::controls::GuiComponent)
***********************************************************************/

			class gacui_tpimp_GuiComponent : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComponent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ControlHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetControlHost", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiControl (vl::presentation::controls::GuiControl)
***********************************************************************/

			class gacui_tpimp_GuiControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiControl", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetChild", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"NotifyEventArguments", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNotifyEventArguments", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleController", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStyleController", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FocusableComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFocusableComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EventReceiver", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEventReceiver", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ChildrenCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetChildrenCount", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControlHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Enabled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Enabled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisibleChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_VisibleChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_VisibleChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_EnabledChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_EnabledChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabledChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_VisuallyEnabledChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_VisuallyEnabledChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_TextChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_TextChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FontChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_FontChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_FontChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiControl :: IStyleController (vl::presentation::controls::GuiControl::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Abstract))
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiControl :: IStyleProvider (vl::presentation::controls::GuiControl::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiControlHost (vl::presentation::controls::GuiControlHost)
***********************************************************************/

			class gacui_tpimp_GuiControlHost : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiControlHost", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetActivated", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AddComponent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveComponent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ContainsComponent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Show", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowDeactivated", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowRestored", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMaximized", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMinimized", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Hide", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Close", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"GraphicsHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetGraphicsHost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MainComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMainComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Activated", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetActivated", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ShowInTaskBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShowInTaskBar", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShowInTaskBar", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledActivate", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEnabledActivate", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabledActivate", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedScreen", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedScreen", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Opening", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetOpening", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ShowInTaskBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShowInTaskBar", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShowInTaskBar", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledActivate", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEnabledActivate", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabledActivate", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowGotFocus", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowGotFocus", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowGotFocus", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowLostFocus", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowLostFocus", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowLostFocus", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowActivated", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowActivated", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowActivated", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowDeactivated", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowDeactivated", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowDeactivated", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowOpened", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowOpened", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowOpened", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowClosing", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowClosing", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowClosing", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowClosed", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowClosed", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowClosed", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowDestroying", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_WindowDestroying", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowDestroying", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiEventArgs (vl::presentation::elements::GuiEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiEventArgs", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"compositionSource", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_compositionSource", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_compositionSource", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"eventSource", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_eventSource", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_eventSource", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"handled", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_handled", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_handled", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGradientBackgroundElement (vl::presentation::elements::GuiGradientBackgroundElement)
***********************************************************************/

			class gacui_tpimp_GuiGradientBackgroundElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGradientBackgroundElement :: Direction (vl::presentation::elements::GuiGradientBackgroundElement::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Slash", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Slash", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Backslash", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Backslash", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsAnimationManager (vl::presentation::elements::GuiGraphicsAnimationManager)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsAnimationManager : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsAnimationManager", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AddAnimation", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"HasAnimation", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Play", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsComposition (vl::presentation::elements::GuiGraphicsComposition)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Children", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AddChild", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"InsertChild", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveChild", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"MoveChild", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"HasEventReceiver", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"FindComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnedElement", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetOwnedElement", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetOwnedElement", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSizeLimitation", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinSizeLimitation", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinSizeLimitation", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EventReceiver", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEventReceiver", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GlobalBounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetGlobalBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedControl", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedControl", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedHost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedCursor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedCursor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControl", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedControl", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedGraphicsHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedGraphicsHost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControlHost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRelatedCursor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Margin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMargin", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"InternalMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetInternalMargin", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetInternalMargin", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMinSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMinSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMinSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientArea", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientArea", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AffectionFromParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinPreferredClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredBounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnedElement", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetOwnedElement", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetOwnedElement", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSizeLimitation", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinSizeLimitation", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinSizeLimitation", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedCursor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedCursor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Margin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMargin", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"InternalMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetInternalMargin", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetInternalMargin", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMinSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMinSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMinSize", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsComposition :: MinSizeLimitation (vl::presentation::elements::GuiGraphicsComposition::MinSizeLimitation)
***********************************************************************/

				class gacui_tpimp_MinSizeLimitation : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"NoLimit", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_NoLimit", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LimitToElement", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LimitToElement", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LimitToElementAndChildren", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LimitToElementAndChildren", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiGraphicsComposition :: ParentSizeAffection (vl::presentation::elements::GuiGraphicsComposition::ParentSizeAffection)
***********************************************************************/

				class gacui_tpimp_ParentSizeAffection : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"NotAffectedByParent", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_NotAffectedByParent", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"AffectedByParent", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_AffectedByParent", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TotallyDecidedByParent", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_TotallyDecidedByParent", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiCharEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiCharEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiKeyEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiKeyEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiMouseEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiMouseEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiRequestEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiRequestEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEventReceiver (vl::presentation::elements::GuiGraphicsEventReceiver)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEventReceiver : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEventReceiver", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonDown", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonDown", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonDown", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonUp", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonUp", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonUp", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonDoubleClick", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonDoubleClick", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonDoubleClick", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonDown", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonDown", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonDown", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonUp", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonUp", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonUp", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonDoubleClick", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonDoubleClick", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonDoubleClick", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonDown", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonDown", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonDown", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonUp", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonUp", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonUp", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonDoubleClick", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonDoubleClick", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonDoubleClick", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"horizontalWheel", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_horizontalWheel", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_horizontalWheel", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"verticalWheel", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_verticalWheel", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_verticalWheel", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseMove", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_mouseMove", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseMove", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseEnter", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_mouseEnter", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseEnter", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseLeave", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_mouseLeave", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseLeave", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"previewKey", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_previewKey", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_previewKey", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"keyDown", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_keyDown", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_keyDown", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"keyUp", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_keyUp", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_keyUp", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"systemKeyDown", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_systemKeyDown", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_systemKeyDown", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"systemKeyUp", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_systemKeyUp", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_systemKeyUp", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"previewCharInput", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_previewCharInput", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_previewCharInput", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"charInput", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_charInput", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_charInput", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"gotFocus", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_gotFocus", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_gotFocus", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"lostFocus", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_lostFocus", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_lostFocus", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"caretNotify", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_caretNotify", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_caretNotify", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsHost (vl::presentation::elements::GuiGraphicsHost)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsHost : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsHost", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocus", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MainComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMainComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FocusedComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFocusedComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AnimationManager", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAnimationManager", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsResourceManager (vl::presentation::elements::GuiGraphicsResourceManager)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsResourceManager : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsResourceManager", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RegisterElementFactory", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RegisterRendererFactory", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetElementFactory", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRendererFactory", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsSite (vl::presentation::elements::GuiGraphicsSite)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsSite : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsSite", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AffectionFromParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinPreferredClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredBounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiImageData (vl::presentation::controls::GuiImageData)
***********************************************************************/

			class gacui_tpimp_GuiImageData : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiImageData", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"GuiImageData", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameIndex", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFrameIndex", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiImageFrameElement (vl::presentation::elements::GuiImageFrameElement)
***********************************************************************/

			class gacui_tpimp_GuiImageFrameElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetImage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetAlignments", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameIndex", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFrameIndex", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlignment", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlignment", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlignment", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlignment", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Stretch", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStretch", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetStretch", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Stretch", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStretch", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetStretch", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiKeyEventArgs (vl::presentation::elements::GuiKeyEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiKeyEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiKeyEventArgs", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiListControl (vl::presentation::controls::GuiListControl)
***********************************************************************/

			class gacui_tpimp_GuiListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListControl", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetItemProvider", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Arranger", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetArranger", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CoordinateTransformer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCoordinateTransformer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleProviderChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_StyleProviderChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_StyleProviderChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ArrangerChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_ArrangerChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_ArrangerChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CoordinateTransformerChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_CoordinateTransformerChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_CoordinateTransformerChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiListControl :: IItemArranger (vl::presentation::controls::GuiListControl::IItemArranger)
***********************************************************************/

				class gacui_tpimp_IItemArranger : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemArranger", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetVisibleStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetVisibleIndex", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnViewChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Abstract))
							)
							->Setter(
								(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Abstract))
							)
							->Setter(
								(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemArrangerCallback (vl::presentation::controls::GuiListControl::IItemArrangerCallback)
***********************************************************************/

				class gacui_tpimp_IItemArrangerCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemArrangerCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"RequestItem", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"ReleaseItem", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetStylePreferredSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleAlignmentToParent", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleBounds", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnTotalSizeChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewLocation", IMemberDescriptor::Abstract))
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemCoordinateTransformer (vl::presentation::controls::GuiListControl::IItemCoordinateTransformer)
***********************************************************************/

				class gacui_tpimp_IItemCoordinateTransformer : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemCoordinateTransformer", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemPrimaryTextView (vl::presentation::controls::GuiListControl::IItemPrimaryTextView)
***********************************************************************/

				class gacui_tpimp_IItemPrimaryTextView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemPrimaryTextView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetPrimaryTextViewText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"ContainsPrimaryText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemProvider (vl::presentation::controls::GuiListControl::IItemProvider)
***********************************************************************/

				class gacui_tpimp_IItemProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"RequestView", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemProviderCallback (vl::presentation::controls::GuiListControl::IItemProviderCallback)
***********************************************************************/

				class gacui_tpimp_IItemProviderCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemProviderCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnItemModified", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemStyleController (vl::presentation::controls::GuiListControl::IItemStyleController)
***********************************************************************/

				class gacui_tpimp_IItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"IsCacheable", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"IsInstalled", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnInstalled", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnUninstalled", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemStyleId", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemStyleProvider (vl::presentation::controls::GuiListControl::IItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_IItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiListView (vl::presentation::controls::GuiListView)
***********************************************************************/

			class gacui_tpimp_GuiListView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Items", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetItems", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiListViewBase (vl::presentation::controls::GuiListViewBase)
***********************************************************************/

			class gacui_tpimp_GuiListViewBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListViewBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ListViewStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetListViewStyleProvider", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiListViewBase :: IStyleProvider (vl::presentation::controls::GuiListViewBase::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateColumnStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"PrimaryTextColor", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetPrimaryTextColor", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SecondaryTextColor", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetSecondaryTextColor", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemSeparatorColor", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetItemSeparatorColor", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiMenu (vl::presentation::controls::GuiMenu)
***********************************************************************/

			class gacui_tpimp_GuiMenu : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenu", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"UpdateMenuService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiMenuBar (vl::presentation::controls::GuiMenuBar)
***********************************************************************/

			class gacui_tpimp_GuiMenuBar : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenuBar", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiMenuButton (vl::presentation::controls::GuiMenuButton)
***********************************************************************/

			class gacui_tpimp_GuiMenuButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenuButton", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSubMenuExists", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateSubMenu", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroySubMenu", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenu", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSubMenu", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpening", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSubMenuOpening", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMenuClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMenuClientSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMenuClientSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpening", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSubMenuOpening", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMenuClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMenuClientSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMenuClientSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpeningChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SubMenuOpeningChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SubMenuOpeningChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiMenuButton :: IStyleController (vl::presentation::controls::GuiMenuButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateSubMenuStyleController", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetSubMenuExisting", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiMouseEventArgs (vl::presentation::elements::GuiMouseEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiMouseEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMouseEventArgs", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiMultilineTextBox (vl::presentation::controls::GuiMultilineTextBox)
***********************************************************************/

			class gacui_tpimp_GuiMultilineTextBox : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMultilineTextBox", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
GuiMultilineTextBox :: StyleController (vl::presentation::controls::GuiMultilineTextBox::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElementOperator", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextElementOperator", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiMultilineTextBox :: TextElementOperatorCallback (vl::presentation::controls::GuiMultilineTextBox::TextElementOperatorCallback)
***********************************************************************/

				class gacui_tpimp_TextElementOperatorCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextElementOperatorCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"TextMargin", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Virtual))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiPartialViewComposition (vl::presentation::elements::GuiPartialViewComposition)
***********************************************************************/

			class gacui_tpimp_GuiPartialViewComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiPartialViewComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWidthRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthRatio", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthPageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWidthPageSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthPageSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHeightRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightRatio", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightPageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHeightPageSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightPageSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWidthRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthRatio", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthPageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWidthPageSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthPageSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHeightRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightRatio", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightPageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHeightPageSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightPageSize", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiPolygonElement (vl::presentation::elements::GuiPolygonElement)
***********************************************************************/

			class gacui_tpimp_GuiPolygonElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetPoints", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Points", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPoints", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PointCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPointCount", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BorderColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorderColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorderColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BackgroundColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBackgroundColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBackgroundColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BorderColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorderColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorderColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BackgroundColor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBackgroundColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetBackgroundColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiPopup (vl::presentation::controls::GuiPopup)
***********************************************************************/

			class gacui_tpimp_GuiPopup : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiPopup", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsClippedByScreen", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiRequestEventArgs (vl::presentation::elements::GuiRequestEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiRequestEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiRequestEventArgs", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"cancel", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_cancel", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_cancel", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiRoundBorderElement (vl::presentation::elements::GuiRoundBorderElement)
***********************************************************************/

			class gacui_tpimp_GuiRoundBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Radius", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRadius", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRadius", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Radius", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRadius", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRadius", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiScroll (vl::presentation::controls::GuiScroll)
***********************************************************************/

			class gacui_tpimp_GuiScroll : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScroll", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPageSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Position", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPosition", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMove", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSmallMove", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetSmallMove", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMove", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBigMove", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBigMove", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinPosition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxPosition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPageSize", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Position", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPosition", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMove", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSmallMove", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetSmallMove", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMove", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBigMove", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBigMove", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSizeChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_TotalSizeChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_TotalSizeChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSizeChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_PageSizeChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_PageSizeChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PositionChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_PositionChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_PositionChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMoveChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SmallMoveChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SmallMoveChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMoveChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_BigMoveChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_BigMoveChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiScroll :: ICommandExecutor (vl::presentation::controls::GuiScroll::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SmallDecrease", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SmallIncrease", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"BigDecrease", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"BigIncrease", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};

/***********************************************************************
GuiScroll :: IStyleController (vl::presentation::controls::GuiScroll::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiScrollContainer (vl::presentation::controls::GuiScrollContainer)
***********************************************************************/

			class gacui_tpimp_GuiScrollContainer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScrollContainer", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
GuiScrollContainer :: StyleController (vl::presentation::controls::GuiScrollContainer::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"MoveContainer", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiScrollView (vl::presentation::controls::GuiScrollView)
***********************************************************************/

			class gacui_tpimp_GuiScrollView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScrollView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetViewSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewBounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetViewBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalScroll", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalScroll", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalScroll", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVerticalScroll", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiScrollView :: IStyleProvider (vl::presentation::controls::GuiScrollView::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateHorizontalScrollStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateVerticalScrollStyle", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"DefaultScrollSize", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetDefaultScrollSize", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiScrollView :: StyleController (vl::presentation::controls::GuiScrollView::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AdjustView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetScrollView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						);
						AddProperty(
							(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalScroll", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetHorizontalScroll", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalScroll", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetVerticalScroll", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"InternalTableComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetInternalTableComposition", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"InternalContainerComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetInternalContainerComposition", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSelectableButton (vl::presentation::controls::GuiSelectableButton)
***********************************************************************/

			class gacui_tpimp_GuiSelectableButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSelectableButton", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupController", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetGroupController", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetGroupController", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelection", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAutoSelection", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSelection", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupController", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetGroupController", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetGroupController", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelection", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAutoSelection", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSelection", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupControllerChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_GroupControllerChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_GroupControllerChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelectionChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_AutoSelectionChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_AutoSelectionChanged", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SelectedChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSelectableButton :: GroupController (vl::presentation::controls::GuiSelectableButton::GroupController)
***********************************************************************/

				class gacui_tpimp_GroupController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"GroupController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Attach", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"Detach", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"OnSelectedChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiSelectableButton :: IStyleController (vl::presentation::controls::GuiSelectableButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};

/***********************************************************************
GuiSelectableButton :: MutexGroupController (vl::presentation::controls::GuiSelectableButton::MutexGroupController)
***********************************************************************/

				class gacui_tpimp_MutexGroupController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"MutexGroupController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"OnSelectedChanged", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSelectableListControl (vl::presentation::controls::GuiSelectableListControl)
***********************************************************************/

			class gacui_tpimp_GuiSelectableListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSelectableListControl", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ClearSelection", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"MultiSelect", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMultiSelect", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiSelect", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedItems", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectedItems", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MultiSelect", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMultiSelect", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiSelect", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SelectionChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectionChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSelectableListControl :: IItemStyleProvider (vl::presentation::controls::GuiSelectableListControl::IItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_IItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSideAlignedComposition (vl::presentation::elements::GuiSideAlignedComposition)
***********************************************************************/

			class gacui_tpimp_GuiSideAlignedComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSideAlignedComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxLength", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxLength", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxRatio", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxLength", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxLength", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxRatio", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxRatio", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxRatio", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSideAlignedComposition :: Direction (vl::presentation::elements::GuiSideAlignedComposition::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Left", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Left", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Top", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Top", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Right", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Right", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bottom", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Bottom", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSinglelineTextBox (vl::presentation::controls::GuiSinglelineTextBox)
***********************************************************************/

			class gacui_tpimp_GuiSinglelineTextBox : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSinglelineTextBox", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
GuiSinglelineTextBox :: IStyleProvider (vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiSinglelineTextBox :: StyleController (vl::presentation::controls::GuiSinglelineTextBox::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"RearrangeTextElement", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetTextBox", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElementOperator", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextElementOperator", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiSinglelineTextBox :: TextElementOperatorCallback (vl::presentation::controls::GuiSinglelineTextBox::TextElementOperatorCallback)
***********************************************************************/

				class gacui_tpimp_TextElementOperatorCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextElementOperatorCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"TextMargin", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Virtual))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSolidBackgroundElement (vl::presentation::elements::GuiSolidBackgroundElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidBackgroundElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiSolidBorderElement (vl::presentation::elements::GuiSolidBorderElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiSolidLabelElement (vl::presentation::elements::GuiSolidLabelElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidLabelElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"SetAlignments", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlignment", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlignment", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlignment", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlignment", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WrapLine", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWrapLine", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWrapLine", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEllipse", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetEllipse", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Multiline", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMultiline", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiline", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WrapLine", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWrapLine", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetWrapLine", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetEllipse", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetEllipse", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Multiline", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMultiline", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiline", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiStackComposition (vl::presentation::elements::GuiStackComposition)
***********************************************************************/

			class gacui_tpimp_GuiStackComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiStackComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"InsertStackItem", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"StackItems", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStackItems", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Padding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPadding", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetPadding", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Padding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPadding", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetPadding", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiStackComposition :: Direction (vl::presentation::elements::GuiStackComposition::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiStackItemComposition (vl::presentation::elements::GuiStackItemComposition)
***********************************************************************/

			class gacui_tpimp_GuiStackItemComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiStackItemComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTab (vl::presentation::controls::GuiTab)
***********************************************************************/

			class gacui_tpimp_GuiTab : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTab", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RemovePage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"MovePage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelectedPage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Pages", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPages", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedPage", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectedPage", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedPageChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SelectedPageChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedPageChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiTab :: ICommandExecutor (vl::presentation::controls::GuiTab::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"ShowTab", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
GuiTab :: IStyleController (vl::presentation::controls::GuiTab::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"InsertTab", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetTabText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"RemoveTab", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"MoveTab", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateTabPageStyleController", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetSelectedTab", IMemberDescriptor::Abstract))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiTableComposition (vl::presentation::elements::GuiTableComposition)
***********************************************************************/

			class gacui_tpimp_GuiTableComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTableComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetRowsAndColumns", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetSitedCell", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowOption", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetRowOption", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetColumnOption", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetColumnOption", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"UpdateCellBounds", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Rows", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRows", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Columns", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColumns", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellPadding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCellPadding", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCellPadding", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellArea", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCellArea", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellPadding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCellPadding", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCellPadding", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTabPage (vl::presentation::controls::GuiTabPage)
***********************************************************************/

			class gacui_tpimp_GuiTabPage : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Container", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetContainer", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnerTab", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetOwnerTab", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_TextChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_TextChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTextBoxCommonInterface (vl::presentation::controls::GuiTextBoxCommonInterface)
***********************************************************************/

			class gacui_tpimp_GuiTextBoxCommonInterface : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextBoxCommonInterface", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCut", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCopy", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanPaste", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SelectAll", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Cut", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Copy", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Paste", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowText", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetFragmentText", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowWidth", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetTextPosFromPoint", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPointFromTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRectFromTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNearestTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Select", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxWidth", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxWidth", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxHeight", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxHeight", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretSmall", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretSmall", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretLarge", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretLarge", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionChanged", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_SelectionChanged", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectionChanged", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTextElementOperator (vl::presentation::controls::GuiTextElementOperator)
***********************************************************************/

			class gacui_tpimp_GuiTextElementOperator : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextElementOperator", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNearestTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Select", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCut", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCopy", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanPaste", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SelectAll", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Cut", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Copy", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Paste", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextBoxCommonInterface", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTextBoxCommonInterface", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTextBoxCommonInterface", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextBoxCommonInterface", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTextBoxCommonInterface", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTextBoxCommonInterface", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiTextElementOperator :: DefaultCallback (vl::presentation::controls::GuiTextElementOperator::DefaultCallback)
***********************************************************************/

				class gacui_tpimp_DefaultCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"DefaultCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetLeftWord", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"GetRightWord", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"GetWord", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Virtual))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"PageRows", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetPageRows", IMemberDescriptor::Virtual))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiTextElementOperator :: ICallback (vl::presentation::controls::GuiTextElementOperator::ICallback)
***********************************************************************/

				class gacui_tpimp_ICallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetLeftWord", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetRightWord", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetWord", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"PageRows", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetPageRows", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextMargin", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiTextList (vl::presentation::controls::GuiTextList)
***********************************************************************/

			class gacui_tpimp_GuiTextList : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Items", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetItems", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTimeBasedAnimation (vl::presentation::elements::GuiTimeBasedAnimation)
***********************************************************************/

			class gacui_tpimp_GuiTimeBasedAnimation : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTimeBasedAnimation", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Restart", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTotalLength", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CurrentPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCurrentPosition", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTreeView (vl::presentation::controls::GuiTreeView)
***********************************************************************/

			class gacui_tpimp_GuiTreeView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTreeView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Nodes", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TreeViewStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTreeViewStyleProvider", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
GuiTreeView :: IStyleProvider (vl::presentation::controls::GuiTreeView::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemExpandingDecorator", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"TextColor", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetTextColor", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiVirtualListView (vl::presentation::controls::GuiVirtualListView)
***********************************************************************/

			class gacui_tpimp_GuiVirtualListView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualListView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ChangeItemStyle", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiVirtualTextList (vl::presentation::controls::GuiVirtualTextList)
***********************************************************************/

			class gacui_tpimp_GuiVirtualTextList : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualTextList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ChangeItemStyle", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiVirtualTreeListControl (vl::presentation::controls::GuiVirtualTreeListControl)
***********************************************************************/

			class gacui_tpimp_GuiVirtualTreeListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualTreeListControl", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetNodeStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeItemView", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNodeItemView", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeRootProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNodeRootProvider", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNodeStyleProvider", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiWindow (vl::presentation::controls::GuiWindow)
***********************************************************************/

			class gacui_tpimp_GuiWindow : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiWindow", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
GuiWindowComposition (vl::presentation::elements::GuiWindowComposition)
***********************************************************************/

			class gacui_tpimp_GuiWindowComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiWindowComposition", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"AttachedWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAttachedWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAttachedWindow", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AttachedWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAttachedWindow", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetAttachedWindow", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_ListViewItem (vl::collections::ICollection<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_MemoryNodeProvider (vl::collections::ICollection<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_TextItem (vl::collections::ICollection<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IDescriptable (vl::presentation::IDescriptable)
***********************************************************************/

			class gacui_tpimp_IDescriptable : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IDescriptable", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_ListViewItem (vl::collections::IEnumerable<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_MemoryNodeProvider (vl::collections::IEnumerable<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider> >)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_TextItem (vl::collections::IEnumerable<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerator_of_ListViewItem (vl::collections::IEnumerator<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_IEnumerator_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerator", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Clone", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Current", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Index", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Next", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Available", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Reset", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerator_of_TextItem (vl::collections::IEnumerator<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IEnumerator_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerator", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Clone", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Current", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Index", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Next", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Available", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Reset", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsAnimation (vl::presentation::elements::IGuiGraphicsAnimation)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsAnimation : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsAnimation", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Play", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Stop", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTotalLength", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CurrentPosition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCurrentPosition", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsElement (vl::presentation::elements::IGuiGraphicsElement)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsElement", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsElementFactory (vl::presentation::elements::IGuiGraphicsElementFactory)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsElementFactory : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRenderer (vl::presentation::elements::IGuiGraphicsRenderer)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRenderer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Initialize", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Finalize", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnElementStateChanged", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Abstract))
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinSize", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRendererFactory (vl::presentation::elements::IGuiGraphicsRendererFactory)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRendererFactory : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRenderTarget (vl::presentation::elements::IGuiGraphicsRenderTarget)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRenderTarget : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"StartRendering", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"StopRendering", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"PushClipper", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"PopClipper", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsClipperCoverWholeTarget", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Clipper", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClipper", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiMenuService (vl::presentation::controls::IGuiMenuService)
***********************************************************************/

			class gacui_tpimp_IGuiMenuService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiMenuService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsActiveState", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemExecuted", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuOpened", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuClosed", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredDirection", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetPreferredDirection", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OpeningMenu", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetOpeningMenu", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:

/***********************************************************************
IGuiMenuService :: Direction (vl::presentation::controls::IGuiMenuService::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
IList_of_int (vl::collections::IList<int,int>)
***********************************************************************/

			class gacui_tpimp_IList_of_int : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_ListViewColumn (vl::collections::IList<vl::Ptr<vl::presentation::controls::list::ListViewColumn>,vl::presentation::controls::list::ListViewColumn *>)
***********************************************************************/

			class gacui_tpimp_IList_of_ListViewColumn : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_ListViewItem (vl::collections::IList<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_IList_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_MemoryNodeProvider (vl::collections::IList<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_IList_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_TextItem (vl::collections::IList<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IList_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IMemberDescriptor :: MemberTypeEnum (vl::presentation::IMemberDescriptor::MemberTypeEnum)
***********************************************************************/

			class gacui_tpimp_IMemberDescriptor
			{
			public:
				class gacui_tpimp_MemberTypeEnum : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Static", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Static", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Abstract", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Abstract", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Virtual", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Virtual", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Normal", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Normal", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeAsyncService (vl::presentation::INativeAsyncService)
***********************************************************************/

			class gacui_tpimp_INativeAsyncService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeAsyncService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsInMainThread", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeCallbackService (vl::presentation::INativeCallbackService)
***********************************************************************/

			class gacui_tpimp_INativeCallbackService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeCallbackService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallListener", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"UninstallListener", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeClipboardService (vl::presentation::INativeClipboardService)
***********************************************************************/

			class gacui_tpimp_INativeClipboardService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeClipboardService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ContainsText", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeController (vl::presentation::INativeController)
***********************************************************************/

			class gacui_tpimp_INativeController : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeController", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CallbackService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ResourceService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"AsyncService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ClipboardService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ImageService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ScreenService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"WindowService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"InputService", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeControllerListener (vl::presentation::INativeControllerListener)
***********************************************************************/

			class gacui_tpimp_INativeControllerListener : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeControllerListener", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MouseMoving", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GlobalTimer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ClipboardUpdated", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"NativeWindowCreated", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"NativeWindowDestroying", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeCursor (vl::presentation::INativeCursor)
***********************************************************************/

			class gacui_tpimp_INativeCursor : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeCursor", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSystemCursor", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"SystemCursorType", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSystemCursorType", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:

/***********************************************************************
INativeCursor :: SystemCursorType (vl::presentation::INativeCursor::SystemCursorType)
***********************************************************************/

				class gacui_tpimp_SystemCursorType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"SmallWaiting", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SmallWaiting", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LargeWaiting", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LargeWaiting", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Arrow", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Arrow", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Cross", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Cross", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Hand", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Hand", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Help", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Help", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"IBeam", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_IBeam", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeAll", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SizeAll", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNESW", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SizeNESW", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNS", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SizeNS", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNWSE", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SizeNWSE", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeWE", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SizeWE", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LastSystemCursor", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_LastSystemCursor", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeImage (vl::presentation::INativeImage)
***********************************************************************/

			class gacui_tpimp_INativeImage : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImage", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetFrame", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ImageService", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetImageService", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Format", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFormat", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetFrameCount", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:

/***********************************************************************
INativeImage :: FormatType (vl::presentation::INativeImage::FormatType)
***********************************************************************/

				class gacui_tpimp_FormatType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Bmp", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Bmp", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Gif", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Gif", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Icon", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Icon", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Jpeg", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Jpeg", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Png", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Png", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Tiff", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Tiff", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Wmp", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Wmp", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Unknown", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Unknown", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeImageFrame (vl::presentation::INativeImageFrame)
***********************************************************************/

			class gacui_tpimp_INativeImageFrame : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImageFrame", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCache", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetCache", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveCache", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeImageFrameCache (vl::presentation::INativeImageFrameCache)
***********************************************************************/

			class gacui_tpimp_INativeImageFrameCache : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"OnAttach", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnDetach", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeImageService (vl::presentation::INativeImageService)
***********************************************************************/

			class gacui_tpimp_INativeImageService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImageService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateImageFromFile", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeInputService (vl::presentation::INativeInputService)
***********************************************************************/

			class gacui_tpimp_INativeInputService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeInputService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"StartHookMouse", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"StopHookMouse", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsHookingMouse", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"StartTimer", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"StopTimer", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsTimerEnabled", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsKeyPressing", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsKeyToggled", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeResourceService (vl::presentation::INativeResourceService)
***********************************************************************/

			class gacui_tpimp_INativeResourceService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeResourceService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetSystemCursor", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultSystemCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDefaultSystemCursor", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultFont", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDefaultFont", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetDefaultFont", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultFont", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDefaultFont", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetDefaultFont", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeScreen (vl::presentation::INativeScreen)
***********************************************************************/

			class gacui_tpimp_INativeScreen : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeScreen", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsPrimary", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientBounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Name", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetName", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeScreenService (vl::presentation::INativeScreenService)
***********************************************************************/

			class gacui_tpimp_INativeScreenService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeScreenService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetScreen", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetScreen", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"ScreenCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetScreenCount", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindow (vl::presentation::INativeWindow)
***********************************************************************/

			class gacui_tpimp_INativeWindow : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindow", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Show", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowDeactivated", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowRestored", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMaximized", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMinimized", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Hide", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsVisible", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Enable", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Disable", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsEnabled", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocus", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsFocused", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"SetActivate", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsActivated", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowInTaskBar", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"HideInTaskBar", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsAppearedInTaskBar", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"EnableActivate", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"DisableActivate", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IsEnabledActivate", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RequireCapture", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseCapture", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallListener", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"UninstallListener", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RedrawContent", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientBoundsInScreen", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientBoundsInScreen", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Title", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitle", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitle", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWindowCursor", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetWindowCursor", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlwaysPassFocusToParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Title", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitle", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitle", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowCursor", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetWindowCursor", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetWindowCursor", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlwaysPassFocusToParent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindowListener (vl::presentation::INativeWindowListener)
***********************************************************************/

			class gacui_tpimp_INativeWindowListener : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindowListener", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Moving", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Moved", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Enabled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Disabled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GotFocus", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"LostFocus", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Activated", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Deactivated", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Opened", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Closing", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Closed", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Paint", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Destroying", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Destroyed", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDoubleClick", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDoubleClick", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonDoubleClick", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"HorizontalWheel", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"VerticalWheel", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MouseMoving", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MouseEntered", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"MouseLeaved", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"KeyDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"KeyUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SysKeyDown", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SysKeyUp", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Char", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindowService (vl::presentation::INativeWindowService)
***********************************************************************/

			class gacui_tpimp_INativeWindowService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindowService", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateNativeWindow", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyNativeWindow", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetWindow", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Run", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"MainWindow", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMainWindow", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemPrimaryTextView (vl::presentation::controls::tree::INodeItemPrimaryTextView)
***********************************************************************/

			class gacui_tpimp_INodeItemPrimaryTextView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemPrimaryTextView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPrimaryTextViewText", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemStyleController (vl::presentation::controls::tree::INodeItemStyleController)
***********************************************************************/

			class gacui_tpimp_INodeItemStyleController : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemStyleController", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetNodeStyleProvider", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemStyleProvider (vl::presentation::controls::tree::INodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_INodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"BindItemStyleProvider", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"BindedItemStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBindedItemStyleProvider", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemView (vl::presentation::controls::tree::INodeItemView)
***********************************************************************/

			class gacui_tpimp_INodeItemView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestNode", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseNode", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateNodeVisibilityIndex", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INodeProvider (vl::presentation::controls::tree::INodeProvider)
***********************************************************************/

			class gacui_tpimp_INodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateTotalVisibleNodes", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestChild", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseChild", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ChildCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetChildCount", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Abstract))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeProviderCallback (vl::presentation::controls::tree::INodeProviderCallback)
***********************************************************************/

			class gacui_tpimp_INodeProviderCallback : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeProviderCallback", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnBeforeItemModified", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnAfterItemModified", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemExpanded", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemCollapsed", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
INodeRootProvider (vl::presentation::controls::tree::INodeRootProvider)
***********************************************************************/

			class gacui_tpimp_INodeRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeRootProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanGetNodeByVisibleIndex", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeByVisibleIndex", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"RootNode", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRootNode", IMemberDescriptor::Abstract))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_ColorEntry (vl::collections::IReadonlyList<vl::presentation::elements::text::ColorEntry,vl::presentation::elements::text::ColorEntry>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_ColorEntry : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_DescriptableValue (vl::collections::IReadonlyList<vl::presentation::DescriptableValue,vl::presentation::DescriptableValue>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_DescriptableValue : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiGraphicsComposition_raw_pointer (vl::collections::IReadonlyList<vl::presentation::elements::GuiGraphicsComposition *,vl::presentation::elements::GuiGraphicsComposition *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiListControl::IItemStyleController *,vl::presentation::controls::GuiListControl::IItemStyleController *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiStackItemComposition_raw_pointer (vl::collections::IReadonlyList<vl::presentation::elements::GuiStackItemComposition *,vl::presentation::elements::GuiStackItemComposition *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiTabPage_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiTabPage *,vl::presentation::controls::GuiTabPage *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiWindow_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiWindow *,vl::presentation::controls::GuiWindow *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_int (vl::collections::IReadonlyList<int,int>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_int : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_ListViewItem (vl::collections::IReadonlyList<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_MemoryNodeProvider (vl::collections::IReadonlyList<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_TextItem (vl::collections::IReadonlyList<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ItemProviderBase (vl::presentation::controls::list::ItemProviderBase)
***********************************************************************/

			class gacui_tpimp_ItemProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ItemProviderBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ItemStyleControllerBase (vl::presentation::controls::list::ItemStyleControllerBase)
***********************************************************************/

			class gacui_tpimp_ItemStyleControllerBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"IsCacheable", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IsInstalled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"OnInstalled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"OnUninstalled", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemStyleId", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
ITreeViewItemView (vl::presentation::controls::tree::ITreeViewItemView)
***********************************************************************/

			class gacui_tpimp_ITreeViewItemView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ITreeViewItemView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeImage", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeText", IMemberDescriptor::Abstract))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
IType :: TypeEnum (vl::presentation::IType::TypeEnum)
***********************************************************************/

			class gacui_tpimp_IType
			{
			public:
				class gacui_tpimp_TypeEnum : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"SInt8", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SInt8", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt8", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UInt8", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt16", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SInt16", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt16", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UInt16", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt32", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SInt32", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt32", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UInt32", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt64", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SInt64", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt64", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_UInt64", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Float", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Float", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bool", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Bool", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Char", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Char", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"String", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_String", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Enum", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Enum", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Struct", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Struct", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Class", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Class", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Pointer", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Pointer", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SmartPointer", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_SmartPointer", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Reference", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Reference", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RValueReference", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_RValueReference", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Array", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Array", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Const", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Const", IMemberDescriptor::Static))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Volatile", IMemberDescriptor::Static))
							->Getter(
								(new MethodDescriptor(L"get_Volatile", IMemberDescriptor::Static))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
List_of_IMethodDescriptor_raw_pointer (vl::collections::List<vl::presentation::IMethodDescriptor *,vl::presentation::IMethodDescriptor *>)
***********************************************************************/

			class gacui_tpimp_List_of_IMethodDescriptor_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"List", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
List_of_ObjectString_of_wchar_t (vl::collections::List<vl::ObjectString<wchar_t>,vl::ObjectString<wchar_t> >)
***********************************************************************/

			class gacui_tpimp_List_of_ObjectString_of_wchar_t : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListProvider_of_ListViewItem (vl::presentation::controls::list::ListProvider<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_ListProvider_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListProvider_of_TextItem (vl::presentation::controls::list::ListProvider<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ListProvider_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewBigIconContentProvider (vl::presentation::controls::list::ListViewBigIconContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewBigIconContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewBigIconContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewColumnItemArranger (vl::presentation::controls::list::ListViewColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_ListViewColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewColumnItemArranger", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
ListViewColumnItemArranger :: IColumnItemView (vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView)
***********************************************************************/

				class gacui_tpimp_IColumnItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IColumnItemView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetColumnSize", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"ColumnCount", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetColumnCount", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewColumnItemArranger :: IColumnItemViewCallback (vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback)
***********************************************************************/

				class gacui_tpimp_IColumnItemViewCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IColumnItemViewCallback", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"OnColumnChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"OnColumnSizeChanged", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewDetailContentProvider (vl::presentation::controls::list::ListViewDetailContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewDetailContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewDetailContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewInformationContentProvider (vl::presentation::controls::list::ListViewInformationContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewInformationContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewInformationContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItem (vl::presentation::controls::list::ListViewItem)
***********************************************************************/

			class gacui_tpimp_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"smallImage", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_smallImage", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_smallImage", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"largeImage", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_largeImage", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_largeImage", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"subItems", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_subItems", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_subItems", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItemProvider (vl::presentation::controls::list::ListViewItemProvider)
***********************************************************************/

			class gacui_tpimp_ListViewItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyDataColumnsUpdated", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyColumnsUpdated", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"DataColumns", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetDataColumns", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Columns", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetColumns", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItemStyleProvider (vl::presentation::controls::list::ListViewItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_ListViewItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IsItemStyleAttachedToListView", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"CreatedItemStyles", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCreatedItemStyles", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemContent (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContent)
***********************************************************************/

				class gacui_tpimp_IListViewItemContent : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemContent", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"ContentComposition", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetContentComposition", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"BackgroundDecorator", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetBackgroundDecorator", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemContentProvider (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContentProvider)
***********************************************************************/

				class gacui_tpimp_IListViewItemContentProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemContentProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemView (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemView)
***********************************************************************/

				class gacui_tpimp_IListViewItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetSmallImage", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetLargeImage", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetSubItem", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetDataColumn", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"DataColumnCount", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetDataColumnCount", IMemberDescriptor::Abstract))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ColumnCount", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetColumnCount", IMemberDescriptor::Abstract))
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: ListViewContentItemStyleController (vl::presentation::controls::list::ListViewItemStyleProvider::ListViewContentItemStyleController)
***********************************************************************/

				class gacui_tpimp_ListViewContentItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ListViewContentItemStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemContent", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetItemContent", IMemberDescriptor::Normal))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewItemStyleProviderBase (vl::presentation::controls::list::ListViewItemStyleProviderBase)
***********************************************************************/

			class gacui_tpimp_ListViewItemStyleProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemStyleProviderBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
ListViewItemStyleProviderBase :: ListViewItemStyleController (vl::presentation::controls::list::ListViewItemStyleProviderBase::ListViewItemStyleController)
***********************************************************************/

				class gacui_tpimp_ListViewItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ListViewItemStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewListContentProvider (vl::presentation::controls::list::ListViewListContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewListContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewListContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewSmallIconContentProvider (vl::presentation::controls::list::ListViewSmallIconContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewSmallIconContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewSmallIconContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListViewTileContentProvider (vl::presentation::controls::list::ListViewTileContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewTileContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewTileContentProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListWrapperProvider_of_ListViewItem (vl::presentation::controls::list::ListWrapperProvider<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_ListWrapperProvider_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"NotifyUpdate", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ListWrapperProvider_of_TextItem (vl::presentation::controls::list::ListWrapperProvider<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ListWrapperProvider_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"NotifyUpdate", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
Margin (vl::presentation::Margin)
***********************************************************************/

			class gacui_tpimp_Margin : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Margin", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Margin", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"left", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_left", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_left", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"top", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_top", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_top", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"right", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_right", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_right", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bottom", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_bottom", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_bottom", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
MemoryNodeProvider (vl::presentation::controls::tree::MemoryNodeProvider)
***********************************************************************/

			class gacui_tpimp_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeProvider", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyDataModified", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Children", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateTotalVisibleNodes", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestChild", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseChild", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Data", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetData", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetData", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ChildCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetChildCount", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Data", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetData", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetData", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
MemoryNodeRootProvider (vl::presentation::controls::tree::MemoryNodeRootProvider)
***********************************************************************/

			class gacui_tpimp_MemoryNodeRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeRootProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"RootNode", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRootNode", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
NativeWindowCharInfo (vl::presentation::NativeWindowCharInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowCharInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NativeWindowKeyInfo (vl::presentation::NativeWindowKeyInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowKeyInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NativeWindowMouseInfo (vl::presentation::NativeWindowMouseInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowMouseInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NodeItemProvider (vl::presentation::controls::tree::NodeItemProvider)
***********************************************************************/

			class gacui_tpimp_NodeItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeItemProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Root", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRoot", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
NodeItemStyleProvider (vl::presentation::controls::tree::NodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_NodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeItemStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
NodeRootProviderBase (vl::presentation::controls::tree::NodeRootProviderBase)
***********************************************************************/

			class gacui_tpimp_NodeRootProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeRootProviderBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CanGetNodeByVisibleIndex", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeByVisibleIndex", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
ObjectString_of_wchar_t (vl::ObjectString<wchar_t>)
***********************************************************************/

			class gacui_tpimp_ObjectString_of_wchar_t : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ObjectString", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"ObjectString", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"ObjectString", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"ObjectString", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"ObjectString", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Buffer", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator+=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator+", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Length", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Left", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Right", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Sub", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"Empty", IMemberDescriptor::Static))
						->Getter(
							(new MethodDescriptor(L"get_Empty", IMemberDescriptor::Static))
						)
						->Setter(
							(new MethodDescriptor(L"set_Empty", IMemberDescriptor::Static))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Point (vl::presentation::Point)
***********************************************************************/

			class gacui_tpimp_Point : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Point", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Point", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"x", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_x", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_x", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_y", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_y", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
RangedItemArrangerBase (vl::presentation::controls::list::RangedItemArrangerBase)
***********************************************************************/

			class gacui_tpimp_RangedItemArrangerBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"RangedItemArrangerBase", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemModified", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetVisibleStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetVisibleIndex", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"OnViewChanged", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Virtual))
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Rect (vl::presentation::Rect)
***********************************************************************/

			class gacui_tpimp_Rect : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftTop", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RightBottom", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Left", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Right", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Width", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Top", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Bottom", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Height", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Expand", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Expand", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Move", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Move", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"x1", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_x1", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_x1", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y1", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_y1", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_y1", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"x2", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_x2", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_x2", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y2", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_y2", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_y2", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Size (vl::presentation::Size)
***********************************************************************/

			class gacui_tpimp_Size : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Size", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"Size", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"x", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_x", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_x", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_y", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_y", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextItem (vl::presentation::controls::list::TextItem)
***********************************************************************/

			class gacui_tpimp_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextItemProvider (vl::presentation::controls::list::TextItemProvider)
***********************************************************************/

			class gacui_tpimp_TextItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItemProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
TextItemStyleProvider (vl::presentation::controls::list::TextItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_TextItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItemStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:

/***********************************************************************
TextItemStyleProvider :: ITextItemStyleProvider (vl::presentation::controls::list::TextItemStyleProvider::ITextItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_ITextItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ITextItemStyleProvider", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateBackgroundStyleController", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateBulletStyleController", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
TextItemStyleProvider :: ITextItemView (vl::presentation::controls::list::TextItemStyleProvider::ITextItemView)
***********************************************************************/

				class gacui_tpimp_ITextItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ITextItemView", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"SetCheckedSilently", IMemberDescriptor::Abstract))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
					}
				
				public:
				};

/***********************************************************************
TextItemStyleProvider :: TextItemStyleController (vl::presentation::controls::list::TextItemStyleProvider::TextItemStyleController)
***********************************************************************/

				class gacui_tpimp_TextItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextItemStyleController", IMemberDescriptor::Normal))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
TextLine (vl::presentation::elements::text::TextLine)
***********************************************************************/

			class gacui_tpimp_TextLine : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextLine", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Initialize", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Finalize", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsReady", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Split", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"AppendAndFinalize", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateBufferLength", IMemberDescriptor::Static))
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"att", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_att", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_att", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"availableOffsetCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_availableOffsetCount", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_availableOffsetCount", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bufferLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_bufferLength", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_bufferLength", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"dataLength", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_dataLength", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_dataLength", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextLines (vl::presentation::elements::text::TextLines)
***********************************************************************/

			class gacui_tpimp_TextLines : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextLines", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetLine", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveLines", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"IsAvailable", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Normalize", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"ClearMeasurement", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"MeasureRow", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowWidth", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetTextPosFromPoint", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPointFromTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRectFromTextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"Count", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCount", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCharMeasurer", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCharMeasurer", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TabSpaceCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTabSpaceCount", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTabSpaceCount", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxWidth", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxWidth", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxHeight", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetMaxHeight", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetCharMeasurer", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetCharMeasurer", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TabSpaceCount", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetTabSpaceCount", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"SetTabSpaceCount", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextPos (vl::presentation::TextPos)
***********************************************************************/

			class gacui_tpimp_TextPos : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextPos", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextPos", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"row", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_row", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_row", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"column", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_column", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_column", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewItem (vl::presentation::controls::tree::TreeViewItem)
***********************************************************************/

			class gacui_tpimp_TreeViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItem", IMemberDescriptor::Normal))
					);
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItem", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"image", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_image", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_image", IMemberDescriptor::Normal))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewItemRootProvider (vl::presentation::controls::tree::TreeViewItemRootProvider)
***********************************************************************/

			class gacui_tpimp_TreeViewItemRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItemRootProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewNodeItemStyleProvider (vl::presentation::controls::tree::TreeViewNodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_TreeViewNodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewNodeItemStyleProvider", IMemberDescriptor::Normal))
					);
					AddMethod(
						(new MethodDescriptor(L"BindItemStyleProvider", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
					);
					AddProperty(
						(new PropertyDescriptor(L"BindedItemStyleProvider", IMemberDescriptor::Normal))
						->Getter(
							(new MethodDescriptor(L"GetBindedItemStyleProvider", IMemberDescriptor::Virtual))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Helper Functions
***********************************************************************/

			ITypeProvider* CreateDefaultTypeProvider()
			{
				TypeProvider* typeProvider=new TypeProvider;
				Description<vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_AxisAlignedItemCoordinateTransformer", new gacui_tpimp_AxisAlignedItemCoordinateTransformer)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::DefaultItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_DefaultItemCoordinateTransformer", new gacui_tpimp_DefaultItemCoordinateTransformer)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedHeightItemArranger>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedHeightItemArranger", new gacui_tpimp_FixedHeightItemArranger)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedHeightMultiColumnItemArranger>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedHeightMultiColumnItemArranger", new gacui_tpimp_FixedHeightMultiColumnItemArranger)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedSizeMultiColumnItemArranger>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedSizeMultiColumnItemArranger", new gacui_tpimp_FixedSizeMultiColumnItemArranger)->GetTypeDescriptor());
				Description<vl::presentation::elements::Gui3DBorderElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_Gui3DBorderElement", new gacui_tpimp_Gui3DBorderElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::Gui3DSplitterElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_Gui3DSplitterElement", new gacui_tpimp_Gui3DSplitterElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiBoundsComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiBoundsComposition", new gacui_tpimp_GuiBoundsComposition)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiButton>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiButton", new gacui_tpimp_GuiButton)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiButton::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiButton :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiCellComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiCellComposition", new gacui_tpimp_GuiCellComposition)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiColorizedTextElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiColorizedTextElement", new gacui_tpimp_GuiColorizedTextElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiColorizedTextElement::ICallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiColorizedTextElement :: gacui_tpimp_ICallback", new gacui_tpimp_GuiColorizedTextElement :: gacui_tpimp_ICallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComboBoxBase", new gacui_tpimp_GuiComboBoxBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase::ICommandExecutor>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_ICommandExecutor)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxListControl>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComboBoxListControl", new gacui_tpimp_GuiComboBoxListControl)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComponent>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComponent", new gacui_tpimp_GuiComponent)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiControl", new gacui_tpimp_GuiControl)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiControl :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiControl :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl::IStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiControl :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiControl :: gacui_tpimp_IStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControlHost>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiControlHost", new gacui_tpimp_GuiControlHost)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGradientBackgroundElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGradientBackgroundElement", new gacui_tpimp_GuiGradientBackgroundElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsComposition", new gacui_tpimp_GuiGraphicsComposition)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs :: gacui_tpimp_IHandler)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs :: gacui_tpimp_IHandler)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs :: gacui_tpimp_IHandler)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs :: gacui_tpimp_IHandler)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs :: gacui_tpimp_IHandler)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsHost>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsHost", new gacui_tpimp_GuiGraphicsHost)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsSite>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsSite", new gacui_tpimp_GuiGraphicsSite)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiImageFrameElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiImageFrameElement", new gacui_tpimp_GuiImageFrameElement)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListControl", new gacui_tpimp_GuiListControl)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemArranger>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArranger", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArranger)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemArrangerCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArrangerCallback", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArrangerCallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemCoordinateTransformer", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemCoordinateTransformer)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemPrimaryTextView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemPrimaryTextView", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemPrimaryTextView)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProvider", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemProviderCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProviderCallback", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProviderCallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleController", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleProvider", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListView", new gacui_tpimp_GuiListView)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListViewBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListViewBase", new gacui_tpimp_GuiListViewBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListViewBase::IStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListViewBase :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiListViewBase :: gacui_tpimp_IStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenu>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenu", new gacui_tpimp_GuiMenu)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuBar>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenuBar", new gacui_tpimp_GuiMenuBar)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuButton>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenuButton", new gacui_tpimp_GuiMenuButton)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuButton::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiMenuButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiMenuButton :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox", new gacui_tpimp_GuiMultilineTextBox)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox::StyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_StyleController", new gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_StyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox::TextElementOperatorCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_TextElementOperatorCallback", new gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_TextElementOperatorCallback)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiPartialViewComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPartialViewComposition", new gacui_tpimp_GuiPartialViewComposition)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiPolygonElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPolygonElement", new gacui_tpimp_GuiPolygonElement)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiPopup>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPopup", new gacui_tpimp_GuiPopup)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiRoundBorderElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiRoundBorderElement", new gacui_tpimp_GuiRoundBorderElement)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScroll", new gacui_tpimp_GuiScroll)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll::ICommandExecutor>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScroll :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiScroll :: gacui_tpimp_ICommandExecutor)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScroll :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiScroll :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollContainer>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollContainer", new gacui_tpimp_GuiScrollContainer)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollContainer::StyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollContainer :: gacui_tpimp_StyleController", new gacui_tpimp_GuiScrollContainer :: gacui_tpimp_StyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollView", new gacui_tpimp_GuiScrollView)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView::IStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScrollView :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiScrollView :: gacui_tpimp_IStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView::StyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollView :: gacui_tpimp_StyleController", new gacui_tpimp_GuiScrollView :: gacui_tpimp_StyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton", new gacui_tpimp_GuiSelectableButton)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::GroupController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_GroupController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_GroupController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::MutexGroupController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_MutexGroupController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_MutexGroupController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableListControl>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableListControl", new gacui_tpimp_GuiSelectableListControl)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableListControl::IItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSelectableListControl :: gacui_tpimp_IItemStyleProvider", new gacui_tpimp_GuiSelectableListControl :: gacui_tpimp_IItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSideAlignedComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSideAlignedComposition", new gacui_tpimp_GuiSideAlignedComposition)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox", new gacui_tpimp_GuiSinglelineTextBox)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_IStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::StyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_StyleController", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_StyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::TextElementOperatorCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_TextElementOperatorCallback", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_TextElementOperatorCallback)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidBackgroundElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidBackgroundElement", new gacui_tpimp_GuiSolidBackgroundElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidBorderElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidBorderElement", new gacui_tpimp_GuiSolidBorderElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidLabelElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidLabelElement", new gacui_tpimp_GuiSolidLabelElement)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiStackComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiStackComposition", new gacui_tpimp_GuiStackComposition)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiStackItemComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiStackItemComposition", new gacui_tpimp_GuiStackItemComposition)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTab", new gacui_tpimp_GuiTab)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab::ICommandExecutor>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTab :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiTab :: gacui_tpimp_ICommandExecutor)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab::IStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTab :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiTab :: gacui_tpimp_IStyleController)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiTableComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTableComposition", new gacui_tpimp_GuiTableComposition)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTabPage>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTabPage", new gacui_tpimp_GuiTabPage)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextBoxCommonInterface>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextBoxCommonInterface", new gacui_tpimp_GuiTextBoxCommonInterface)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextElementOperator", new gacui_tpimp_GuiTextElementOperator)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator::DefaultCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_DefaultCallback", new gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_DefaultCallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator::ICallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_ICallback", new gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_ICallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextList>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextList", new gacui_tpimp_GuiTextList)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiTimeBasedAnimation>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTimeBasedAnimation", new gacui_tpimp_GuiTimeBasedAnimation)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTreeView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTreeView", new gacui_tpimp_GuiTreeView)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTreeView::IStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTreeView :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiTreeView :: gacui_tpimp_IStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualListView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualListView", new gacui_tpimp_GuiVirtualListView)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualTextList>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualTextList", new gacui_tpimp_GuiVirtualTextList)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualTreeListControl>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualTreeListControl", new gacui_tpimp_GuiVirtualTreeListControl)->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiWindow>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiWindow", new gacui_tpimp_GuiWindow)->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiWindowComposition>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiWindowComposition", new gacui_tpimp_GuiWindowComposition)->GetTypeDescriptor());
				Description<vl::presentation::elements::IGuiGraphicsAnimation>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsAnimation", new gacui_tpimp_IGuiGraphicsAnimation)->GetTypeDescriptor());
				Description<vl::presentation::elements::IGuiGraphicsElement>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsElement", new gacui_tpimp_IGuiGraphicsElement)->GetTypeDescriptor());
				Description<vl::presentation::controls::IGuiMenuService>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiMenuService", new gacui_tpimp_IGuiMenuService)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemPrimaryTextView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemPrimaryTextView", new gacui_tpimp_INodeItemPrimaryTextView)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemStyleController", new gacui_tpimp_INodeItemStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemStyleProvider", new gacui_tpimp_INodeItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemView", new gacui_tpimp_INodeItemView)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeProvider", new gacui_tpimp_INodeProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeProviderCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeProviderCallback", new gacui_tpimp_INodeProviderCallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeRootProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeRootProvider", new gacui_tpimp_INodeRootProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ItemProviderBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ItemProviderBase", new gacui_tpimp_ItemProviderBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ItemStyleControllerBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ItemStyleControllerBase", new gacui_tpimp_ItemStyleControllerBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::ITreeViewItemView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ITreeViewItemView", new gacui_tpimp_ITreeViewItemView)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewBigIconContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewBigIconContentProvider", new gacui_tpimp_ListViewBigIconContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewColumnItemArranger", new gacui_tpimp_ListViewColumnItemArranger)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemView", new gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemView)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemViewCallback", new gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemViewCallback)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewDetailContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewDetailContentProvider", new gacui_tpimp_ListViewDetailContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewInformationContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewInformationContentProvider", new gacui_tpimp_ListViewInformationContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemProvider", new gacui_tpimp_ListViewItemProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProvider", new gacui_tpimp_ListViewItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContent>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContent", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContent)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContentProvider", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemView", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemView)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::ListViewContentItemStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_ListViewContentItemStyleController", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_ListViewContentItemStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProviderBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProviderBase", new gacui_tpimp_ListViewItemStyleProviderBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewListContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewListContentProvider", new gacui_tpimp_ListViewListContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewSmallIconContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewSmallIconContentProvider", new gacui_tpimp_ListViewSmallIconContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewTileContentProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewTileContentProvider", new gacui_tpimp_ListViewTileContentProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::MemoryNodeProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_MemoryNodeProvider", new gacui_tpimp_MemoryNodeProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::MemoryNodeRootProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_MemoryNodeRootProvider", new gacui_tpimp_MemoryNodeRootProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeItemProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeItemProvider", new gacui_tpimp_NodeItemProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeItemStyleProvider", new gacui_tpimp_NodeItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeRootProviderBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeRootProviderBase", new gacui_tpimp_NodeRootProviderBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::RangedItemArrangerBase>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_RangedItemArrangerBase", new gacui_tpimp_RangedItemArrangerBase)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemProvider", new gacui_tpimp_TextItemProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemStyleProvider", new gacui_tpimp_TextItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::ITextItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemStyleProvider", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemStyleProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::ITextItemView>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Interface, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemView", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemView)->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::TextItemStyleController>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_TextItemStyleController", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_TextItemStyleController)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewItem>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewItem", new gacui_tpimp_TreeViewItem)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewItemRootProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewItemRootProvider", new gacui_tpimp_TreeViewItemRootProvider)->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewNodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewNodeItemStyleProvider", new gacui_tpimp_TreeViewNodeItemStyleProvider)->GetTypeDescriptor());
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_Alignment :: gacui_tpimp_Type", new gacui_tpimp_Alignment :: gacui_tpimp_Type);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_Array_of_ColorEntry", new gacui_tpimp_Array_of_ColorEntry);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_AxisAlignedItemCoordinateTransformer :: gacui_tpimp_Alignment", new gacui_tpimp_AxisAlignedItemCoordinateTransformer :: gacui_tpimp_Alignment);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_CharAtt", new gacui_tpimp_CharAtt);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_CharMeasurer", new gacui_tpimp_CharMeasurer);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Color", new gacui_tpimp_Color);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_DescriptableObject", new gacui_tpimp_DescriptableObject);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_ElementShape :: gacui_tpimp_Type", new gacui_tpimp_ElementShape :: gacui_tpimp_Type);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_FontProperties", new gacui_tpimp_FontProperties);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_Gui3DSplitterElement :: gacui_tpimp_Direction", new gacui_tpimp_Gui3DSplitterElement :: gacui_tpimp_Direction);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiApplication", new gacui_tpimp_GuiApplication);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiButton :: gacui_tpimp_ControlState", new gacui_tpimp_GuiButton :: gacui_tpimp_ControlState);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiCellOption", new gacui_tpimp_GuiCellOption);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiCellOption :: gacui_tpimp_ComposeType", new gacui_tpimp_GuiCellOption :: gacui_tpimp_ComposeType);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiCharEventArgs", new gacui_tpimp_GuiCharEventArgs);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiEventArgs", new gacui_tpimp_GuiEventArgs);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGradientBackgroundElement :: gacui_tpimp_Direction", new gacui_tpimp_GuiGradientBackgroundElement :: gacui_tpimp_Direction);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsAnimationManager", new gacui_tpimp_GuiGraphicsAnimationManager);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_MinSizeLimitation", new gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_MinSizeLimitation);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_ParentSizeAffection", new gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_ParentSizeAffection);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEventReceiver", new gacui_tpimp_GuiGraphicsEventReceiver);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsResourceManager", new gacui_tpimp_GuiGraphicsResourceManager);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiImageData", new gacui_tpimp_GuiImageData);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiKeyEventArgs", new gacui_tpimp_GuiKeyEventArgs);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiMouseEventArgs", new gacui_tpimp_GuiMouseEventArgs);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiRequestEventArgs", new gacui_tpimp_GuiRequestEventArgs);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiSideAlignedComposition :: gacui_tpimp_Direction", new gacui_tpimp_GuiSideAlignedComposition :: gacui_tpimp_Direction);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiStackComposition :: gacui_tpimp_Direction", new gacui_tpimp_GuiStackComposition :: gacui_tpimp_Direction);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_ListViewItem", new gacui_tpimp_ICollection_of_ListViewItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_MemoryNodeProvider", new gacui_tpimp_ICollection_of_MemoryNodeProvider);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_TextItem", new gacui_tpimp_ICollection_of_TextItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IDescriptable", new gacui_tpimp_IDescriptable);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_ListViewItem", new gacui_tpimp_IEnumerable_of_ListViewItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_MemoryNodeProvider", new gacui_tpimp_IEnumerable_of_MemoryNodeProvider);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_TextItem", new gacui_tpimp_IEnumerable_of_TextItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerator_of_ListViewItem", new gacui_tpimp_IEnumerator_of_ListViewItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerator_of_TextItem", new gacui_tpimp_IEnumerator_of_TextItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsElementFactory", new gacui_tpimp_IGuiGraphicsElementFactory);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRenderer", new gacui_tpimp_IGuiGraphicsRenderer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRendererFactory", new gacui_tpimp_IGuiGraphicsRendererFactory);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRenderTarget", new gacui_tpimp_IGuiGraphicsRenderTarget);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IGuiMenuService :: gacui_tpimp_Direction", new gacui_tpimp_IGuiMenuService :: gacui_tpimp_Direction);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_int", new gacui_tpimp_IList_of_int);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_ListViewColumn", new gacui_tpimp_IList_of_ListViewColumn);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_ListViewItem", new gacui_tpimp_IList_of_ListViewItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_MemoryNodeProvider", new gacui_tpimp_IList_of_MemoryNodeProvider);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_TextItem", new gacui_tpimp_IList_of_TextItem);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IMemberDescriptor :: gacui_tpimp_MemberTypeEnum", new gacui_tpimp_IMemberDescriptor :: gacui_tpimp_MemberTypeEnum);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeAsyncService", new gacui_tpimp_INativeAsyncService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeCallbackService", new gacui_tpimp_INativeCallbackService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeClipboardService", new gacui_tpimp_INativeClipboardService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeController", new gacui_tpimp_INativeController);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeControllerListener", new gacui_tpimp_INativeControllerListener);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeCursor", new gacui_tpimp_INativeCursor);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_INativeCursor :: gacui_tpimp_SystemCursorType", new gacui_tpimp_INativeCursor :: gacui_tpimp_SystemCursorType);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImage", new gacui_tpimp_INativeImage);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_INativeImage :: gacui_tpimp_FormatType", new gacui_tpimp_INativeImage :: gacui_tpimp_FormatType);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageFrame", new gacui_tpimp_INativeImageFrame);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageFrameCache", new gacui_tpimp_INativeImageFrameCache);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageService", new gacui_tpimp_INativeImageService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeInputService", new gacui_tpimp_INativeInputService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeResourceService", new gacui_tpimp_INativeResourceService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeScreen", new gacui_tpimp_INativeScreen);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeScreenService", new gacui_tpimp_INativeScreenService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindow", new gacui_tpimp_INativeWindow);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindowListener", new gacui_tpimp_INativeWindowListener);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindowService", new gacui_tpimp_INativeWindowService);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_ColorEntry", new gacui_tpimp_IReadonlyList_of_ColorEntry);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_IReadonlyList_of_DescriptableValue", new gacui_tpimp_IReadonlyList_of_DescriptableValue);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_int", new gacui_tpimp_IReadonlyList_of_int);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_ListViewItem", new gacui_tpimp_IReadonlyList_of_ListViewItem);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_MemoryNodeProvider", new gacui_tpimp_IReadonlyList_of_MemoryNodeProvider);
				typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_TextItem", new gacui_tpimp_IReadonlyList_of_TextItem);
				typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IType :: gacui_tpimp_TypeEnum", new gacui_tpimp_IType :: gacui_tpimp_TypeEnum);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_List_of_IMethodDescriptor_raw_pointer", new gacui_tpimp_List_of_IMethodDescriptor_raw_pointer);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_List_of_ObjectString_of_wchar_t", new gacui_tpimp_List_of_ObjectString_of_wchar_t);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListProvider_of_ListViewItem", new gacui_tpimp_ListProvider_of_ListViewItem);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListProvider_of_TextItem", new gacui_tpimp_ListProvider_of_TextItem);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_ListViewItem", new gacui_tpimp_ListViewItem);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProviderBase :: gacui_tpimp_ListViewItemStyleController", new gacui_tpimp_ListViewItemStyleProviderBase :: gacui_tpimp_ListViewItemStyleController);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListWrapperProvider_of_ListViewItem", new gacui_tpimp_ListWrapperProvider_of_ListViewItem);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListWrapperProvider_of_TextItem", new gacui_tpimp_ListWrapperProvider_of_TextItem);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Margin", new gacui_tpimp_Margin);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowCharInfo", new gacui_tpimp_NativeWindowCharInfo);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowKeyInfo", new gacui_tpimp_NativeWindowKeyInfo);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowMouseInfo", new gacui_tpimp_NativeWindowMouseInfo);
				typeProvider->CreateType(IType::Class, L"gacui_tpimp_ObjectString_of_wchar_t", new gacui_tpimp_ObjectString_of_wchar_t);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Point", new gacui_tpimp_Point);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Rect", new gacui_tpimp_Rect);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Size", new gacui_tpimp_Size);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextItem", new gacui_tpimp_TextItem);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextLine", new gacui_tpimp_TextLine);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextLines", new gacui_tpimp_TextLines);
				typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextPos", new gacui_tpimp_TextPos);
				return typeProvider;
			}
		}
	}
}

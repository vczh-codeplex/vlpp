/***********************************************************************
DO NOT MODIFY!!!
THIS FILE IS GENERATED BY _TranslateXMLtoCode.exe

Developer: 陈梓瀚(vczh)
***********************************************************************/

#include "GuiTypeDescriptorImpProvider_codegen.h"
#include "..\GacUI.h"

namespace vl
{
	namespace presentation
	{
		namespace reflection_implementation
		{

/***********************************************************************
Type Caching
***********************************************************************/

			struct gacui_tpimp_type_cache_table_structure
			{
				Type* primary_SInt8;
				Type* primary_SInt16;
				Type* primary_SInt32;
				Type* primary_SInt64;
				Type* primary_UInt8;
				Type* primary_UInt16;
				Type* primary_UInt32;
				Type* primary_UInt64;
				Type* primary_Float;
				Type* primary_Double;
				Type* primary_Char;
				Type* primary_String;
				Type* primary_Bool;
				
				Type* cache_AxisAlignedItemCoordinateTransformer;
				Type* cache_CommonScrollStyle;
				Type* cache_CommonTrackStyle;
				Type* cache_DefaultItemCoordinateTransformer;
				Type* cache_FixedHeightItemArranger;
				Type* cache_FixedHeightMultiColumnItemArranger;
				Type* cache_FixedSizeMultiColumnItemArranger;
				Type* cache_Gui3DBorderElement;
				Type* cache_Gui3DSplitterElement;
				Type* cache_GuiBoundsComposition;
				Type* cache_GuiButton;
				Type* cache_GuiButton_member_IStyleController;
				Type* cache_GuiCellComposition;
				Type* cache_GuiColorizedTextElement;
				Type* cache_GuiColorizedTextElement_member_ICallback;
				Type* cache_GuiComboBoxBase;
				Type* cache_GuiComboBoxBase_member_ICommandExecutor;
				Type* cache_GuiComboBoxBase_member_IStyleController;
				Type* cache_GuiComboBoxListControl;
				Type* cache_GuiComponent;
				Type* cache_GuiControl;
				Type* cache_GuiControl_member_IStyleController;
				Type* cache_GuiControl_member_IStyleProvider;
				Type* cache_GuiControlHost;
				Type* cache_GuiGradientBackgroundElement;
				Type* cache_GuiGraphicsComposition;
				Type* cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler;
				Type* cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler;
				Type* cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler;
				Type* cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler;
				Type* cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler;
				Type* cache_GuiGraphicsHost;
				Type* cache_GuiGraphicsSite;
				Type* cache_GuiImageFrameElement;
				Type* cache_GuiListControl;
				Type* cache_GuiListControl_member_IItemArranger;
				Type* cache_GuiListControl_member_IItemArrangerCallback;
				Type* cache_GuiListControl_member_IItemCoordinateTransformer;
				Type* cache_GuiListControl_member_IItemPrimaryTextView;
				Type* cache_GuiListControl_member_IItemProvider;
				Type* cache_GuiListControl_member_IItemProviderCallback;
				Type* cache_GuiListControl_member_IItemStyleController;
				Type* cache_GuiListControl_member_IItemStyleProvider;
				Type* cache_GuiListView;
				Type* cache_GuiListViewBase;
				Type* cache_GuiListViewBase_member_IStyleProvider;
				Type* cache_GuiMenu;
				Type* cache_GuiMenuBar;
				Type* cache_GuiMenuButton;
				Type* cache_GuiMenuButton_member_IStyleController;
				Type* cache_GuiMultilineTextBox;
				Type* cache_GuiMultilineTextBox_member_StyleController;
				Type* cache_GuiMultilineTextBox_member_TextElementOperatorCallback;
				Type* cache_GuiPartialViewComposition;
				Type* cache_GuiPolygonElement;
				Type* cache_GuiPopup;
				Type* cache_GuiRoundBorderElement;
				Type* cache_GuiScroll;
				Type* cache_GuiScroll_member_ICommandExecutor;
				Type* cache_GuiScroll_member_IStyleController;
				Type* cache_GuiScrollContainer;
				Type* cache_GuiScrollContainer_member_StyleController;
				Type* cache_GuiScrollView;
				Type* cache_GuiScrollView_member_IStyleProvider;
				Type* cache_GuiScrollView_member_StyleController;
				Type* cache_GuiSelectableButton;
				Type* cache_GuiSelectableButton_member_GroupController;
				Type* cache_GuiSelectableButton_member_IStyleController;
				Type* cache_GuiSelectableButton_member_MutexGroupController;
				Type* cache_GuiSelectableListControl;
				Type* cache_GuiSelectableListControl_member_IItemStyleProvider;
				Type* cache_GuiSideAlignedComposition;
				Type* cache_GuiSinglelineTextBox;
				Type* cache_GuiSinglelineTextBox_member_IStyleProvider;
				Type* cache_GuiSinglelineTextBox_member_StyleController;
				Type* cache_GuiSinglelineTextBox_member_TextElementOperatorCallback;
				Type* cache_GuiSolidBackgroundElement;
				Type* cache_GuiSolidBorderElement;
				Type* cache_GuiSolidLabelElement;
				Type* cache_GuiStackComposition;
				Type* cache_GuiStackItemComposition;
				Type* cache_GuiTab;
				Type* cache_GuiTab_member_ICommandExecutor;
				Type* cache_GuiTab_member_IStyleController;
				Type* cache_GuiTableComposition;
				Type* cache_GuiTabPage;
				Type* cache_GuiTextBoxCommonInterface;
				Type* cache_GuiTextElementOperator;
				Type* cache_GuiTextElementOperator_member_DefaultCallback;
				Type* cache_GuiTextElementOperator_member_ICallback;
				Type* cache_GuiTextList;
				Type* cache_GuiTimeBasedAnimation;
				Type* cache_GuiTreeView;
				Type* cache_GuiTreeView_member_IStyleProvider;
				Type* cache_GuiVirtualListView;
				Type* cache_GuiVirtualTextList;
				Type* cache_GuiVirtualTreeListControl;
				Type* cache_GuiWindow;
				Type* cache_GuiWindowComposition;
				Type* cache_IGuiGraphicsAnimation;
				Type* cache_IGuiGraphicsElement;
				Type* cache_IGuiMenuService;
				Type* cache_INodeItemPrimaryTextView;
				Type* cache_INodeItemStyleController;
				Type* cache_INodeItemStyleProvider;
				Type* cache_INodeItemView;
				Type* cache_INodeProvider;
				Type* cache_INodeProviderCallback;
				Type* cache_INodeRootProvider;
				Type* cache_ItemProviderBase;
				Type* cache_ItemStyleControllerBase;
				Type* cache_ITreeViewItemView;
				Type* cache_ListViewBigIconContentProvider;
				Type* cache_ListViewColumnItemArranger;
				Type* cache_ListViewColumnItemArranger_member_IColumnItemView;
				Type* cache_ListViewColumnItemArranger_member_IColumnItemViewCallback;
				Type* cache_ListViewDetailContentProvider;
				Type* cache_ListViewInformationContentProvider;
				Type* cache_ListViewItemProvider;
				Type* cache_ListViewItemStyleProvider;
				Type* cache_ListViewItemStyleProvider_member_IListViewItemContent;
				Type* cache_ListViewItemStyleProvider_member_IListViewItemContentProvider;
				Type* cache_ListViewItemStyleProvider_member_IListViewItemView;
				Type* cache_ListViewItemStyleProvider_member_ListViewContentItemStyleController;
				Type* cache_ListViewItemStyleProviderBase;
				Type* cache_ListViewListContentProvider;
				Type* cache_ListViewSmallIconContentProvider;
				Type* cache_ListViewTileContentProvider;
				Type* cache_MemoryNodeProvider;
				Type* cache_MemoryNodeRootProvider;
				Type* cache_NodeItemProvider;
				Type* cache_NodeItemStyleProvider;
				Type* cache_NodeRootProviderBase;
				Type* cache_RangedItemArrangerBase;
				Type* cache_TextItemProvider;
				Type* cache_TextItemStyleProvider;
				Type* cache_TextItemStyleProvider_member_ITextItemStyleProvider;
				Type* cache_TextItemStyleProvider_member_ITextItemView;
				Type* cache_TextItemStyleProvider_member_TextItemStyleController;
				Type* cache_TreeViewItem;
				Type* cache_TreeViewItemRootProvider;
				Type* cache_TreeViewNodeItemStyleProvider;
				Type* cache_Win7ButtonStyle;
				Type* cache_Win7ButtonStyleBase;
				Type* cache_Win7CheckBoxStyle;
				Type* cache_Win7CheckTextListProvider;
				Type* cache_Win7DropDownComboBoxStyle;
				Type* cache_Win7EmptyStyle;
				Type* cache_Win7GroupBoxStyle;
				Type* cache_Win7ListViewColumnDropDownStyle;
				Type* cache_Win7ListViewColumnHeaderStyle;
				Type* cache_Win7ListViewProvider;
				Type* cache_Win7MenuBarButtonStyle;
				Type* cache_Win7MenuBarStyle;
				Type* cache_Win7MenuItemButtonStyle;
				Type* cache_Win7MenuSplitterStyle;
				Type* cache_Win7MenuStyle;
				Type* cache_Win7MultilineTextBoxProvider;
				Type* cache_Win7RadioTextListProvider;
				Type* cache_Win7ScrollStyle;
				Type* cache_Win7ScrollViewProvider;
				Type* cache_Win7SelectableItemStyle;
				Type* cache_Win7SinglelineTextBoxProvider;
				Type* cache_Win7TabPageHeaderStyle;
				Type* cache_Win7TabStyle;
				Type* cache_Win7TextBoxBackground;
				Type* cache_Win7TextListProvider;
				Type* cache_Win7ToolstripButtonStyle;
				Type* cache_Win7TrackStyle;
				Type* cache_Win7TreeViewExpandingButtonStyle;
				Type* cache_Win7TreeViewProvider;
				Type* cache_Win7WindowStyle;
				Type* cache_Alignment_member_Type;
				Type* cache_Array_of_ColorEntry;
				Type* cache_AxisAlignedItemCoordinateTransformer_member_Alignment;
				Type* cache_CharAtt;
				Type* cache_CharMeasurer;
				Type* cache_Color;
				Type* cache_CommonScrollStyle_member_Direction;
				Type* cache_CommonTrackStyle_member_Direction;
				Type* cache_DescriptableObject;
				Type* cache_ElementShape_member_Type;
				Type* cache_FontProperties;
				Type* cache_Gui3DSplitterElement_member_Direction;
				Type* cache_GuiApplication;
				Type* cache_GuiButton_member_ControlState;
				Type* cache_GuiCellOption;
				Type* cache_GuiCellOption_member_ComposeType;
				Type* cache_GuiCharEventArgs;
				Type* cache_GuiEventArgs;
				Type* cache_GuiGradientBackgroundElement_member_Direction;
				Type* cache_GuiGraphicsAnimationManager;
				Type* cache_GuiGraphicsComposition_member_MinSizeLimitation;
				Type* cache_GuiGraphicsComposition_member_ParentSizeAffection;
				Type* cache_GuiGraphicsEvent_of_GuiCharEventArgs;
				Type* cache_GuiGraphicsEvent_of_GuiEventArgs;
				Type* cache_GuiGraphicsEvent_of_GuiKeyEventArgs;
				Type* cache_GuiGraphicsEvent_of_GuiMouseEventArgs;
				Type* cache_GuiGraphicsEvent_of_GuiRequestEventArgs;
				Type* cache_GuiGraphicsEventReceiver;
				Type* cache_GuiGraphicsResourceManager;
				Type* cache_GuiImageData;
				Type* cache_GuiKeyEventArgs;
				Type* cache_GuiMouseEventArgs;
				Type* cache_GuiRequestEventArgs;
				Type* cache_GuiSideAlignedComposition_member_Direction;
				Type* cache_GuiStackComposition_member_Direction;
				Type* cache_ICollection_of_ListViewItem;
				Type* cache_ICollection_of_MemoryNodeProvider;
				Type* cache_ICollection_of_TextItem;
				Type* cache_IDescriptable;
				Type* cache_IEnumerable_of_ListViewItem;
				Type* cache_IEnumerable_of_MemoryNodeProvider;
				Type* cache_IEnumerable_of_TextItem;
				Type* cache_IEnumerator_of_ListViewItem;
				Type* cache_IEnumerator_of_TextItem;
				Type* cache_IGuiGraphicsElementFactory;
				Type* cache_IGuiGraphicsRenderer;
				Type* cache_IGuiGraphicsRendererFactory;
				Type* cache_IGuiGraphicsRenderTarget;
				Type* cache_IGuiMenuService_member_Direction;
				Type* cache_IList_of_int;
				Type* cache_IList_of_ListViewColumn;
				Type* cache_IList_of_ListViewItem;
				Type* cache_IList_of_MemoryNodeProvider;
				Type* cache_IList_of_TextItem;
				Type* cache_IMemberDescriptor_member_MemberTypeEnum;
				Type* cache_INativeAsyncService;
				Type* cache_INativeCallbackService;
				Type* cache_INativeClipboardService;
				Type* cache_INativeController;
				Type* cache_INativeControllerListener;
				Type* cache_INativeCursor;
				Type* cache_INativeCursor_member_SystemCursorType;
				Type* cache_INativeImage;
				Type* cache_INativeImage_member_FormatType;
				Type* cache_INativeImageFrame;
				Type* cache_INativeImageFrameCache;
				Type* cache_INativeImageService;
				Type* cache_INativeInputService;
				Type* cache_INativeResourceService;
				Type* cache_INativeScreen;
				Type* cache_INativeScreenService;
				Type* cache_INativeWindow;
				Type* cache_INativeWindowListener;
				Type* cache_INativeWindowService;
				Type* cache_IReadonlyList_of_ColorEntry;
				Type* cache_IReadonlyList_of_DescriptableValue;
				Type* cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer;
				Type* cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer;
				Type* cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer;
				Type* cache_IReadonlyList_of_GuiTabPage_raw_pointer;
				Type* cache_IReadonlyList_of_GuiWindow_raw_pointer;
				Type* cache_IReadonlyList_of_int;
				Type* cache_IReadonlyList_of_ListViewItem;
				Type* cache_IReadonlyList_of_MemoryNodeProvider;
				Type* cache_IReadonlyList_of_TextItem;
				Type* cache_IType_member_TypeEnum;
				Type* cache_List_of_IMethodDescriptor_raw_pointer;
				Type* cache_List_of_ObjectString_of_wchar_t;
				Type* cache_ListProvider_of_ListViewItem;
				Type* cache_ListProvider_of_TextItem;
				Type* cache_ListViewItem;
				Type* cache_ListViewItemStyleProviderBase_member_ListViewItemStyleController;
				Type* cache_ListWrapperProvider_of_ListViewItem;
				Type* cache_ListWrapperProvider_of_TextItem;
				Type* cache_Margin;
				Type* cache_NativeWindowCharInfo;
				Type* cache_NativeWindowKeyInfo;
				Type* cache_NativeWindowMouseInfo;
				Type* cache_Point;
				Type* cache_Rect;
				Type* cache_Size;
				Type* cache_TextItem;
				Type* cache_TextLine;
				Type* cache_TextLines;
				Type* cache_TextPos;
				Type* cache_Win7ButtonColors;
				Type* cache_Win7CheckBoxStyle_member_BulletStyle;
			} gacui_tpimp_type_cache_table;

/***********************************************************************
Alignment :: Type (vl::presentation::Alignment::Type)
***********************************************************************/

			class gacui_tpimp_Alignment
			{
			public:
				class gacui_tpimp_Type : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Left", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Left", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Top", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Top", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Center", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Center", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Right", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Right", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bottom", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Bottom", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
Array_of_ColorEntry (vl::collections::Array<vl::presentation::elements::text::ColorEntry,vl::presentation::elements::text::ColorEntry>)
***********************************************************************/

			class gacui_tpimp_Array_of_ColorEntry : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Array", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry)->GetPointerType())
						->Parameter(L"size", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry& ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Resize", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"size", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Wrap", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::collections::IArray<vl::presentation::elements::text::ColorEntry,vl::presentation::elements::text::ColorEntry>& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
AxisAlignedItemCoordinateTransformer (vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer)
***********************************************************************/

			class gacui_tpimp_AxisAlignedItemCoordinateTransformer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"AxisAlignedItemCoordinateTransformer", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer)->GetPointerType())
						->Parameter(L"_alignment", (gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
					);
					AddMethod(
						(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Alignment", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
						->Getter(
							(new MethodDescriptor(L"GetAlignment", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
						)
					);
				}
			
			public:

/***********************************************************************
AxisAlignedItemCoordinateTransformer :: Alignment (vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer::Alignment)
***********************************************************************/

				class gacui_tpimp_Alignment : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"LeftDown", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_LeftDown", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RightDown", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_RightDown", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LeftUp", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_LeftUp", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RightUp", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_RightUp", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"DownLeft", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_DownLeft", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"DownRight", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_DownRight", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UpLeft", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_UpLeft", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UpRight", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							->Getter(
								(new MethodDescriptor(L"get_UpRight", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
CharAtt (vl::presentation::elements::text::CharAtt)
***********************************************************************/

			class gacui_tpimp_CharAtt : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
CharMeasurer (vl::presentation::elements::text::CharMeasurer)
***********************************************************************/

			class gacui_tpimp_CharMeasurer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						->Parameter(L"_rowHeight", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"MeasureWidth", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"character", (gacui_tpimp_type_cache_table.primary_Char))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Color (vl::presentation::Color)
***********************************************************************/

			class gacui_tpimp_Color : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Color", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						->Parameter(L"_r", (gacui_tpimp_type_cache_table.primary_SInt8))
						->Parameter(L"_g", (gacui_tpimp_type_cache_table.primary_SInt8))
						->Parameter(L"_b", (gacui_tpimp_type_cache_table.primary_SInt8))
						->Parameter(L"_a", (gacui_tpimp_type_cache_table.primary_SInt8))
					);
					AddConstructor(
						(new MethodDescriptor(L"Color", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddProperty(
						(new PropertyDescriptor(L"r", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt8))
						->Getter(
							(new MethodDescriptor(L"get_r", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt8))
						)
						->Setter(
							(new MethodDescriptor(L"set_r", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt8))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt8))
						->Getter(
							(new MethodDescriptor(L"get_g", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt8))
						)
						->Setter(
							(new MethodDescriptor(L"set_g", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt8))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"b", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt8))
						->Getter(
							(new MethodDescriptor(L"get_b", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt8))
						)
						->Setter(
							(new MethodDescriptor(L"set_b", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt8))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"a", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt8))
						->Getter(
							(new MethodDescriptor(L"get_a", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt8))
						)
						->Setter(
							(new MethodDescriptor(L"set_a", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt8))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"value", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_UInt32))
						->Getter(
							(new MethodDescriptor(L"get_value", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_UInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_value", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_UInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
CommonScrollStyle (vl::presentation::common_styles::CommonScrollStyle)
***********************************************************************/

			class gacui_tpimp_CommonScrollStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"CommonScrollStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle)->GetPointerType())
						->Parameter(L"_direction", (gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CommonScrollStyle)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
CommonScrollStyle :: Direction (vl::presentation::common_styles::CommonScrollStyle::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
CommonTrackStyle (vl::presentation::common_styles::CommonTrackStyle)
***********************************************************************/

			class gacui_tpimp_CommonTrackStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"CommonTrackStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle)->GetPointerType())
						->Parameter(L"_direction", (gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CommonTrackStyle)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
CommonTrackStyle :: Direction (vl::presentation::common_styles::CommonTrackStyle::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
DefaultItemCoordinateTransformer (vl::presentation::controls::list::DefaultItemCoordinateTransformer)
***********************************************************************/

			class gacui_tpimp_DefaultItemCoordinateTransformer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"DefaultItemCoordinateTransformer", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_DefaultItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_DefaultItemCoordinateTransformer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_DefaultItemCoordinateTransformer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
DescriptableObject (vl::presentation::DescriptableObject)
***********************************************************************/

			class gacui_tpimp_DescriptableObject : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"DescriptableObject", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_DescriptableObject))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ElementShape :: Type (vl::presentation::elements::ElementShape::Type)
***********************************************************************/

			class gacui_tpimp_ElementShape
			{
			public:
				class gacui_tpimp_Type : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Rectangle", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Rectangle", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
							->Getter(
								(new MethodDescriptor(L"get_Ellipse", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
FixedHeightItemArranger (vl::presentation::controls::list::FixedHeightItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedHeightItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedHeightItemArranger", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedHeightItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedHeightItemArranger)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FixedHeightItemArranger)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
FixedHeightMultiColumnItemArranger (vl::presentation::controls::list::FixedHeightMultiColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedHeightMultiColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedHeightMultiColumnItemArranger", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedHeightMultiColumnItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedHeightMultiColumnItemArranger)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FixedHeightMultiColumnItemArranger)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
FixedSizeMultiColumnItemArranger (vl::presentation::controls::list::FixedSizeMultiColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_FixedSizeMultiColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FixedSizeMultiColumnItemArranger", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedSizeMultiColumnItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FixedSizeMultiColumnItemArranger)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FixedSizeMultiColumnItemArranger)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
FontProperties (vl::presentation::FontProperties)
***********************************************************************/

			class gacui_tpimp_FontProperties : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"FontProperties", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties))
						->Parameter(L"__that", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddConstructor(
						(new MethodDescriptor(L"FontProperties", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetReferenceType())
						->Parameter(L"__that", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"fontFamily", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"get_fontFamily", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"set_fontFamily", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"size", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_size", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_size", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bold", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_bold", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_bold", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"italic", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_italic", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_italic", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"underline", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_underline", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_underline", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"strikeline", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_strikeline", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_strikeline", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"antialias", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_antialias", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_antialias", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Gui3DBorderElement (vl::presentation::elements::Gui3DBorderElement)
***********************************************************************/

			class gacui_tpimp_Gui3DBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value1", (gacui_tpimp_type_cache_table.cache_Color))
						->Parameter(L"value2", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DBorderElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Gui3DBorderElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DBorderElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Gui3DSplitterElement (vl::presentation::elements::Gui3DSplitterElement)
***********************************************************************/

			class gacui_tpimp_Gui3DSplitterElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value1", (gacui_tpimp_type_cache_table.cache_Color))
						->Parameter(L"value2", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:

/***********************************************************************
Gui3DSplitterElement :: Direction (vl::presentation::elements::Gui3DSplitterElement::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiApplication (vl::presentation::controls::GuiApplication)
***********************************************************************/

			class gacui_tpimp_GuiApplication : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"Run", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_mainWindow", (gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetWindow", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
						->Parameter(L"location", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"IsInMainThread", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiApplication)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiApplication)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Windows", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetWindows", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer)->GetConstReferenceType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiBoundsComposition (vl::presentation::elements::GuiBoundsComposition)
***********************************************************************/

			class gacui_tpimp_GuiBoundsComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiBoundsComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"ClearAlignmentToParent", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsAlignedToParent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddProperty(
						(new PropertyDescriptor(L"AlignmentToParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetAlignmentToParent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlignmentToParent", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlignmentToParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetAlignmentToParent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlignmentToParent", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BoundsChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_BoundsChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_BoundsChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiButton (vl::presentation::controls::GuiButton)
***********************************************************************/

			class gacui_tpimp_GuiButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiButton", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Clicked", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_Clicked", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_Clicked", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiButton :: ControlState (vl::presentation::controls::GuiButton::ControlState)
***********************************************************************/

				class gacui_tpimp_ControlState : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Normal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							->Getter(
								(new MethodDescriptor(L"get_Normal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Active", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							->Getter(
								(new MethodDescriptor(L"get_Active", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Pressed", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							->Getter(
								(new MethodDescriptor(L"get_Pressed", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiButton :: IStyleController (vl::presentation::controls::GuiButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Transfer", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiButton_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_IStyleController)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiCellComposition (vl::presentation::elements::GuiCellComposition)
***********************************************************************/

			class gacui_tpimp_GuiCellComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCellComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetSite", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"_row", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_column", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_rowSpan", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_columnSpan", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiCellComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TableParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTableParent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Row", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowSpan", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRowSpan", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Column", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetColumn", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ColumnSpan", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetColumnSpan", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiCellOption (vl::presentation::elements::GuiCellOption)
***********************************************************************/

			class gacui_tpimp_GuiCellOption : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCellOption", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiCellOption)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiCellOption)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AbsoluteOption", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"PercentageOption", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
					);
					AddMethod(
						(new MethodDescriptor(L"MinSizeOption", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
					);
					AddProperty(
						(new PropertyDescriptor(L"composeType", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
						->Getter(
							(new MethodDescriptor(L"get_composeType", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
						)
						->Setter(
							(new MethodDescriptor(L"set_composeType", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"absolute", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_absolute", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_absolute", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"percentage", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"get_percentage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"set_percentage", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
				}
			
			public:

/***********************************************************************
GuiCellOption :: ComposeType (vl::presentation::elements::GuiCellOption::ComposeType)
***********************************************************************/

				class gacui_tpimp_ComposeType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Absolute", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							->Getter(
								(new MethodDescriptor(L"get_Absolute", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Percentage", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							->Getter(
								(new MethodDescriptor(L"get_Percentage", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"MinSize", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							->Getter(
								(new MethodDescriptor(L"get_MinSize", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiCharEventArgs (vl::presentation::elements::GuiCharEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiCharEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiCharEventArgs", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCharEventArgs))
					);
				}
			
			public:
			};

/***********************************************************************
GuiColorizedTextElement (vl::presentation::elements::GuiColorizedTextElement)
***********************************************************************/

			class gacui_tpimp_GuiColorizedTextElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Lines", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextLines)->GetReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetLines", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextLines)->GetReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Colors", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetColors", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewPosition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Point))
						->Getter(
							(new MethodDescriptor(L"GetViewPosition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						)
						->Setter(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretBegin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretEnd", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetCaretVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetCaretColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Colors", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetColors", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewPosition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Point))
						->Getter(
							(new MethodDescriptor(L"GetViewPosition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						)
						->Setter(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretBegin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretEnd", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetCaretVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetCaretColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:

/***********************************************************************
GuiColorizedTextElement :: ICallback (vl::presentation::elements::GuiColorizedTextElement::ICallback)
***********************************************************************/

				class gacui_tpimp_ICallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"ColorChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"FontChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiComboBoxBase (vl::presentation::controls::GuiComboBoxBase)
***********************************************************************/

			class gacui_tpimp_GuiComboBoxBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComboBoxBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Popup", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiPopup)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetPopup", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPopup)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PopupOpened", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_PopupOpened", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_PopupOpened", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PopupClosed", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_PopupClosed", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_PopupClosed", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemSelecting", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_ItemSelecting", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_ItemSelecting", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemSelected", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_ItemSelected", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_ItemSelected", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiComboBoxBase :: ICommandExecutor (vl::presentation::controls::GuiComboBoxBase::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"SelectItem", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiComboBoxBase :: IStyleController (vl::presentation::controls::GuiComboBoxBase::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnClicked", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"OnPopupOpened", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"OnPopupClosed", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"OnItemSelected", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePopupStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor)->GetPointerType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiComboBoxListControl (vl::presentation::controls::GuiComboBoxListControl)
***********************************************************************/

			class gacui_tpimp_GuiComboBoxListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComboBoxListControl", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxListControl)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController)->GetPointerType())
						->Parameter(L"_containedListControl", (gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComboBoxListControl)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxListControl)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ContainedListControl", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetContainedListControl", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndex", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetSelectedIndex", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectedIndex", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetItemProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndex", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetSelectedIndex", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectedIndex", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedIndexChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SelectedIndexChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedIndexChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiComponent (vl::presentation::controls::GuiComponent)
***********************************************************************/

			class gacui_tpimp_GuiComponent : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiComponent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComponent)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiComponent)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComponent)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ControlHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetControlHost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiControl (vl::presentation::controls::GuiControl)
***********************************************************************/

			class gacui_tpimp_GuiControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiControl", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetChild", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiControl)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"NotifyEventArguments", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"GetNotifyEventArguments", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleController", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FocusableComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetFocusableComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EventReceiver", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetEventReceiver", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ChildrenCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetChildrenCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControlHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisuallyEnabled", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Enabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Enabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisibleChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_VisibleChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_VisibleChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_EnabledChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_EnabledChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VisuallyEnabledChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_VisuallyEnabledChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_VisuallyEnabledChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_TextChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_TextChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FontChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_FontChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_FontChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiControl :: IStyleController (vl::presentation::controls::GuiControl::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiControl :: IStyleProvider (vl::presentation::controls::GuiControl::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"controller", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleProvider)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiControlHost (vl::presentation::controls::GuiControlHost)
***********************************************************************/

			class gacui_tpimp_GuiControlHost : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiControlHost", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetEnabled", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocused", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"SetActivated", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"AddComponent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"component", (gacui_tpimp_type_cache_table.cache_GuiComponent)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveComponent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"component", (gacui_tpimp_type_cache_table.cache_GuiComponent)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ContainsComponent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"component", (gacui_tpimp_type_cache_table.cache_GuiComponent)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Show", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowDeactivated", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowRestored", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMaximized", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMinimized", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Hide", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Close", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"GraphicsHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetGraphicsHost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MainComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetMainComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Focused", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetFocused", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Activated", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetActivated", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ShowInTaskBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetShowInTaskBar", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetShowInTaskBar", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledActivate", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEnabledActivate", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabledActivate", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"topmost", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedScreen", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedScreen", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Opening", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetOpening", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ShowInTaskBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetShowInTaskBar", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetShowInTaskBar", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EnabledActivate", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEnabledActivate", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEnabledActivate", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"topmost", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowGotFocus", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowGotFocus", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowGotFocus", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowLostFocus", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowLostFocus", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowLostFocus", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowActivated", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowActivated", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowActivated", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowDeactivated", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowDeactivated", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowDeactivated", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowOpened", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowOpened", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowOpened", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowClosing", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowClosing", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowClosing", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowClosed", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowClosed", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowClosed", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowDestroying", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_WindowDestroying", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_WindowDestroying", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiEventArgs (vl::presentation::elements::GuiEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiEventArgs", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiEventArgs))
						->Parameter(L"composition", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"compositionSource", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"get_compositionSource", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_compositionSource", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"eventSource", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"get_eventSource", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_eventSource", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"handled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_handled", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_handled", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGradientBackgroundElement (vl::presentation::elements::GuiGradientBackgroundElement)
***********************************************************************/

			class gacui_tpimp_GuiGradientBackgroundElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetColors", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value1", (gacui_tpimp_type_cache_table.cache_Color))
						->Parameter(L"value2", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGradientBackgroundElement :: Direction (vl::presentation::elements::GuiGradientBackgroundElement::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Slash", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Slash", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Backslash", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Backslash", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsAnimationManager (vl::presentation::elements::GuiGraphicsAnimationManager)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsAnimationManager : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsAnimationManager", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AddAnimation", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"animation", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsAnimation)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"HasAnimation", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Play", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsComposition (vl::presentation::elements::GuiGraphicsComposition)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Children", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AddChild", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"child", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InsertChild", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"child", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveChild", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"child", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"MoveChild", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"child", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"newIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"offset", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"HasEventReceiver", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"FindComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"location", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnedElement", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetOwnedElement", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetOwnedElement", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"element", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSizeLimitation", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						->Getter(
							(new MethodDescriptor(L"GetMinSizeLimitation", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinSizeLimitation", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"EventReceiver", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetEventReceiver", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GlobalBounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetGlobalBounds", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedControl", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedControl", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedHost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedCursor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedCursor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"cursor", (gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControl", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedControl", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedGraphicsHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedGraphicsHost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedControlHost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedControlHost", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControlHost)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RelatedCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRelatedCursor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Margin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"InternalMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetInternalMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetInternalMargin", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMinSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMinSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMinSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientArea", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetClientArea", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AffectionFromParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
						->Getter(
							(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinPreferredClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredBounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnedElement", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetOwnedElement", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetOwnedElement", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"element", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Visible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSizeLimitation", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						->Getter(
							(new MethodDescriptor(L"GetMinSizeLimitation", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinSizeLimitation", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedCursor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedCursor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"cursor", (gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Margin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"InternalMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetInternalMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetInternalMargin", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMinSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMinSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMinSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsComposition :: MinSizeLimitation (vl::presentation::elements::GuiGraphicsComposition::MinSizeLimitation)
***********************************************************************/

				class gacui_tpimp_MinSizeLimitation : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"NoLimit", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							->Getter(
								(new MethodDescriptor(L"get_NoLimit", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LimitToElement", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							->Getter(
								(new MethodDescriptor(L"get_LimitToElement", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LimitToElementAndChildren", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							->Getter(
								(new MethodDescriptor(L"get_LimitToElementAndChildren", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiGraphicsComposition :: ParentSizeAffection (vl::presentation::elements::GuiGraphicsComposition::ParentSizeAffection)
***********************************************************************/

				class gacui_tpimp_ParentSizeAffection : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"NotAffectedByParent", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							->Getter(
								(new MethodDescriptor(L"get_NotAffectedByParent", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"AffectedByParent", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							->Getter(
								(new MethodDescriptor(L"get_AffectedByParent", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TotallyDecidedByParent", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							->Getter(
								(new MethodDescriptor(L"get_TotallyDecidedByParent", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiCharEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiCharEventArgs)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiCharEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiCharEventArgs)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiEventArgs)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiEventArgs)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiKeyEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiKeyEventArgs)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiKeyEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiKeyEventArgs)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiMouseEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiMouseEventArgs)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiMouseEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiMouseEventArgs)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEvent_of_GuiRequestEventArgs (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEvent", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Attach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Detach", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"handler", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Execute", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiRequestEventArgs)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiGraphicsEvent_of_GuiRequestEventArgs :: IHandler (vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>::IHandler)
***********************************************************************/

				class gacui_tpimp_IHandler : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IHandler", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Execute", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"argument", (gacui_tpimp_type_cache_table.cache_GuiRequestEventArgs)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiGraphicsEventReceiver (vl::presentation::elements::GuiGraphicsEventReceiver)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsEventReceiver : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsEventReceiver", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetPointerType())
						->Parameter(L"_sender", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AssociatedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAssociatedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonDown", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonDown", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonDown", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonUp", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonUp", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonUp", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"leftButtonDoubleClick", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_leftButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_leftButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonDown", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonDown", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonDown", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonUp", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonUp", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonUp", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"middleButtonDoubleClick", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_middleButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_middleButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonDown", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonDown", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonDown", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonUp", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonUp", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonUp", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"rightButtonDoubleClick", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_rightButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_rightButtonDoubleClick", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"horizontalWheel", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_horizontalWheel", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_horizontalWheel", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"verticalWheel", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_verticalWheel", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_verticalWheel", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseMove", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_mouseMove", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseMove", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseEnter", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_mouseEnter", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseEnter", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"mouseLeave", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_mouseLeave", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_mouseLeave", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"previewKey", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_previewKey", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_previewKey", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"keyDown", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_keyDown", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_keyDown", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"keyUp", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_keyUp", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_keyUp", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"systemKeyDown", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_systemKeyDown", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_systemKeyDown", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"systemKeyUp", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_systemKeyUp", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_systemKeyUp", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"previewCharInput", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_previewCharInput", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_previewCharInput", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"charInput", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_charInput", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_charInput", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"gotFocus", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_gotFocus", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_gotFocus", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"lostFocus", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_lostFocus", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_lostFocus", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"caretNotify", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_caretNotify", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_caretNotify", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsHost (vl::presentation::elements::GuiGraphicsHost)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsHost : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsHost", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocus", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"composition", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"referenceComposition", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsHost)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_nativeWindow", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MainComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetMainComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FocusedComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetFocusedComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Point))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AnimationManager", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAnimationManager", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NativeWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetNativeWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_nativeWindow", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsResourceManager (vl::presentation::elements::GuiGraphicsResourceManager)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsResourceManager : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsResourceManager", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsResourceManager)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RegisterElementFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"factory", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RegisterRendererFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"elementTypeName", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Parameter(L"factory", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetElementFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
						->Parameter(L"elementTypeName", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRendererFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetPointerType())
						->Parameter(L"elementTypeName", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsResourceManager)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsResourceManager)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiGraphicsSite (vl::presentation::elements::GuiGraphicsSite)
***********************************************************************/

			class gacui_tpimp_GuiGraphicsSite : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiGraphicsSite", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsSite)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPreferredBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsSite)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsSite)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiImageData (vl::presentation::controls::GuiImageData)
***********************************************************************/

			class gacui_tpimp_GuiImageData : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiImageData", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData))
						->Parameter(L"_image", (gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						->Parameter(L"_frameIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"GuiImageData", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiImageData)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameIndex", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetFrameIndex", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiImageFrameElement (vl::presentation::elements::GuiImageFrameElement)
***********************************************************************/

			class gacui_tpimp_GuiImageFrameElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetImage", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_image", (gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						->Parameter(L"_frameIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetAlignments", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"horizontal", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Parameter(L"vertical", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageFrameElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiImageFrameElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageFrameElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameIndex", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetFrameIndex", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlignment", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlignment", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlignment", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlignment", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Stretch", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetStretch", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetStretch", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Stretch", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetStretch", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetStretch", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiKeyEventArgs (vl::presentation::elements::GuiKeyEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiKeyEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiKeyEventArgs", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiKeyEventArgs))
					);
				}
			
			public:
			};

/***********************************************************************
GuiListControl (vl::presentation::controls::GuiListControl)
***********************************************************************/

			class gacui_tpimp_GuiListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListControl", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						->Parameter(L"acceptFocus", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ItemProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetItemProvider", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Arranger", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetArranger", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CoordinateTransformer", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCoordinateTransformer", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"StyleProviderChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_StyleProviderChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_StyleProviderChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ArrangerChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_ArrangerChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_ArrangerChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CoordinateTransformerChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_CoordinateTransformerChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_CoordinateTransformerChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiListControl :: IItemArranger (vl::presentation::controls::GuiListControl::IItemArranger)
***********************************************************************/

				class gacui_tpimp_IItemArranger : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemArranger", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"GetVisibleStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetVisibleIndex", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnViewChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							)
							->Setter(
								(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Abstract))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
							->Getter(
								(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							)
							->Setter(
								(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Abstract))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemArrangerCallback (vl::presentation::controls::GuiListControl::IItemArrangerCallback)
***********************************************************************/

				class gacui_tpimp_IItemArrangerCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemArrangerCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"RequestItem", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"ReleaseItem", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetStylePreferredSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleAlignmentToParent", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleBounds", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect))
						);
						AddMethod(
							(new MethodDescriptor(L"OnTotalSizeChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewLocation", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddProperty(
							(new PropertyDescriptor(L"ContainerComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemCoordinateTransformer (vl::presentation::controls::GuiListControl::IItemCoordinateTransformer)
***********************************************************************/

				class gacui_tpimp_IItemCoordinateTransformer : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemCoordinateTransformer", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"RealSizeToVirtualSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualSizeToRealSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
						);
						AddMethod(
							(new MethodDescriptor(L"RealPointToVirtualPoint", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
							->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualPointToRealPoint", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
							->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"RealRectToVirtualRect", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
							->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualRectToRealRect", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
							->Parameter(L"realFullSize", (gacui_tpimp_type_cache_table.cache_Size))
							->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
						);
						AddMethod(
							(new MethodDescriptor(L"RealMarginToVirtualMargin", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
							->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
						);
						AddMethod(
							(new MethodDescriptor(L"VirtualMarginToRealMargin", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
							->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemPrimaryTextView (vl::presentation::controls::GuiListControl::IItemPrimaryTextView)
***********************************************************************/

				class gacui_tpimp_IItemPrimaryTextView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemPrimaryTextView", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemPrimaryTextView)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetPrimaryTextViewText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"ContainsPrimaryText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemPrimaryTextView)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemPrimaryTextView)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemProvider (vl::presentation::controls::GuiListControl::IItemProvider)
***********************************************************************/

				class gacui_tpimp_IItemProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"RequestView", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
							->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemProviderCallback (vl::presentation::controls::GuiListControl::IItemProviderCallback)
***********************************************************************/

				class gacui_tpimp_IItemProviderCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemProviderCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnItemModified", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"newCount", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemStyleController (vl::presentation::controls::GuiListControl::IItemStyleController)
***********************************************************************/

				class gacui_tpimp_IItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"IsCacheable", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"IsInstalled", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"OnInstalled", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"OnUninstalled", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemStyleId", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"BoundsComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiListControl :: IItemStyleProvider (vl::presentation::controls::GuiListControl::IItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_IItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiListView (vl::presentation::controls::GuiListView)
***********************************************************************/

			class gacui_tpimp_GuiListView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListView)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListView)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Items", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ListViewItemProvider)->GetReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetItems", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemProvider)->GetReferenceType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiListViewBase (vl::presentation::controls::GuiListViewBase)
***********************************************************************/

			class gacui_tpimp_GuiListViewBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiListViewBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListViewBase)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListViewBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListViewBase)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ListViewStyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetListViewStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiListViewBase :: IStyleProvider (vl::presentation::controls::GuiListViewBase::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateColumnStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"PrimaryTextColor", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
							->Getter(
								(new MethodDescriptor(L"GetPrimaryTextColor", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SecondaryTextColor", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
							->Getter(
								(new MethodDescriptor(L"GetSecondaryTextColor", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemSeparatorColor", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
							->Getter(
								(new MethodDescriptor(L"GetItemSeparatorColor", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiMenu (vl::presentation::controls::GuiMenu)
***********************************************************************/

			class gacui_tpimp_GuiMenu : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenu", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						->Parameter(L"_owner", (gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"UpdateMenuService", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMenu)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiMenuBar (vl::presentation::controls::GuiMenuBar)
***********************************************************************/

			class gacui_tpimp_GuiMenuBar : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenuBar", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuBar)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"QueryService", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuBar)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMenuBar)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiMenuButton (vl::presentation::controls::GuiMenuButton)
***********************************************************************/

			class gacui_tpimp_GuiMenuButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMenuButton", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuButton)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiMenuButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsSubMenuExists", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateSubMenu", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"subMenuStyleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DestroySubMenu", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuButton)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMenuButton)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenu", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetSubMenu", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpening", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSubMenuOpening", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMenuClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMenuClientSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMenuClientSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpening", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSubMenuOpening", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredMenuClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetPreferredMenuClientSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetPreferredMenuClientSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SubMenuOpeningChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SubMenuOpeningChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SubMenuOpeningChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiMenuButton :: IStyleController (vl::presentation::controls::GuiMenuButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateSubMenuStyleController", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenuButton_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMenuButton_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetSubMenuExisting", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiMouseEventArgs (vl::presentation::elements::GuiMouseEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiMouseEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMouseEventArgs", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMouseEventArgs))
					);
				}
			
			public:
			};

/***********************************************************************
GuiMultilineTextBox (vl::presentation::controls::GuiMultilineTextBox)
***********************************************************************/

			class gacui_tpimp_GuiMultilineTextBox : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiMultilineTextBox", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox)->GetPointerType())
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
GuiMultilineTextBox :: StyleController (vl::presentation::controls::GuiMultilineTextBox::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_StyleController)->GetPointerType())
							->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_StyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_StyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElementOperator", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextElementOperator", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_String))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiMultilineTextBox :: TextElementOperatorCallback (vl::presentation::controls::GuiMultilineTextBox::TextElementOperatorCallback)
***********************************************************************/

				class gacui_tpimp_TextElementOperatorCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextElementOperatorCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_TextElementOperatorCallback)->GetPointerType())
							->Parameter(L"_textControl", (gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"originalStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_TextElementOperatorCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_TextElementOperatorCallback)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiPartialViewComposition (vl::presentation::elements::GuiPartialViewComposition)
***********************************************************************/

			class gacui_tpimp_GuiPartialViewComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiPartialViewComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPartialViewComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPartialViewComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiPartialViewComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetWidthRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthPageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetWidthPageSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthPageSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetHeightRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightPageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetHeightPageSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightPageSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetWidthRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WidthPageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetWidthPageSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetWidthPageSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetHeightRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HeightPageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetHeightPageSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetHeightPageSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiPolygonElement (vl::presentation::elements::GuiPolygonElement)
***********************************************************************/

			class gacui_tpimp_GuiPolygonElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetPoints", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"p", 0 /*UNKNOWN_TYPE[ vl::presentation::Point const* ]*/)
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPolygonElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiPolygonElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPolygonElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Points", IMemberDescriptor::Normal))
						->PropertyType(0 /*UNKNOWN_TYPE[ vl::presentation::Point const* ]*/)
						->Getter(
							(new MethodDescriptor(L"GetPoints", IMemberDescriptor::Normal))
							->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::Point const* ]*/)
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PointCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPointCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BorderColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetBorderColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorderColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BackgroundColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetBackgroundColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetBackgroundColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetSize", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BorderColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetBorderColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorderColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BackgroundColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetBackgroundColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetBackgroundColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiPopup (vl::presentation::controls::GuiPopup)
***********************************************************************/

			class gacui_tpimp_GuiPopup : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiPopup", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPopup)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsClippedByScreen", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"location", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"control", (gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Parameter(L"preferredTopBottomSide", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowPopup", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"location", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiPopup)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiPopup)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiRequestEventArgs (vl::presentation::elements::GuiRequestEventArgs)
***********************************************************************/

			class gacui_tpimp_GuiRequestEventArgs : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiRequestEventArgs", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiRequestEventArgs))
					);
					AddProperty(
						(new PropertyDescriptor(L"cancel", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"get_cancel", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"set_cancel", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiRoundBorderElement (vl::presentation::elements::GuiRoundBorderElement)
***********************************************************************/

			class gacui_tpimp_GuiRoundBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiRoundBorderElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiRoundBorderElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiRoundBorderElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Radius", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRadius", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetRadius", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Radius", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRadius", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetRadius", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiScroll (vl::presentation::controls::GuiScroll)
***********************************************************************/

			class gacui_tpimp_GuiScroll : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScroll", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPageSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Position", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPosition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMove", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetSmallMove", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetSmallMove", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMove", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetBigMove", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetBigMove", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinPosition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMinPosition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxPosition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxPosition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPageSize", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Position", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPosition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMove", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetSmallMove", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetSmallMove", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMove", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetBigMove", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetBigMove", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalSizeChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_TotalSizeChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_TotalSizeChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PageSizeChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_PageSizeChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_PageSizeChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PositionChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_PositionChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_PositionChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SmallMoveChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SmallMoveChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SmallMoveChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"BigMoveChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_BigMoveChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_BigMoveChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiScroll :: ICommandExecutor (vl::presentation::controls::GuiScroll::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SmallDecrease", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"SmallIncrease", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"BigDecrease", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"BigIncrease", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
					}
				
				public:
				};

/***********************************************************************
GuiScroll :: IStyleController (vl::presentation::controls::GuiScroll::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetTotalSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPageSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetPosition", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiScrollContainer (vl::presentation::controls::GuiScrollContainer)
***********************************************************************/

			class gacui_tpimp_GuiScrollContainer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScrollContainer", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollContainer)->GetPointerType())
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollContainer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScrollContainer)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
GuiScrollContainer :: StyleController (vl::presentation::controls::GuiScrollContainer::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollContainer_member_StyleController)->GetPointerType())
							->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"MoveContainer", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"leftTop", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollContainer_member_StyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScrollContainer_member_StyleController)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiScrollView (vl::presentation::controls::GuiScrollView)
***********************************************************************/

			class gacui_tpimp_GuiScrollView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiScrollView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView)->GetPointerType())
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateView", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScrollView)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetViewSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ViewBounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetViewBounds", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalScroll", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetHorizontalScroll", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalScroll", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetVerticalScroll", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:

/***********************************************************************
GuiScrollView :: IStyleProvider (vl::presentation::controls::GuiScrollView::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateHorizontalScrollStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateVerticalScrollStyle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"DefaultScrollSize", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetDefaultScrollSize", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiScrollView :: StyleController (vl::presentation::controls::GuiScrollView::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_StyleController)->GetPointerType())
							->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AdjustView", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"fullSize", (gacui_tpimp_type_cache_table.cache_Size))
						);
						AddMethod(
							(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_StyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_StyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetScrollView", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_scrollView", (gacui_tpimp_type_cache_table.cache_GuiScrollView)->GetPointerType())
						);
						AddProperty(
							(new PropertyDescriptor(L"StyleProvider", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalScroll", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetHorizontalScroll", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalScroll", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetVerticalScroll", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"InternalTableComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetInternalTableComposition", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"InternalContainerComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetInternalContainerComposition", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"HorizontalAlwaysVisible", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetHorizontalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"VerticalAlwaysVisible", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetVerticalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetVerticalAlwaysVisible", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSelectableButton (vl::presentation::controls::GuiSelectableButton)
***********************************************************************/

			class gacui_tpimp_GuiSelectableButton : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSelectableButton", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupController", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetGroupController", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetGroupController", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelection", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAutoSelection", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSelection", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupController", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetGroupController", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetGroupController", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelection", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAutoSelection", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSelection", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"GroupControllerChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_GroupControllerChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_GroupControllerChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSelectionChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_AutoSelectionChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_AutoSelectionChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SelectedChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSelectableButton :: GroupController (vl::presentation::controls::GuiSelectableButton::GroupController)
***********************************************************************/

				class gacui_tpimp_GroupController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"GroupController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Attach", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"button", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Detach", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"button", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnSelectedChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"button", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiSelectableButton :: IStyleController (vl::presentation::controls::GuiSelectableButton::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
					}
				
				public:
				};

/***********************************************************************
GuiSelectableButton :: MutexGroupController (vl::presentation::controls::GuiSelectableButton::MutexGroupController)
***********************************************************************/

				class gacui_tpimp_MutexGroupController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"MutexGroupController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_MutexGroupController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnSelectedChanged", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"button", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_MutexGroupController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_MutexGroupController)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSelectableListControl (vl::presentation::controls::GuiSelectableListControl)
***********************************************************************/

			class gacui_tpimp_GuiSelectableListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSelectableListControl", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"ClearSelection", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableListControl)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"MultiSelect", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMultiSelect", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiSelect", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedItems", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetSelectedItems", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MultiSelect", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMultiSelect", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiSelect", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SelectionChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectionChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSelectableListControl :: IItemStyleProvider (vl::presentation::controls::GuiSelectableListControl::IItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_IItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IItemStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl_member_IItemStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl_member_IItemStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSelectableListControl_member_IItemStyleProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSideAlignedComposition (vl::presentation::elements::GuiSideAlignedComposition)
***********************************************************************/

			class gacui_tpimp_GuiSideAlignedComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSideAlignedComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxLength", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxLength", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxLength", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetMaxRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxLength", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxLength", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxLength", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxRatio", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Double))
						->Getter(
							(new MethodDescriptor(L"GetMaxRatio", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Double))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaxRatio", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Double))
						)
					);
				}
			
			public:

/***********************************************************************
GuiSideAlignedComposition :: Direction (vl::presentation::elements::GuiSideAlignedComposition::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Left", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Left", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Top", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Top", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Right", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Right", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bottom", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Bottom", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSinglelineTextBox (vl::presentation::controls::GuiSinglelineTextBox)
***********************************************************************/

			class gacui_tpimp_GuiSinglelineTextBox : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiSinglelineTextBox", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox)->GetPointerType())
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
GuiSinglelineTextBox :: IStyleProvider (vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiSinglelineTextBox :: StyleController (vl::presentation::controls::GuiSinglelineTextBox::StyleController)
***********************************************************************/

				class gacui_tpimp_StyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"StyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_StyleController)->GetPointerType())
							->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"RearrangeTextElement", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_StyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_StyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetTextBox", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetViewPosition", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_String))
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextElementOperator", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetTextElementOperator", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
GuiSinglelineTextBox :: TextElementOperatorCallback (vl::presentation::controls::GuiSinglelineTextBox::TextElementOperatorCallback)
***********************************************************************/

				class gacui_tpimp_TextElementOperatorCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextElementOperatorCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_TextElementOperatorCallback)->GetPointerType())
							->Parameter(L"_textControl", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"originalStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_TextElementOperatorCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_TextElementOperatorCallback)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiSolidBackgroundElement (vl::presentation::elements::GuiSolidBackgroundElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidBackgroundElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidBackgroundElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSolidBackgroundElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidBackgroundElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiSolidBorderElement (vl::presentation::elements::GuiSolidBorderElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidBorderElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidBorderElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSolidBorderElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidBorderElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Shape", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetShape", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
						->Setter(
							(new MethodDescriptor(L"SetShape", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ElementShape_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiSolidLabelElement (vl::presentation::elements::GuiSolidLabelElement)
***********************************************************************/

			class gacui_tpimp_GuiSolidLabelElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetAlignments", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"horizontal", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Parameter(L"vertical", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidLabelElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiSolidLabelElement)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSolidLabelElement)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"HorizontalAlignment", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetHorizontalAlignment", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"VerticalAlignment", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Getter(
							(new MethodDescriptor(L"GetVerticalAlignment", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WrapLine", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetWrapLine", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetWrapLine", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEllipse", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEllipse", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Multiline", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMultiline", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiline", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Color", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"GetColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"SetColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Font", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetFont", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetFont", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WrapLine", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetWrapLine", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetWrapLine", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Ellipse", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetEllipse", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetEllipse", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Multiline", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMultiline", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMultiline", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Static))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Static))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiStackComposition (vl::presentation::elements::GuiStackComposition)
***********************************************************************/

			class gacui_tpimp_GuiStackComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiStackComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InsertStackItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiStackComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"StackItems", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetStackItems", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Padding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPadding", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPadding", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Direction", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetDirection", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						)
						->Setter(
							(new MethodDescriptor(L"SetDirection", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Padding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetPadding", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetPadding", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
				}
			
			public:

/***********************************************************************
GuiStackComposition :: Direction (vl::presentation::elements::GuiStackComposition::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiStackItemComposition (vl::presentation::elements::GuiStackItemComposition)
***********************************************************************/

			class gacui_tpimp_GuiStackItemComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiStackItemComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetAffectionFromParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection))
					);
					AddMethod(
						(new MethodDescriptor(L"IsSizeAffectParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ExtraMargin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Margin))
						->Getter(
							(new MethodDescriptor(L"GetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						)
						->Setter(
							(new MethodDescriptor(L"SetExtraMargin", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTab (vl::presentation::controls::GuiTab)
***********************************************************************/

			class gacui_tpimp_GuiTab : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTab", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiTab_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"page", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemovePage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"MovePage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"page", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Parameter(L"newIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelectedPage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTab)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Pages", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetPages", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedPage", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetSelectedPage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectedPageChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SelectedPageChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectedPageChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:

/***********************************************************************
GuiTab :: ICommandExecutor (vl::presentation::controls::GuiTab::ICommandExecutor)
***********************************************************************/

				class gacui_tpimp_ICommandExecutor : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICommandExecutor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"ShowTab", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiTab :: IStyleController (vl::presentation::controls::GuiTab::IStyleController)
***********************************************************************/

				class gacui_tpimp_IStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"InsertTab", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetTabText", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"RemoveTab", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"MoveTab", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"oldIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"newIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"CreateTabPageStyleController", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab_member_IStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTab_member_IStyleController)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"SetSelectedTab", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiTableComposition (vl::presentation::elements::GuiTableComposition)
***********************************************************************/

			class gacui_tpimp_GuiTableComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTableComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetRowsAndColumns", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"_rows", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_columns", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetSitedCell", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellComposition)->GetPointerType())
						->Parameter(L"_row", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_column", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowOption", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
						->Parameter(L"_row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetRowOption", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_row", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"option", (gacui_tpimp_type_cache_table.cache_GuiCellOption))
					);
					AddMethod(
						(new MethodDescriptor(L"GetColumnOption", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiCellOption))
						->Parameter(L"_column", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetColumnOption", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_column", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"option", (gacui_tpimp_type_cache_table.cache_GuiCellOption))
					);
					AddMethod(
						(new MethodDescriptor(L"UpdateCellBounds", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetMinPreferredClientSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTableComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Rows", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRows", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Columns", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetColumns", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellPadding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetCellPadding", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetCellPadding", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellArea", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetCellArea", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CellPadding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetCellPadding", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetCellPadding", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTabPage (vl::presentation::controls::GuiTabPage)
***********************************************************************/

			class gacui_tpimp_GuiTabPage : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Container", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetContainer", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OwnerTab", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTab)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetOwnerTab", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTab)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_TextChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_TextChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTextBoxCommonInterface (vl::presentation::controls::GuiTextBoxCommonInterface)
***********************************************************************/

			class gacui_tpimp_GuiTextBoxCommonInterface : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextBoxCommonInterface", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CanCut", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCopy", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CanPaste", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SelectAll", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Cut", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Copy", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Paste", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowText", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						->Parameter(L"row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetFragmentText", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowWidth", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetTextPosFromPoint", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPointFromTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRectFromTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNearestTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"Select", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"begin", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxWidth", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxWidth", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxHeight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxHeight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretBegin", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretBegin", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretEnd", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretEnd", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretSmall", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretSmall", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretLarge", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Getter(
							(new MethodDescriptor(L"GetCaretLarge", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionChanged", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						->Getter(
							(new MethodDescriptor(L"get_SelectionChanged", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
						->Setter(
							(new MethodDescriptor(L"set_SelectionChanged", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs))
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTextElementOperator (vl::presentation::controls::GuiTextElementOperator)
***********************************************************************/

			class gacui_tpimp_GuiTextElementOperator : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextElementOperator", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_textElement", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
						->Parameter(L"_textComposition", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"_textControl", (gacui_tpimp_type_cache_table.cache_GuiControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetNearestTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"Select", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"begin", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCut", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CanCopy", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CanPaste", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SelectAll", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Cut", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Copy", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Paste", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextElementOperator)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextBoxCommonInterface", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTextBoxCommonInterface", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetTextBoxCommonInterface", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextElement", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTextElement", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextComposition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTextComposition", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Callback", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TextBoxCommonInterface", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTextBoxCommonInterface", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetTextBoxCommonInterface", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SelectionText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetSelectionText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetSelectionText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiTextElementOperator :: DefaultCallback (vl::presentation::controls::GuiTextElementOperator::DefaultCallback)
***********************************************************************/

				class gacui_tpimp_DefaultCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"DefaultCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_DefaultCallback)->GetPointerType())
							->Parameter(L"_textElement", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
							->Parameter(L"_textComposition", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetLeftWord", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
						);
						AddMethod(
							(new MethodDescriptor(L"GetRightWord", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
						);
						AddMethod(
							(new MethodDescriptor(L"GetWord", IMemberDescriptor::Virtual))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"begin", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetPageRows", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_DefaultCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_DefaultCallback)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
GuiTextElementOperator :: ICallback (vl::presentation::controls::GuiTextElementOperator::ICallback)
***********************************************************************/

				class gacui_tpimp_ICallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ICallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetLeftWord", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
						);
						AddMethod(
							(new MethodDescriptor(L"GetRightWord", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
						);
						AddMethod(
							(new MethodDescriptor(L"GetWord", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"begin", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"BeforeModify", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos)->GetReferenceType())
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"AfterModify", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"originalStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"originalText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Parameter(L"inputStart", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputEnd", (gacui_tpimp_type_cache_table.cache_TextPos))
							->Parameter(L"inputText", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"ScrollToView", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"PageRows", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetPageRows", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"TextMargin", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetTextMargin", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiTextList (vl::presentation::controls::GuiTextList)
***********************************************************************/

			class gacui_tpimp_GuiTextList : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTextList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextList)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemStyleProvider", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTextList)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTextList)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Items", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_TextItemProvider)->GetReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetItems", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemProvider)->GetReferenceType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiTimeBasedAnimation (vl::presentation::elements::GuiTimeBasedAnimation)
***********************************************************************/

			class gacui_tpimp_GuiTimeBasedAnimation : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTimeBasedAnimation", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTimeBasedAnimation)->GetPointerType())
						->Parameter(L"totalMilliseconds", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Restart", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"totalMilliseconds", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetTotalLength", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetCurrentPosition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTimeBasedAnimation)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTimeBasedAnimation)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiTreeView (vl::presentation::controls::GuiTreeView)
***********************************************************************/

			class gacui_tpimp_GuiTreeView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiTreeView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTreeView)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_nodeRootProvider", (gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Nodes", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItemRootProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTreeView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTreeView)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TreeViewStyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetTreeViewStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
GuiTreeView :: IStyleProvider (vl::presentation::controls::GuiTreeView::IStyleProvider)
***********************************************************************/

				class gacui_tpimp_IStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemExpandingDecorator", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"TextColor", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
							->Getter(
								(new MethodDescriptor(L"GetTextColor", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
GuiVirtualListView (vl::presentation::controls::GuiVirtualListView)
***********************************************************************/

			class gacui_tpimp_GuiVirtualListView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualListView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualListView)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ChangeItemStyle", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"contentProvider", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualListView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiVirtualListView)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiVirtualTextList (vl::presentation::controls::GuiVirtualTextList)
***********************************************************************/

			class gacui_tpimp_GuiVirtualTextList : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualTextList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualTextList)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_itemStyleProvider", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetPointerType())
						->Parameter(L"_itemProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ChangeItemStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"itemStyleProvider", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualTextList)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiVirtualTextList)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiVirtualTreeListControl (vl::presentation::controls::GuiVirtualTreeListControl)
***********************************************************************/

			class gacui_tpimp_GuiVirtualTreeListControl : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiVirtualTreeListControl", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualTreeListControl)->GetPointerType())
						->Parameter(L"_styleProvider", (gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider)->GetPointerType())
						->Parameter(L"_nodeRootProvider", (gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetNodeStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetSmartPointerType())
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiVirtualTreeListControl)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiVirtualTreeListControl)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeItemView", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeItemView)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNodeItemView", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemView)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeRootProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNodeRootProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeStyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNodeStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
GuiWindow (vl::presentation::controls::GuiWindow)
***********************************************************************/

			class gacui_tpimp_GuiWindow : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiWindow", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
						->Parameter(L"_styleController", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindow)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiWindow)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
GuiWindowComposition (vl::presentation::elements::GuiWindowComposition)
***********************************************************************/

			class gacui_tpimp_GuiWindowComposition : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"GuiWindowComposition", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindowComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"SetMargin", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindowComposition)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiWindowComposition)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"AttachedWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAttachedWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAttachedWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AttachedWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetAttachedWindow", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetAttachedWindow", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_ListViewItem (vl::collections::ICollection<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ICollection_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_MemoryNodeProvider (vl::collections::ICollection<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_MemoryNodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ICollection_of_MemoryNodeProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ICollection_of_TextItem (vl::collections::ICollection<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ICollection_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ICollection", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ICollection_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ICollection_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IDescriptable (vl::presentation::IDescriptable)
***********************************************************************/

			class gacui_tpimp_IDescriptable : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IDescriptable", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_ListViewItem (vl::collections::IEnumerable<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IEnumerable_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_MemoryNodeProvider (vl::collections::IEnumerable<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider> >)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Abstract))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::collections::IEnumerator<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider> >* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_MemoryNodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IEnumerable_of_MemoryNodeProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerable_of_TextItem (vl::collections::IEnumerable<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IEnumerable_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerable", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerable_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IEnumerable_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerator_of_ListViewItem (vl::collections::IEnumerator<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_IEnumerator_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerator", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Clone", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Current", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Index", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Next", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Available", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Reset", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IEnumerator_of_TextItem (vl::collections::IEnumerator<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IEnumerator_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IEnumerator", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Clone", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Current", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Index", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Next", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Available", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Reset", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsAnimation (vl::presentation::elements::IGuiGraphicsAnimation)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsAnimation : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsAnimation", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsAnimation)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Play", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"currentPosition", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"totalLength", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Stop", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsAnimation)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsAnimation)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TotalLength", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetTotalLength", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CurrentPosition", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetCurrentPosition", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsElement (vl::presentation::elements::IGuiGraphicsElement)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsElement : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsElement", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Renderer", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRenderer", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsElementFactory (vl::presentation::elements::IGuiGraphicsElementFactory)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsElementFactory : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsElementFactory", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ElementTypeName", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetElementTypeName", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRenderer (vl::presentation::elements::IGuiGraphicsRenderer)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRenderer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsRenderer", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Initialize", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_element", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Finalize", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Render", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"OnElementStateChanged", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_renderTarget", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Factory", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetFactory", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetMinSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRendererFactory (vl::presentation::elements::IGuiGraphicsRendererFactory)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRendererFactory : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsRendererFactory", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Create", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IGuiGraphicsRenderTarget (vl::presentation::elements::IGuiGraphicsRenderTarget)
***********************************************************************/

			class gacui_tpimp_IGuiGraphicsRenderTarget : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiGraphicsRenderTarget", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"StartRendering", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"StopRendering", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"PushClipper", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"clipper", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"PopClipper", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsClipperCoverWholeTarget", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Clipper", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetClipper", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
				}
			
			public:
			};

/***********************************************************************
IGuiMenuService (vl::presentation::controls::IGuiMenuService)
***********************************************************************/

			class gacui_tpimp_IGuiMenuService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IGuiMenuService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsActiveState", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemExecuted", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"MenuOpened", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"menu", (gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"MenuClosed", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"menu", (gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiMenuService)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiMenuService)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"PreferredDirection", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
						->Getter(
							(new MethodDescriptor(L"GetPreferredDirection", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"OpeningMenu", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetOpeningMenu", IMemberDescriptor::Virtual))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiMenu)->GetPointerType())
						)
					);
				}
			
			public:

/***********************************************************************
IGuiMenuService :: Direction (vl::presentation::controls::IGuiMenuService::Direction)
***********************************************************************/

				class gacui_tpimp_Direction : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Horizontal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Horizontal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Vertical", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
							->Getter(
								(new MethodDescriptor(L"get_Vertical", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
IList_of_int (vl::collections::IList<int,int>)
***********************************************************************/

			class gacui_tpimp_IList_of_int : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_int)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_int)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IList_of_int)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_ListViewColumn (vl::collections::IList<vl::Ptr<vl::presentation::controls::list::ListViewColumn>,vl::presentation::controls::list::ListViewColumn *>)
***********************************************************************/

			class gacui_tpimp_IList_of_ListViewColumn : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::Ptr<vl::presentation::controls::list::ListViewColumn> ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::Ptr<vl::presentation::controls::list::ListViewColumn> ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_ListViewItem (vl::collections::IList<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_IList_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IList_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_MemoryNodeProvider (vl::collections::IList<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_IList_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_MemoryNodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IList_of_MemoryNodeProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IList_of_TextItem (vl::collections::IList<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IList_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IList_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IMemberDescriptor :: MemberTypeEnum (vl::presentation::IMemberDescriptor::MemberTypeEnum)
***********************************************************************/

			class gacui_tpimp_IMemberDescriptor
			{
			public:
				class gacui_tpimp_MemberTypeEnum : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Static", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Static", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Abstract", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Abstract", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Virtual", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Virtual", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Normal", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Normal", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeAsyncService (vl::presentation::INativeAsyncService)
***********************************************************************/

			class gacui_tpimp_INativeAsyncService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeAsyncService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeAsyncService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsInMainThread", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeAsyncService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeAsyncService)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeCallbackService (vl::presentation::INativeCallbackService)
***********************************************************************/

			class gacui_tpimp_INativeCallbackService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeCallbackService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCallbackService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InstallListener", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"listener", (gacui_tpimp_type_cache_table.cache_INativeControllerListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"UninstallListener", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"listener", (gacui_tpimp_type_cache_table.cache_INativeControllerListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCallbackService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeCallbackService)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeClipboardService (vl::presentation::INativeClipboardService)
***********************************************************************/

			class gacui_tpimp_INativeClipboardService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeClipboardService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeClipboardService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ContainsText", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeClipboardService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeClipboardService)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeController (vl::presentation::INativeController)
***********************************************************************/

			class gacui_tpimp_INativeController : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeController", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CallbackService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCallbackService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ResourceService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeResourceService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AsyncService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeAsyncService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ClipboardService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeClipboardService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ImageService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"ScreenService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreenService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"WindowService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindowService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InputService", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeInputService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeController)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeController)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeControllerListener (vl::presentation::INativeControllerListener)
***********************************************************************/

			class gacui_tpimp_INativeControllerListener : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeControllerListener", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeControllerListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"position", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"position", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"position", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"position", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"MouseMoving", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"position", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"GlobalTimer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ClipboardUpdated", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"NativeWindowCreated", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"NativeWindowDestroying", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeControllerListener)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeControllerListener)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeCursor (vl::presentation::INativeCursor)
***********************************************************************/

			class gacui_tpimp_INativeCursor : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeCursor", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsSystemCursor", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeCursor)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"SystemCursorType", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
						->Getter(
							(new MethodDescriptor(L"GetSystemCursorType", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
						)
					);
				}
			
			public:

/***********************************************************************
INativeCursor :: SystemCursorType (vl::presentation::INativeCursor::SystemCursorType)
***********************************************************************/

				class gacui_tpimp_SystemCursorType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"SmallWaiting", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SmallWaiting", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LargeWaiting", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_LargeWaiting", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Arrow", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_Arrow", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Cross", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_Cross", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Hand", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_Hand", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Help", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_Help", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"IBeam", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_IBeam", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeAll", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SizeAll", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNESW", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SizeNESW", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNS", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SizeNS", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeNWSE", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SizeNWSE", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SizeWE", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_SizeWE", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"LastSystemCursor", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							->Getter(
								(new MethodDescriptor(L"get_LastSystemCursor", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeImage (vl::presentation::INativeImage)
***********************************************************************/

			class gacui_tpimp_INativeImage : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImage", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetFrame", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeImage)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ImageService", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImageService)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetImageService", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageService)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Format", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
						->Getter(
							(new MethodDescriptor(L"GetFormat", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"FrameCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetFrameCount", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:

/***********************************************************************
INativeImage :: FormatType (vl::presentation::INativeImage::FormatType)
***********************************************************************/

				class gacui_tpimp_FormatType : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"Bmp", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Bmp", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Gif", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Gif", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Icon", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Icon", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Jpeg", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Jpeg", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Png", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Png", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Tiff", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Tiff", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Wmp", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Wmp", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Unknown", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							->Getter(
								(new MethodDescriptor(L"get_Unknown", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
INativeImageFrame (vl::presentation::INativeImageFrame)
***********************************************************************/

			class gacui_tpimp_INativeImageFrame : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImageFrame", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetCache", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"key", 0 /*UNKNOWN_TYPE[ void* ]*/)
						->Parameter(L"cache", (gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetCache", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetSmartPointerType())
						->Parameter(L"key", 0 /*UNKNOWN_TYPE[ void* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveCache", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetSmartPointerType())
						->Parameter(L"key", 0 /*UNKNOWN_TYPE[ void* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Image", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetImage", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeImageFrameCache (vl::presentation::INativeImageFrameCache)
***********************************************************************/

			class gacui_tpimp_INativeImageFrameCache : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImageFrameCache", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnAttach", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"frame", (gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnDetach", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"frame", (gacui_tpimp_type_cache_table.cache_INativeImageFrame)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeImageFrameCache)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeImageService (vl::presentation::INativeImageService)
***********************************************************************/

			class gacui_tpimp_INativeImageService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeImageService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateImageFromFile", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImage)->GetSmartPointerType())
						->Parameter(L"path", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeImageService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeImageService)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeInputService (vl::presentation::INativeInputService)
***********************************************************************/

			class gacui_tpimp_INativeInputService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeInputService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeInputService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"StartHookMouse", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"StopHookMouse", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsHookingMouse", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"StartTimer", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"StopTimer", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsTimerEnabled", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"IsKeyPressing", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"code", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IsKeyToggled", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"code", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeInputService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeInputService)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeResourceService (vl::presentation::INativeResourceService)
***********************************************************************/

			class gacui_tpimp_INativeResourceService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeResourceService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeResourceService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetSystemCursor", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Parameter(L"type", (gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeResourceService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeResourceService)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultSystemCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetDefaultSystemCursor", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultFont", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties))
						->Getter(
							(new MethodDescriptor(L"GetDefaultFont", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties))
						)
						->Setter(
							(new MethodDescriptor(L"SetDefaultFont", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"DefaultFont", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_FontProperties))
						->Getter(
							(new MethodDescriptor(L"GetDefaultFont", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_FontProperties))
						)
						->Setter(
							(new MethodDescriptor(L"SetDefaultFont", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeScreen (vl::presentation::INativeScreen)
***********************************************************************/

			class gacui_tpimp_INativeScreen : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeScreen", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsPrimary", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeScreen)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientBounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetClientBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Name", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetName", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeScreenService (vl::presentation::INativeScreenService)
***********************************************************************/

			class gacui_tpimp_INativeScreenService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeScreenService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreenService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetScreen", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetPointerType())
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetScreen", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreen)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeScreenService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeScreenService)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"ScreenCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetScreenCount", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindow (vl::presentation::INativeWindow)
***********************************************************************/

			class gacui_tpimp_INativeWindow : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindow", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Show", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowDeactivated", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowRestored", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMaximized", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ShowMinimized", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Hide", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsVisible", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Enable", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Disable", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsEnabled", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocus", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsFocused", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetActivate", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsActivated", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"ShowInTaskBar", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"HideInTaskBar", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsAppearedInTaskBar", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"EnableActivate", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"DisableActivate", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsEnabledActivate", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"RequireCapture", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseCapture", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallListener", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"listener", (gacui_tpimp_type_cache_table.cache_INativeWindowListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"UninstallListener", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"listener", (gacui_tpimp_type_cache_table.cache_INativeWindowListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RedrawContent", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientBoundsInScreen", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetClientBoundsInScreen", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Title", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetTitle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitle", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_title", (gacui_tpimp_type_cache_table.primary_String))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetWindowCursor", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetWindowCursor", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_cursor", (gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Point))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetParent", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"parent", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlwaysPassFocusToParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"topmost", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Bounds", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Rect))
						->Getter(
							(new MethodDescriptor(L"GetBounds", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						)
						->Setter(
							(new MethodDescriptor(L"SetBounds", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ClientSize", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetClientSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
						->Setter(
							(new MethodDescriptor(L"SetClientSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Title", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetTitle", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitle", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_title", (gacui_tpimp_type_cache_table.primary_String))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"WindowCursor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetWindowCursor", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetWindowCursor", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"_cursor", (gacui_tpimp_type_cache_table.cache_INativeCursor)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CaretPoint", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Point))
						->Getter(
							(new MethodDescriptor(L"GetCaretPoint", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						)
						->Setter(
							(new MethodDescriptor(L"SetCaretPoint", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetParent", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"parent", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AlwaysPassFocusToParent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAlwaysPassFocusToParent", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaximizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMaximizedBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMaximizedBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MinimizedBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetMinimizedBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetMinimizedBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Border", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetBorder", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetBorder", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"SizeBox", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetSizeBox", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetSizeBox", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"IconVisible", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetIconVisible", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetIconVisible", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TitleBar", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTitleBar", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTitleBar", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"visible", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TopMost", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTopMost", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTopMost", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"topmost", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindowListener (vl::presentation::INativeWindowListener)
***********************************************************************/

			class gacui_tpimp_INativeWindowListener : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindowListener", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindowListener)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Moving", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect)->GetReferenceType())
						->Parameter(L"fixSizeOnly", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Moved", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Enabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Disabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GotFocus", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"LostFocus", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Activated", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Deactivated", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Opened", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Closing", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"cancel", 0 /*UNKNOWN_TYPE[ bool& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Closed", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Paint", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Destroying", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Destroyed", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"LeftButtonDoubleClick", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RightButtonDoubleClick", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"MiddleButtonDoubleClick", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"HorizontalWheel", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"VerticalWheel", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"MouseMoving", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"MouseEntered", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"MouseLeaved", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"KeyDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowKeyInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"KeyUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowKeyInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SysKeyDown", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowKeyInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SysKeyUp", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowKeyInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Char", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"info", (gacui_tpimp_type_cache_table.cache_NativeWindowCharInfo)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindowListener)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeWindowListener)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INativeWindowService (vl::presentation::INativeWindowService)
***********************************************************************/

			class gacui_tpimp_INativeWindowService : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INativeWindowService", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindowService)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateNativeWindow", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyNativeWindow", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetWindow", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Parameter(L"location", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"Run", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"window", (gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindowService)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INativeWindowService)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"MainWindow", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetMainWindow", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INativeWindow)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemPrimaryTextView (vl::presentation::controls::tree::INodeItemPrimaryTextView)
***********************************************************************/

			class gacui_tpimp_INodeItemPrimaryTextView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemPrimaryTextView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemPrimaryTextView)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetPrimaryTextViewText", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemPrimaryTextView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeItemPrimaryTextView)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemStyleController (vl::presentation::controls::tree::INodeItemStyleController)
***********************************************************************/

			class gacui_tpimp_INodeItemStyleController : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemStyleController", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"NodeStyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetNodeStyleProvider", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemStyleProvider (vl::presentation::controls::tree::INodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_INodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"BindItemStyleProvider", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"BindedItemStyleProvider", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetBindedItemStyleProvider", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeItemView (vl::presentation::controls::tree::INodeItemView)
***********************************************************************/

			class gacui_tpimp_INodeItemView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeItemView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemView)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestNode", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseNode", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateNodeVisibilityIndex", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeItemView)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INodeProvider (vl::presentation::controls::tree::INodeProvider)
***********************************************************************/

			class gacui_tpimp_INodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateTotalVisibleNodes", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestChild", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseChild", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"ChildCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetChildCount", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Parent", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetParent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Expanding", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
INodeProviderCallback (vl::presentation::controls::tree::INodeProviderCallback)
***********************************************************************/

			class gacui_tpimp_INodeProviderCallback : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeProviderCallback", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnBeforeItemModified", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"parentNode", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"newCount", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"OnAfterItemModified", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"parentNode", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"newCount", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemExpanded", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemCollapsed", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
INodeRootProvider (vl::presentation::controls::tree::INodeRootProvider)
***********************************************************************/

			class gacui_tpimp_INodeRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"INodeRootProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CanGetNodeByVisibleIndex", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeByVisibleIndex", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Abstract))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"RootNode", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRootNode", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_ColorEntry (vl::collections::IReadonlyList<vl::presentation::elements::text::ColorEntry,vl::presentation::elements::text::ColorEntry>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_ColorEntry : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::elements::text::ColorEntry const& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_DescriptableValue (vl::collections::IReadonlyList<vl::presentation::DescriptableValue,vl::presentation::DescriptableValue>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_DescriptableValue : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiGraphicsComposition_raw_pointer (vl::collections::IReadonlyList<vl::presentation::elements::GuiGraphicsComposition *,vl::presentation::elements::GuiGraphicsComposition *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiListControl::IItemStyleController *,vl::presentation::controls::GuiListControl::IItemStyleController *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiStackItemComposition_raw_pointer (vl::collections::IReadonlyList<vl::presentation::elements::GuiStackItemComposition *,vl::presentation::elements::GuiStackItemComposition *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiStackItemComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiTabPage_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiTabPage *,vl::presentation::controls::GuiTabPage *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiTabPage)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_GuiWindow_raw_pointer (vl::collections::IReadonlyList<vl::presentation::controls::GuiWindow *,vl::presentation::controls::GuiWindow *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_GuiWindow)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_int (vl::collections::IReadonlyList<int,int>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_int : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_ListViewItem (vl::collections::IReadonlyList<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_MemoryNodeProvider (vl::collections::IReadonlyList<vl::Ptr<vl::presentation::controls::tree::MemoryNodeProvider>,vl::presentation::controls::tree::MemoryNodeProvider *>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_MemoryNodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_MemoryNodeProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IReadonlyList_of_TextItem (vl::collections::IReadonlyList<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_IReadonlyList_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"IReadonlyList", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IReadonlyList_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ItemProviderBase (vl::presentation::controls::list::ItemProviderBase)
***********************************************************************/

			class gacui_tpimp_ItemProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ItemProviderBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ItemProviderBase)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ItemProviderBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ItemProviderBase)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ItemStyleControllerBase (vl::presentation::controls::list::ItemStyleControllerBase)
***********************************************************************/

			class gacui_tpimp_ItemStyleControllerBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"GetStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"IsCacheable", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"IsInstalled", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"OnInstalled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"OnUninstalled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ItemStyleControllerBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ItemStyleControllerBase)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ITreeViewItemView (vl::presentation::controls::tree::ITreeViewItemView)
***********************************************************************/

			class gacui_tpimp_ITreeViewItemView : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ITreeViewItemView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ITreeViewItemView)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeImage", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeText", IMemberDescriptor::Abstract))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ITreeViewItemView)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ITreeViewItemView)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
IType :: TypeEnum (vl::presentation::IType::TypeEnum)
***********************************************************************/

			class gacui_tpimp_IType
			{
			public:
				class gacui_tpimp_TypeEnum : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"SInt8", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_SInt8", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt8", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_UInt8", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt16", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_SInt16", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt16", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_UInt16", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt32", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_SInt32", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt32", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_UInt32", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SInt64", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_SInt64", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"UInt64", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_UInt64", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Float", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Float", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Bool", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Bool", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Char", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Char", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"String", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_String", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Enum", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Enum", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Struct", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Struct", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Class", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Class", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Interface", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Interface", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Pointer", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Pointer", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"SmartPointer", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_SmartPointer", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Reference", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Reference", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RValueReference", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_RValueReference", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Array", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Array", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Const", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Const", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Volatile", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							->Getter(
								(new MethodDescriptor(L"get_Volatile", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
List_of_IMethodDescriptor_raw_pointer (vl::collections::List<vl::presentation::IMethodDescriptor *,vl::presentation::IMethodDescriptor *>)
***********************************************************************/

			class gacui_tpimp_List_of_IMethodDescriptor_raw_pointer : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"List", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_List_of_IMethodDescriptor_raw_pointer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", 0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::presentation::IMethodDescriptor*& ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Wrap", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::collections::IList<vl::presentation::IMethodDescriptor *,vl::presentation::IMethodDescriptor *>& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_List_of_IMethodDescriptor_raw_pointer)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_List_of_IMethodDescriptor_raw_pointer)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
List_of_ObjectString_of_wchar_t (vl::collections::List<vl::ObjectString<wchar_t>,vl::ObjectString<wchar_t> >)
***********************************************************************/

			class gacui_tpimp_List_of_ObjectString_of_wchar_t : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"List", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetReferenceType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Wrap", IMemberDescriptor::Normal))
						->ReturnType(0 /*UNKNOWN_TYPE[ vl::collections::IList<vl::ObjectString<wchar_t>,vl::ObjectString<wchar_t> >& ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListProvider_of_ListViewItem (vl::presentation::controls::list::ListProvider<vl::Ptr<vl::presentation::controls::list::ListViewItem> >)
***********************************************************************/

			class gacui_tpimp_ListProvider_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListProvider_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListProvider_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListProvider_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListProvider_of_TextItem (vl::presentation::controls::list::ListProvider<vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ListProvider_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListProvider_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListProvider_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListProvider_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewBigIconContentProvider (vl::presentation::controls::list::ListViewBigIconContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewBigIconContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewBigIconContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewBigIconContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewBigIconContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewBigIconContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewColumnItemArranger (vl::presentation::controls::list::ListViewColumnItemArranger)
***********************************************************************/

			class gacui_tpimp_ListViewColumnItemArranger : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewColumnItemArranger", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
ListViewColumnItemArranger :: IColumnItemView (vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView)
***********************************************************************/

				class gacui_tpimp_IColumnItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IColumnItemView", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemView)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnSize", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetColumnSize", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemView)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemView)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"ColumnCount", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetColumnCount", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewColumnItemArranger :: IColumnItemViewCallback (vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback)
***********************************************************************/

				class gacui_tpimp_IColumnItemViewCallback : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IColumnItemViewCallback", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"OnColumnChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"OnColumnSizeChanged", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback)->GetConstReferenceType())
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewDetailContentProvider (vl::presentation::controls::list::ListViewDetailContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewDetailContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewDetailContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewDetailContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewDetailContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewDetailContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewInformationContentProvider (vl::presentation::controls::list::ListViewInformationContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewInformationContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewInformationContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewInformationContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewInformationContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewInformationContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItem (vl::presentation::controls::list::ListViewItem)
***********************************************************************/

			class gacui_tpimp_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"smallImage", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"get_smallImage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_smallImage", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"largeImage", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"get_largeImage", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_largeImage", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"subItems", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t))
						->Getter(
							(new MethodDescriptor(L"get_subItems", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t))
						)
						->Setter(
							(new MethodDescriptor(L"set_subItems", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t))
						)
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItemProvider (vl::presentation::controls::list::ListViewItemProvider)
***********************************************************************/

			class gacui_tpimp_ListViewItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyDataColumnsUpdated", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyColumnsUpdated", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"DataColumns", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IList_of_int)->GetReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetDataColumns", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_int)->GetReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Columns", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn)->GetReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetColumns", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn)->GetReferenceType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
ListViewItemStyleProvider (vl::presentation::controls::list::ListViewItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_ListViewItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider)->GetPointerType())
						->Parameter(L"itemContentProvider", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IsItemStyleAttachedToListView", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"itemStyle", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"CreatedItemStyles", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetCreatedItemStyles", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer)->GetConstReferenceType())
						)
					);
				}
			
			public:

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemContent (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContent)
***********************************************************************/

				class gacui_tpimp_IListViewItemContent : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemContent", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider)->GetPointerType())
							->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView)->GetPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"ContentComposition", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetContentComposition", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"BackgroundDecorator", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetBackgroundDecorator", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemContentProvider (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContentProvider)
***********************************************************************/

				class gacui_tpimp_IListViewItemContentProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemContentProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
							->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
						);
						AddMethod(
							(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: IListViewItemView (vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemView)
***********************************************************************/

				class gacui_tpimp_IListViewItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"IListViewItemView", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetSmallImage", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetLargeImage", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetSubItem", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetDataColumn", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetColumnText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"DataColumnCount", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetDataColumnCount", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"ColumnCount", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
							->Getter(
								(new MethodDescriptor(L"GetColumnCount", IMemberDescriptor::Abstract))
								->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
							)
						);
					}
				
				public:
				};

/***********************************************************************
ListViewItemStyleProvider :: ListViewContentItemStyleController (vl::presentation::controls::list::ListViewItemStyleProvider::ListViewContentItemStyleController)
***********************************************************************/

				class gacui_tpimp_ListViewContentItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ListViewContentItemStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_ListViewContentItemStyleController)->GetPointerType())
							->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"Install", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView)->GetPointerType())
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_ListViewContentItemStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_ListViewContentItemStyleController)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"ItemContent", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
							->Getter(
								(new MethodDescriptor(L"GetItemContent", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewItemStyleProviderBase (vl::presentation::controls::list::ListViewItemStyleProviderBase)
***********************************************************************/

			class gacui_tpimp_ListViewItemStyleProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewItemStyleProviderBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
ListViewItemStyleProviderBase :: ListViewItemStyleController (vl::presentation::controls::list::ListViewItemStyleProviderBase::ListViewItemStyleController)
***********************************************************************/

				class gacui_tpimp_ListViewItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ListViewItemStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase_member_ListViewItemStyleController)->GetPointerType())
							->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase_member_ListViewItemStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase_member_ListViewItemStyleController)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
ListViewListContentProvider (vl::presentation::controls::list::ListViewListContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewListContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewListContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewListContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewListContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewListContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewSmallIconContentProvider (vl::presentation::controls::list::ListViewSmallIconContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewSmallIconContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewSmallIconContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewSmallIconContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewSmallIconContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewSmallIconContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListViewTileContentProvider (vl::presentation::controls::list::ListViewTileContentProvider)
***********************************************************************/

			class gacui_tpimp_ListViewTileContentProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"ListViewTileContentProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewTileContentProvider)->GetPointerType())
						->Parameter(L"_iconSize", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredCoordinateTransformer", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePreferredArranger", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemContent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent)->GetPointerType())
						->Parameter(L"font", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewTileContentProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListViewTileContentProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListWrapperProvider_of_ListViewItem (vl::presentation::controls::list::ListWrapperProvider<vl::Ptr<vl::presentation::controls::list::ListViewItem>,vl::presentation::controls::list::ListViewItem *>)
***********************************************************************/

			class gacui_tpimp_ListWrapperProvider_of_ListViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"NotifyUpdate", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_ListViewItem)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_ListViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_ListViewItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
ListWrapperProvider_of_TextItem (vl::presentation::controls::list::ListWrapperProvider<vl::presentation::controls::list::TextItem,vl::presentation::controls::list::TextItem>)
***********************************************************************/

			class gacui_tpimp_ListWrapperProvider_of_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddMethod(
						(new MethodDescriptor(L"NotifyUpdate", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateEnumerator", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Get", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"operator[]", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IndexOf", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Add", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Remove", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveAt", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveRange", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Insert", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Set", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_TextItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_TextItem)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Margin (vl::presentation::Margin)
***********************************************************************/

			class gacui_tpimp_Margin : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Margin", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
						->Parameter(L"_left", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_top", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_right", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_bottom", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"Margin", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"margin", (gacui_tpimp_type_cache_table.cache_Margin))
					);
					AddProperty(
						(new PropertyDescriptor(L"left", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_left", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_left", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"top", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_top", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_top", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"right", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_right", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_right", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bottom", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_bottom", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_bottom", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
MemoryNodeProvider (vl::presentation::controls::tree::MemoryNodeProvider)
***********************************************************************/

			class gacui_tpimp_MemoryNodeProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetPointerType())
						->Parameter(L"_data", (gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
					);
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"NotifyDataModified", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Children", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IList_of_MemoryNodeProvider)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetExpanding", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetExpanding", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateTotalVisibleNodes", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetChildCount", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetParent", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestChild", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseChild", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_MemoryNodeProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Data", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetData", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetData", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Data", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetData", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetData", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_DescriptableObject)->GetSmartPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
MemoryNodeRootProvider (vl::presentation::controls::tree::MemoryNodeRootProvider)
***********************************************************************/

			class gacui_tpimp_MemoryNodeRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"MemoryNodeRootProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetRootNode", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_MemoryNodeRootProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_MemoryNodeRootProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
NativeWindowCharInfo (vl::presentation::NativeWindowCharInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowCharInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NativeWindowKeyInfo (vl::presentation::NativeWindowKeyInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowKeyInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NativeWindowMouseInfo (vl::presentation::NativeWindowMouseInfo)
***********************************************************************/

			class gacui_tpimp_NativeWindowMouseInfo : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
				}
			
			public:
			};

/***********************************************************************
NodeItemProvider (vl::presentation::controls::tree::NodeItemProvider)
***********************************************************************/

			class gacui_tpimp_NodeItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeItemProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeItemProvider)->GetPointerType())
						->Parameter(L"_root", (gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Count", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeItemProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_NodeItemProvider)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Root", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRoot", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_INodeRootProvider)->GetSmartPointerType())
						)
					);
				}
			
			public:
			};

/***********************************************************************
NodeItemStyleProvider (vl::presentation::controls::tree::NodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_NodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeItemStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeItemStyleProvider)->GetPointerType())
						->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider)->GetSmartPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeItemStyleProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_NodeItemStyleProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
NodeRootProviderBase (vl::presentation::controls::tree::NodeRootProviderBase)
***********************************************************************/

			class gacui_tpimp_NodeRootProviderBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"NodeRootProviderBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeRootProviderBase)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CanGetNodeByVisibleIndex", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetNodeByVisibleIndex", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachCallback", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachCallback", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_INodeProviderCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_NodeRootProviderBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_NodeRootProviderBase)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Point (vl::presentation::Point)
***********************************************************************/

			class gacui_tpimp_Point : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Point", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"_x", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_y", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"Point", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddProperty(
						(new PropertyDescriptor(L"x", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_x", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_x", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_y", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_y", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
RangedItemArrangerBase (vl::presentation::controls::list::RangedItemArrangerBase)
***********************************************************************/

			class gacui_tpimp_RangedItemArrangerBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"RangedItemArrangerBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_RangedItemArrangerBase)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnAttached", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemModified", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"newCount", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetCallback", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetCallback", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetTotalSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"GetVisibleStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetVisibleIndex", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnViewChanged", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"bounds", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_RangedItemArrangerBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_RangedItemArrangerBase)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Rect (vl::presentation::Rect)
***********************************************************************/

			class gacui_tpimp_Rect : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"p", (gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"s", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"_x1", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_y1", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_x2", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_y2", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"Rect", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"rect", (gacui_tpimp_type_cache_table.cache_Rect))
					);
					AddMethod(
						(new MethodDescriptor(L"LeftTop", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"RightBottom", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"Left", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Right", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Width", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Top", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Bottom", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Height", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Expand", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"s", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"Expand", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"x", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"y", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Move", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"s", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"Move", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"x", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"y", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Contains", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"p", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddProperty(
						(new PropertyDescriptor(L"Size", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Size))
						->Getter(
							(new MethodDescriptor(L"GetSize", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"x1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_x1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_x1", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_y1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_y1", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"x2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_x2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_x2", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_y2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_y2", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Size (vl::presentation::Size)
***********************************************************************/

			class gacui_tpimp_Size : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Size", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
						->Parameter(L"_x", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_y", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"Size", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"size", (gacui_tpimp_type_cache_table.cache_Size))
					);
					AddProperty(
						(new PropertyDescriptor(L"x", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_x", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_x", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"y", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_y", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_y", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextItem (vl::presentation::controls::list::TextItem)
***********************************************************************/

			class gacui_tpimp_TextItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem))
						->Parameter(L"_text", 0 /*UNKNOWN_TYPE[ wchar_t const* ]*/)
						->Parameter(L"_checked", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem))
						->Parameter(L"_text", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Parameter(L"_checked", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem))
						->Parameter(L"item", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddConstructor(
						(new MethodDescriptor(L"TextItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItem)->GetReferenceType())
						->Parameter(L"__that", (gacui_tpimp_type_cache_table.cache_TextItem)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextItemProvider (vl::presentation::controls::list::TextItemProvider)
***********************************************************************/

			class gacui_tpimp_TextItemProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItemProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItemProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
TextItemStyleProvider (vl::presentation::controls::list::TextItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_TextItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextItemStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider)->GetPointerType())
						->Parameter(L"_textItemStyleProvider", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController)->GetPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
TextItemStyleProvider :: ITextItemStyleProvider (vl::presentation::controls::list::TextItemStyleProvider::ITextItemStyleProvider)
***********************************************************************/

				class gacui_tpimp_ITextItemStyleProvider : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ITextItemStyleProvider", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateBackgroundStyleController", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"CreateBulletStyleController", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
TextItemStyleProvider :: ITextItemView (vl::presentation::controls::list::TextItemStyleProvider::ITextItemView)
***********************************************************************/

				class gacui_tpimp_ITextItemView : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"ITextItemView", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemView)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Abstract))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						);
						AddMethod(
							(new MethodDescriptor(L"SetCheckedSilently", IMemberDescriptor::Abstract))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"itemIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemView)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemView)->GetConstReferenceType())
						);
					}
				
				public:
				};

/***********************************************************************
TextItemStyleProvider :: TextItemStyleController (vl::presentation::controls::list::TextItemStyleProvider::TextItemStyleController)
***********************************************************************/

				class gacui_tpimp_TextItemStyleController : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddConstructor(
							(new MethodDescriptor(L"TextItemStyleController", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_TextItemStyleController)->GetPointerType())
							->Parameter(L"provider", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider)->GetPointerType())
						);
						AddMethod(
							(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_TextItemStyleController)->GetReferenceType())
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_TextItemStyleController)->GetConstReferenceType())
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Selected", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetSelected", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Checked", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
							->Getter(
								(new MethodDescriptor(L"GetChecked", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
							)
							->Setter(
								(new MethodDescriptor(L"SetChecked", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
							->PropertyType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							->Getter(
								(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
								->ReturnType((gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							)
							->Setter(
								(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
								->ReturnType(0 /*[ void ]*/)
								->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
TextLine (vl::presentation::elements::text::TextLine)
***********************************************************************/

			class gacui_tpimp_TextLine : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextLine", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextLine))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextLine)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextLine)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Initialize", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Finalize", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"IsReady", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"input", 0 /*UNKNOWN_TYPE[ wchar_t const* ]*/)
						->Parameter(L"inputCount", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Split", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextLine))
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"AppendAndFinalize", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"line", (gacui_tpimp_type_cache_table.cache_TextLine)->GetReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"CalculateBufferLength", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"dataLength", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->PropertyType(0 /*UNKNOWN_TYPE[ wchar_t* ]*/)
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
							->ReturnType(0 /*UNKNOWN_TYPE[ wchar_t* ]*/)
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", 0 /*UNKNOWN_TYPE[ wchar_t* ]*/)
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"att", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_CharAtt)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"get_att", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_CharAtt)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_att", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CharAtt)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"availableOffsetCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_availableOffsetCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_availableOffsetCount", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bufferLength", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_bufferLength", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_bufferLength", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"dataLength", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_dataLength", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_dataLength", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextLines (vl::presentation::elements::text::TextLines)
***********************************************************************/

			class gacui_tpimp_TextLines : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextLines", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextLines))
					);
					AddMethod(
						(new MethodDescriptor(L"GetLine", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextLine)->GetReferenceType())
						->Parameter(L"row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveLines", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"count", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"IsAvailable", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"Normalize", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"input", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"input", 0 /*UNKNOWN_TYPE[ wchar_t const* ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"input", 0 /*UNKNOWN_TYPE[ wchar_t const* ]*/)
						->Parameter(L"inputCount", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Modify", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"start", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"end", (gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"inputs", 0 /*UNKNOWN_TYPE[ wchar_t const** ]*/)
						->Parameter(L"inputCounts", 0 /*UNKNOWN_TYPE[ signed __int32* ]*/)
						->Parameter(L"rows", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"Clear", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"ClearMeasurement", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"MeasureRow", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRowWidth", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"row", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"GetTextPosFromPoint", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"point", (gacui_tpimp_type_cache_table.cache_Point))
					);
					AddMethod(
						(new MethodDescriptor(L"GetPointFromTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Point))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"GetRectFromTextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Rect))
						->Parameter(L"pos", (gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextLines)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextLines)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"Count", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCharMeasurer", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCharMeasurer", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TabSpaceCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetTabSpaceCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetTabSpaceCount", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RowHeight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetRowHeight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxWidth", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxWidth", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"MaxHeight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetMaxHeight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"CharMeasurer", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetCharMeasurer", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetCharMeasurer", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_CharMeasurer)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"RenderTarget", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						->Getter(
							(new MethodDescriptor(L"GetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"SetRenderTarget", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget)->GetPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"Text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"GetText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"SetText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TabSpaceCount", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"GetTabSpaceCount", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"SetTabSpaceCount", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TextPos (vl::presentation::TextPos)
***********************************************************************/

			class gacui_tpimp_TextPos : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
						->Parameter(L"_row", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"_column", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddConstructor(
						(new MethodDescriptor(L"TextPos", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TextPos))
					);
					AddMethod(
						(new MethodDescriptor(L"Compare", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator<", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator<=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator>", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator>=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TextPos)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"row", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_row", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_row", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"column", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Getter(
							(new MethodDescriptor(L"get_column", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						)
						->Setter(
							(new MethodDescriptor(L"set_column", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_SInt32))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewItem (vl::presentation::controls::tree::TreeViewItem)
***********************************************************************/

			class gacui_tpimp_TreeViewItem : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItem)->GetPointerType())
						->Parameter(L"_image", (gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						->Parameter(L"_text", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItem", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItem)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItem)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TreeViewItem)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"image", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						->Getter(
							(new MethodDescriptor(L"get_image", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
						->Setter(
							(new MethodDescriptor(L"set_image", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiImageData)->GetSmartPointerType())
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"text", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_String))
						->Getter(
							(new MethodDescriptor(L"get_text", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_String))
						)
						->Setter(
							(new MethodDescriptor(L"set_text", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String))
						)
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewItemRootProvider (vl::presentation::controls::tree::TreeViewItemRootProvider)
***********************************************************************/

			class gacui_tpimp_TreeViewItemRootProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewItemRootProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItemRootProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"RequestView", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
						->Parameter(L"identifier", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"ReleaseView", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"view", (gacui_tpimp_type_cache_table.cache_IDescriptable)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewItemRootProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TreeViewItemRootProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
TreeViewNodeItemStyleProvider (vl::presentation::controls::tree::TreeViewNodeItemStyleProvider)
***********************************************************************/

			class gacui_tpimp_TreeViewNodeItemStyleProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"TreeViewNodeItemStyleProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewNodeItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"BindItemStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"styleProvider", (gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBindedItemStyleProvider", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AttachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiListControl)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"DetachListControl", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemStyleId", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"styleId", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"DestroyItemStyle", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"Install", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"node", (gacui_tpimp_type_cache_table.cache_INodeProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetStyleSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"style", (gacui_tpimp_type_cache_table.cache_INodeItemStyleController)->GetPointerType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_TreeViewNodeItemStyleProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_TreeViewNodeItemStyleProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ButtonColors (vl::presentation::win7::Win7ButtonColors)
***********************************************************************/

			class gacui_tpimp_Win7ButtonColors : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ButtonColors", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"operator==", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"colors", (gacui_tpimp_type_cache_table.cache_Win7ButtonColors)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator!=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"colors", (gacui_tpimp_type_cache_table.cache_Win7ButtonColors)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetAlphaWithoutText", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"a", (gacui_tpimp_type_cache_table.primary_SInt8))
					);
					AddMethod(
						(new MethodDescriptor(L"Blend", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
						->Parameter(L"c1", (gacui_tpimp_type_cache_table.cache_Win7ButtonColors)->GetConstReferenceType())
						->Parameter(L"c2", (gacui_tpimp_type_cache_table.cache_Win7ButtonColors)->GetConstReferenceType())
						->Parameter(L"ratio", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"total", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"ButtonNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ButtonActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ButtonPressed", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ButtonDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ItemNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ItemActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ItemSelected", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ItemDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"CheckedNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
						->Parameter(L"selected", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CheckedActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
						->Parameter(L"selected", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CheckedPressed", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
						->Parameter(L"selected", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CheckedDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
						->Parameter(L"selected", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"ToolstripButtonNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ToolstripButtonActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ToolstripButtonPressed", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"ToolstripButtonDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuBarButtonNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuBarButtonActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuBarButtonPressed", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuBarButtonDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemButtonNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemButtonNormalActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemButtonDisabled", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"MenuItemButtonDisabledActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"TabPageHeaderNormal", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"TabPageHeaderActive", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddMethod(
						(new MethodDescriptor(L"TabPageHeaderSelected", IMemberDescriptor::Static))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonColors))
					);
					AddProperty(
						(new PropertyDescriptor(L"borderColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_borderColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_borderColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"backgroundColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_backgroundColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_backgroundColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g1", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_g1", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_g1", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g2", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_g2", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_g2", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g3", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_g3", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_g3", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"g4", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_g4", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_g4", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"textColor", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_textColor", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_textColor", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bulletLight", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_bulletLight", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_bulletLight", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"bulletDark", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.cache_Color))
						->Getter(
							(new MethodDescriptor(L"get_bulletDark", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
						)
						->Setter(
							(new MethodDescriptor(L"set_bulletDark", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Color))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Win7ButtonStyle (vl::presentation::win7::Win7ButtonStyle)
***********************************************************************/

			class gacui_tpimp_Win7ButtonStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ButtonStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonStyle)->GetPointerType())
						->Parameter(L"verticalGradient", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ButtonStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ButtonStyleBase (vl::presentation::win7::Win7ButtonStyleBase)
***********************************************************************/

			class gacui_tpimp_Win7ButtonStyleBase : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ButtonStyleBase", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonStyleBase)->GetPointerType())
						->Parameter(L"verticalGradient", (gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"roundBorder", (gacui_tpimp_type_cache_table.primary_Bool))
						->Parameter(L"initialColor", (gacui_tpimp_type_cache_table.cache_Win7ButtonColors)->GetConstReferenceType())
						->Parameter(L"horizontal", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
						->Parameter(L"vertical", (gacui_tpimp_type_cache_table.cache_Alignment_member_Type))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ButtonStyleBase)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ButtonStyleBase)->GetConstReferenceType())
					);
					AddProperty(
						(new PropertyDescriptor(L"TransparentWhenInactive", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTransparentWhenInactive", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTransparentWhenInactive", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TransparentWhenDisabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTransparentWhenDisabled", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTransparentWhenDisabled", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSizeForText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAutoSizeForText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSizeForText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TransparentWhenInactive", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTransparentWhenInactive", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTransparentWhenInactive", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"TransparentWhenDisabled", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetTransparentWhenDisabled", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetTransparentWhenDisabled", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
					AddProperty(
						(new PropertyDescriptor(L"AutoSizeForText", IMemberDescriptor::Normal))
						->PropertyType((gacui_tpimp_type_cache_table.primary_Bool))
						->Getter(
							(new MethodDescriptor(L"GetAutoSizeForText", IMemberDescriptor::Normal))
							->ReturnType((gacui_tpimp_type_cache_table.primary_Bool))
						)
						->Setter(
							(new MethodDescriptor(L"SetAutoSizeForText", IMemberDescriptor::Normal))
							->ReturnType(0 /*[ void ]*/)
							->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
						)
					);
				}
			
			public:
			};

/***********************************************************************
Win7CheckBoxStyle (vl::presentation::win7::Win7CheckBoxStyle)
***********************************************************************/

			class gacui_tpimp_Win7CheckBoxStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7CheckBoxStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle)->GetPointerType())
						->Parameter(L"bulletStyle", (gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle))
						->Parameter(L"backgroundVisible", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle)->GetConstReferenceType())
					);
				}
			
			public:

/***********************************************************************
Win7CheckBoxStyle :: BulletStyle (vl::presentation::win7::Win7CheckBoxStyle::BulletStyle)
***********************************************************************/

				class gacui_tpimp_BulletStyle : public TypeDescriptor
				{
				protected:
					void FillTypeContent()
					{
						AddProperty(
							(new PropertyDescriptor(L"CheckBox", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle))
							->Getter(
								(new MethodDescriptor(L"get_CheckBox", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle))
							)
						);
						AddProperty(
							(new PropertyDescriptor(L"RadioButton", IMemberDescriptor::Static))
							->PropertyType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle))
							->Getter(
								(new MethodDescriptor(L"get_RadioButton", IMemberDescriptor::Static))
								->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle))
							)
						);
					}
				
				public:
				};
			};

/***********************************************************************
Win7CheckTextListProvider (vl::presentation::win7::Win7CheckTextListProvider)
***********************************************************************/

			class gacui_tpimp_Win7CheckTextListProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7CheckTextListProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckTextListProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateBulletStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7CheckTextListProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7CheckTextListProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7DropDownComboBoxStyle (vl::presentation::win7::Win7DropDownComboBoxStyle)
***********************************************************************/

			class gacui_tpimp_Win7DropDownComboBoxStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7DropDownComboBoxStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7DropDownComboBoxStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"OnClicked", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"OnPopupOpened", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"OnPopupClosed", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"OnItemSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
					);
					AddMethod(
						(new MethodDescriptor(L"CreatePopupStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7DropDownComboBoxStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7DropDownComboBoxStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7EmptyStyle (vl::presentation::win7::Win7EmptyStyle)
***********************************************************************/

			class gacui_tpimp_Win7EmptyStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7EmptyStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7EmptyStyle)->GetPointerType())
						->Parameter(L"color", (gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7EmptyStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7EmptyStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7GroupBoxStyle (vl::presentation::win7::Win7GroupBoxStyle)
***********************************************************************/

			class gacui_tpimp_Win7GroupBoxStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7GroupBoxStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7GroupBoxStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7GroupBoxStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7GroupBoxStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ListViewColumnDropDownStyle (vl::presentation::win7::Win7ListViewColumnDropDownStyle)
***********************************************************************/

			class gacui_tpimp_Win7ListViewColumnDropDownStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ListViewColumnDropDownStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnDropDownStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnDropDownStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ListViewColumnDropDownStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ListViewColumnHeaderStyle (vl::presentation::win7::Win7ListViewColumnHeaderStyle)
***********************************************************************/

			class gacui_tpimp_Win7ListViewColumnHeaderStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ListViewColumnHeaderStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnHeaderStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnHeaderStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ListViewColumnHeaderStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ListViewProvider (vl::presentation::win7::Win7ListViewProvider)
***********************************************************************/

			class gacui_tpimp_Win7ListViewProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ListViewProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateColumnStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetPrimaryTextColor", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"GetSecondaryTextColor", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"GetItemSeparatorColor", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ListViewProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ListViewProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MenuBarButtonStyle (vl::presentation::win7::Win7MenuBarButtonStyle)
***********************************************************************/

			class gacui_tpimp_Win7MenuBarButtonStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MenuBarButtonStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuBarButtonStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateSubMenuStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetSubMenuExisting", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuBarButtonStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MenuBarButtonStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MenuBarStyle (vl::presentation::win7::Win7MenuBarStyle)
***********************************************************************/

			class gacui_tpimp_Win7MenuBarStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MenuBarStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuBarStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuBarStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MenuBarStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MenuItemButtonStyle (vl::presentation::win7::Win7MenuItemButtonStyle)
***********************************************************************/

			class gacui_tpimp_Win7MenuItemButtonStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MenuItemButtonStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuItemButtonStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateSubMenuStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetSubMenuExisting", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSubMenuOpening", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuItemButtonStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MenuItemButtonStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MenuSplitterStyle (vl::presentation::win7::Win7MenuSplitterStyle)
***********************************************************************/

			class gacui_tpimp_Win7MenuSplitterStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MenuSplitterStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuSplitterStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuSplitterStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MenuSplitterStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MenuStyle (vl::presentation::win7::Win7MenuStyle)
***********************************************************************/

			class gacui_tpimp_Win7MenuStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MenuStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MenuStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MenuStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7MultilineTextBoxProvider (vl::presentation::win7::Win7MultilineTextBoxProvider)
***********************************************************************/

			class gacui_tpimp_Win7MultilineTextBoxProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7MultilineTextBoxProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MultilineTextBoxProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"controller", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7MultilineTextBoxProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7MultilineTextBoxProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7RadioTextListProvider (vl::presentation::win7::Win7RadioTextListProvider)
***********************************************************************/

			class gacui_tpimp_Win7RadioTextListProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7RadioTextListProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7RadioTextListProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateBulletStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7RadioTextListProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7RadioTextListProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ScrollStyle (vl::presentation::win7::Win7ScrollStyle)
***********************************************************************/

			class gacui_tpimp_Win7ScrollStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ScrollStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ScrollStyle)->GetPointerType())
						->Parameter(L"_direction", (gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ScrollStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ScrollStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ScrollViewProvider (vl::presentation::win7::Win7ScrollViewProvider)
***********************************************************************/

			class gacui_tpimp_Win7ScrollViewProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ScrollViewProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ScrollViewProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"controller", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateHorizontalScrollStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateVerticalScrollStyle", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetDefaultScrollSize", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ScrollViewProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ScrollViewProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7SelectableItemStyle (vl::presentation::win7::Win7SelectableItemStyle)
***********************************************************************/

			class gacui_tpimp_Win7SelectableItemStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7SelectableItemStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7SelectableItemStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7SelectableItemStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7SelectableItemStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7SinglelineTextBoxProvider (vl::presentation::win7::Win7SinglelineTextBoxProvider)
***********************************************************************/

			class gacui_tpimp_Win7SinglelineTextBoxProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7SinglelineTextBoxProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7SinglelineTextBoxProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"controller", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7SinglelineTextBoxProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7SinglelineTextBoxProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TabPageHeaderStyle (vl::presentation::win7::Win7TabPageHeaderStyle)
***********************************************************************/

			class gacui_tpimp_Win7TabPageHeaderStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TabPageHeaderStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TabPageHeaderStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TabPageHeaderStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TabPageHeaderStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TabStyle (vl::presentation::win7::Win7TabStyle)
***********************************************************************/

			class gacui_tpimp_Win7TabStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TabStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TabStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetCommandExecutor", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InsertTab", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetTabText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"RemoveTab", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"MoveTab", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"oldIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
						->Parameter(L"newIndex", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelectedTab", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"index", (gacui_tpimp_type_cache_table.primary_SInt32))
					);
					AddMethod(
						(new MethodDescriptor(L"CreateTabPageStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TabStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TabStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TextBoxBackground (vl::presentation::win7::Win7TextBoxBackground)
***********************************************************************/

			class gacui_tpimp_Win7TextBoxBackground : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TextBoxBackground", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TextBoxBackground)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"AssociateStyleController", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"controller", (gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InstallBackground", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
						->Parameter(L"boundsComposition", (gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"InitializeTextElement", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"_textElement", (gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TextBoxBackground)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TextBoxBackground)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Normal))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
				}
			
			public:
			};

/***********************************************************************
Win7TextListProvider (vl::presentation::win7::Win7TextListProvider)
***********************************************************************/

			class gacui_tpimp_Win7TextListProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TextListProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TextListProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateBackgroundStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateBulletStyleController", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TextListProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TextListProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7ToolstripButtonStyle (vl::presentation::win7::Win7ToolstripButtonStyle)
***********************************************************************/

			class gacui_tpimp_Win7ToolstripButtonStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7ToolstripButtonStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ToolstripButtonStyle)->GetPointerType())
						->Parameter(L"transparent", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7ToolstripButtonStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7ToolstripButtonStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TrackStyle (vl::presentation::win7::Win7TrackStyle)
***********************************************************************/

			class gacui_tpimp_Win7TrackStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TrackStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TrackStyle)->GetPointerType())
						->Parameter(L"_direction", (gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TrackStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TrackStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TreeViewExpandingButtonStyle (vl::presentation::win7::Win7TreeViewExpandingButtonStyle)
***********************************************************************/

			class gacui_tpimp_Win7TreeViewExpandingButtonStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TreeViewExpandingButtonStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TreeViewExpandingButtonStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetBoundsComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetContainerComposition", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFocusableComposition", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetText", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_String)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetFont", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_FontProperties)->GetConstReferenceType())
					);
					AddMethod(
						(new MethodDescriptor(L"SetVisuallyEnabled", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"SetSelected", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.primary_Bool))
					);
					AddMethod(
						(new MethodDescriptor(L"Transfer", IMemberDescriptor::Virtual))
						->ReturnType(0 /*[ void ]*/)
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TreeViewExpandingButtonStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TreeViewExpandingButtonStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7TreeViewProvider (vl::presentation::win7::Win7TreeViewProvider)
***********************************************************************/

			class gacui_tpimp_Win7TreeViewProvider : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7TreeViewProvider", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TreeViewProvider)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemBackground", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"CreateItemExpandingDecorator", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"GetTextColor", IMemberDescriptor::Virtual))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Color))
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7TreeViewProvider)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7TreeViewProvider)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Win7WindowStyle (vl::presentation::win7::Win7WindowStyle)
***********************************************************************/

			class gacui_tpimp_Win7WindowStyle : public TypeDescriptor
			{
			protected:
				void FillTypeContent()
				{
					AddConstructor(
						(new MethodDescriptor(L"Win7WindowStyle", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7WindowStyle)->GetPointerType())
					);
					AddMethod(
						(new MethodDescriptor(L"operator=", IMemberDescriptor::Normal))
						->ReturnType((gacui_tpimp_type_cache_table.cache_Win7WindowStyle)->GetReferenceType())
						->Parameter(L"value", (gacui_tpimp_type_cache_table.cache_Win7WindowStyle)->GetConstReferenceType())
					);
				}
			
			public:
			};

/***********************************************************************
Helper Functions
***********************************************************************/

			ITypeProvider* CreateDefaultTypeProvider()
			{
				TypeProvider* typeProvider=new TypeProvider;
				(gacui_tpimp_type_cache_table.primary_SInt8) = dynamic_cast<Type*>(typeProvider->SInt8());
				(gacui_tpimp_type_cache_table.primary_SInt16) = dynamic_cast<Type*>(typeProvider->SInt16());
				(gacui_tpimp_type_cache_table.primary_SInt32) = dynamic_cast<Type*>(typeProvider->SInt32());
				(gacui_tpimp_type_cache_table.primary_SInt64) = dynamic_cast<Type*>(typeProvider->SInt64());
				(gacui_tpimp_type_cache_table.primary_UInt8) = dynamic_cast<Type*>(typeProvider->UInt8());
				(gacui_tpimp_type_cache_table.primary_UInt16) = dynamic_cast<Type*>(typeProvider->UInt16());
				(gacui_tpimp_type_cache_table.primary_UInt32) = dynamic_cast<Type*>(typeProvider->UInt32());
				(gacui_tpimp_type_cache_table.primary_UInt64) = dynamic_cast<Type*>(typeProvider->UInt64());
				(gacui_tpimp_type_cache_table.primary_Float) = dynamic_cast<Type*>(typeProvider->Float());
				(gacui_tpimp_type_cache_table.primary_Double) = dynamic_cast<Type*>(typeProvider->Double());
				(gacui_tpimp_type_cache_table.primary_Char) = dynamic_cast<Type*>(typeProvider->Char());
				(gacui_tpimp_type_cache_table.primary_String) = dynamic_cast<Type*>(typeProvider->String());
				(gacui_tpimp_type_cache_table.primary_Bool) = dynamic_cast<Type*>(typeProvider->Bool());
				
				Description<vl::presentation::controls::list::AxisAlignedItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_AxisAlignedItemCoordinateTransformer", new gacui_tpimp_AxisAlignedItemCoordinateTransformer))->GetTypeDescriptor());
				Description<vl::presentation::common_styles::CommonScrollStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_CommonScrollStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_CommonScrollStyle", new gacui_tpimp_CommonScrollStyle))->GetTypeDescriptor());
				Description<vl::presentation::common_styles::CommonTrackStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_CommonTrackStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_CommonTrackStyle", new gacui_tpimp_CommonTrackStyle))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::DefaultItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_DefaultItemCoordinateTransformer) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_DefaultItemCoordinateTransformer", new gacui_tpimp_DefaultItemCoordinateTransformer))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedHeightItemArranger>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_FixedHeightItemArranger) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedHeightItemArranger", new gacui_tpimp_FixedHeightItemArranger))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedHeightMultiColumnItemArranger>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_FixedHeightMultiColumnItemArranger) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedHeightMultiColumnItemArranger", new gacui_tpimp_FixedHeightMultiColumnItemArranger))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::FixedSizeMultiColumnItemArranger>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_FixedSizeMultiColumnItemArranger) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_FixedSizeMultiColumnItemArranger", new gacui_tpimp_FixedSizeMultiColumnItemArranger))->GetTypeDescriptor());
				Description<vl::presentation::elements::Gui3DBorderElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Gui3DBorderElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Gui3DBorderElement", new gacui_tpimp_Gui3DBorderElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::Gui3DSplitterElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Gui3DSplitterElement", new gacui_tpimp_Gui3DSplitterElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiBoundsComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiBoundsComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiBoundsComposition", new gacui_tpimp_GuiBoundsComposition))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiButton>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiButton) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiButton", new gacui_tpimp_GuiButton))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiButton::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiButton_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiButton :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiCellComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiCellComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiCellComposition", new gacui_tpimp_GuiCellComposition))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiColorizedTextElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiColorizedTextElement", new gacui_tpimp_GuiColorizedTextElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiColorizedTextElement::ICallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiColorizedTextElement_member_ICallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiColorizedTextElement :: gacui_tpimp_ICallback", new gacui_tpimp_GuiColorizedTextElement :: gacui_tpimp_ICallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComboBoxBase", new gacui_tpimp_GuiComboBoxBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase::ICommandExecutor>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_ICommandExecutor) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_ICommandExecutor))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxBase::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiComboBoxBase_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiComboBoxBase :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComboBoxListControl>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiComboBoxListControl) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComboBoxListControl", new gacui_tpimp_GuiComboBoxListControl))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiComponent>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiComponent) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiComponent", new gacui_tpimp_GuiComponent))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiControl) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiControl", new gacui_tpimp_GuiControl))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiControl :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiControl :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControl::IStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiControl_member_IStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiControl :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiControl :: gacui_tpimp_IStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiControlHost>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiControlHost) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiControlHost", new gacui_tpimp_GuiControlHost))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGradientBackgroundElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGradientBackgroundElement", new gacui_tpimp_GuiGradientBackgroundElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsComposition", new gacui_tpimp_GuiGraphicsComposition))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiCharEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs_member_IHandler) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs :: gacui_tpimp_IHandler))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs_member_IHandler) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs :: gacui_tpimp_IHandler))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiKeyEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs_member_IHandler) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs :: gacui_tpimp_IHandler))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiMouseEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs_member_IHandler) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs :: gacui_tpimp_IHandler))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsEvent<vl::presentation::elements::GuiRequestEventArgs>::IHandler>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs_member_IHandler) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs :: gacui_tpimp_IHandler", new gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs :: gacui_tpimp_IHandler))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsHost>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsHost) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsHost", new gacui_tpimp_GuiGraphicsHost))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiGraphicsSite>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiGraphicsSite) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsSite", new gacui_tpimp_GuiGraphicsSite))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiImageFrameElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiImageFrameElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiImageFrameElement", new gacui_tpimp_GuiImageFrameElement))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListControl", new gacui_tpimp_GuiListControl))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemArranger>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArranger) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArranger", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArranger))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemArrangerCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemArrangerCallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArrangerCallback", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemArrangerCallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemCoordinateTransformer>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemCoordinateTransformer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemCoordinateTransformer", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemCoordinateTransformer))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemPrimaryTextView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemPrimaryTextView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemPrimaryTextView", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemPrimaryTextView))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProvider", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemProviderCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemProviderCallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProviderCallback", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemProviderCallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleController", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListControl::IItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListControl_member_IItemStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleProvider", new gacui_tpimp_GuiListControl :: gacui_tpimp_IItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListView) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListView", new gacui_tpimp_GuiListView))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListViewBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListViewBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiListViewBase", new gacui_tpimp_GuiListViewBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiListViewBase::IStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiListViewBase_member_IStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiListViewBase :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiListViewBase :: gacui_tpimp_IStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenu>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMenu) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenu", new gacui_tpimp_GuiMenu))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuBar>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMenuBar) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenuBar", new gacui_tpimp_GuiMenuBar))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuButton>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMenuButton) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMenuButton", new gacui_tpimp_GuiMenuButton))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMenuButton::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMenuButton_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiMenuButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiMenuButton :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox", new gacui_tpimp_GuiMultilineTextBox))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox::StyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_StyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_StyleController", new gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_StyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiMultilineTextBox::TextElementOperatorCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiMultilineTextBox_member_TextElementOperatorCallback) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_TextElementOperatorCallback", new gacui_tpimp_GuiMultilineTextBox :: gacui_tpimp_TextElementOperatorCallback))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiPartialViewComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiPartialViewComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPartialViewComposition", new gacui_tpimp_GuiPartialViewComposition))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiPolygonElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiPolygonElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPolygonElement", new gacui_tpimp_GuiPolygonElement))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiPopup>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiPopup) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiPopup", new gacui_tpimp_GuiPopup))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiRoundBorderElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiRoundBorderElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiRoundBorderElement", new gacui_tpimp_GuiRoundBorderElement))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScroll) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScroll", new gacui_tpimp_GuiScroll))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll::ICommandExecutor>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScroll_member_ICommandExecutor) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScroll :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiScroll :: gacui_tpimp_ICommandExecutor))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScroll::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScroll_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScroll :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiScroll :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollContainer>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScrollContainer) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollContainer", new gacui_tpimp_GuiScrollContainer))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollContainer::StyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScrollContainer_member_StyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollContainer :: gacui_tpimp_StyleController", new gacui_tpimp_GuiScrollContainer :: gacui_tpimp_StyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScrollView) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollView", new gacui_tpimp_GuiScrollView))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView::IStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_IStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiScrollView :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiScrollView :: gacui_tpimp_IStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiScrollView::StyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiScrollView_member_StyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiScrollView :: gacui_tpimp_StyleController", new gacui_tpimp_GuiScrollView :: gacui_tpimp_StyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableButton) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton", new gacui_tpimp_GuiSelectableButton))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::GroupController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_GroupController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_GroupController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_GroupController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableButton::MutexGroupController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableButton_member_MutexGroupController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableButton :: gacui_tpimp_MutexGroupController", new gacui_tpimp_GuiSelectableButton :: gacui_tpimp_MutexGroupController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableListControl>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSelectableListControl", new gacui_tpimp_GuiSelectableListControl))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSelectableListControl::IItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSelectableListControl_member_IItemStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSelectableListControl :: gacui_tpimp_IItemStyleProvider", new gacui_tpimp_GuiSelectableListControl :: gacui_tpimp_IItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSideAlignedComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSideAlignedComposition", new gacui_tpimp_GuiSideAlignedComposition))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox", new gacui_tpimp_GuiSinglelineTextBox))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_IStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_IStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::StyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_StyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_StyleController", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_StyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiSinglelineTextBox::TextElementOperatorCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSinglelineTextBox_member_TextElementOperatorCallback) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_TextElementOperatorCallback", new gacui_tpimp_GuiSinglelineTextBox :: gacui_tpimp_TextElementOperatorCallback))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidBackgroundElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSolidBackgroundElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidBackgroundElement", new gacui_tpimp_GuiSolidBackgroundElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidBorderElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSolidBorderElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidBorderElement", new gacui_tpimp_GuiSolidBorderElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiSolidLabelElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiSolidLabelElement) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiSolidLabelElement", new gacui_tpimp_GuiSolidLabelElement))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiStackComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiStackComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiStackComposition", new gacui_tpimp_GuiStackComposition))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiStackItemComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiStackItemComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiStackItemComposition", new gacui_tpimp_GuiStackItemComposition))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTab) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTab", new gacui_tpimp_GuiTab))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab::ICommandExecutor>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTab_member_ICommandExecutor) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTab :: gacui_tpimp_ICommandExecutor", new gacui_tpimp_GuiTab :: gacui_tpimp_ICommandExecutor))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTab::IStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTab_member_IStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTab :: gacui_tpimp_IStyleController", new gacui_tpimp_GuiTab :: gacui_tpimp_IStyleController))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiTableComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTableComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTableComposition", new gacui_tpimp_GuiTableComposition))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTabPage>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTabPage) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTabPage", new gacui_tpimp_GuiTabPage))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextBoxCommonInterface>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTextBoxCommonInterface) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextBoxCommonInterface", new gacui_tpimp_GuiTextBoxCommonInterface))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextElementOperator", new gacui_tpimp_GuiTextElementOperator))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator::DefaultCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_DefaultCallback) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_DefaultCallback", new gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_DefaultCallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextElementOperator::ICallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTextElementOperator_member_ICallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_ICallback", new gacui_tpimp_GuiTextElementOperator :: gacui_tpimp_ICallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTextList>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTextList) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTextList", new gacui_tpimp_GuiTextList))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiTimeBasedAnimation>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTimeBasedAnimation) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTimeBasedAnimation", new gacui_tpimp_GuiTimeBasedAnimation))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTreeView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTreeView) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiTreeView", new gacui_tpimp_GuiTreeView))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiTreeView::IStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiTreeView_member_IStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_GuiTreeView :: gacui_tpimp_IStyleProvider", new gacui_tpimp_GuiTreeView :: gacui_tpimp_IStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualListView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiVirtualListView) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualListView", new gacui_tpimp_GuiVirtualListView))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualTextList>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiVirtualTextList) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualTextList", new gacui_tpimp_GuiVirtualTextList))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiVirtualTreeListControl>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiVirtualTreeListControl) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiVirtualTreeListControl", new gacui_tpimp_GuiVirtualTreeListControl))->GetTypeDescriptor());
				Description<vl::presentation::controls::GuiWindow>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiWindow) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiWindow", new gacui_tpimp_GuiWindow))->GetTypeDescriptor());
				Description<vl::presentation::elements::GuiWindowComposition>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_GuiWindowComposition) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiWindowComposition", new gacui_tpimp_GuiWindowComposition))->GetTypeDescriptor());
				Description<vl::presentation::elements::IGuiGraphicsAnimation>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_IGuiGraphicsAnimation) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsAnimation", new gacui_tpimp_IGuiGraphicsAnimation))->GetTypeDescriptor());
				Description<vl::presentation::elements::IGuiGraphicsElement>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElement) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsElement", new gacui_tpimp_IGuiGraphicsElement))->GetTypeDescriptor());
				Description<vl::presentation::controls::IGuiMenuService>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_IGuiMenuService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiMenuService", new gacui_tpimp_IGuiMenuService))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemPrimaryTextView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeItemPrimaryTextView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemPrimaryTextView", new gacui_tpimp_INodeItemPrimaryTextView))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeItemStyleController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemStyleController", new gacui_tpimp_INodeItemStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeItemStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemStyleProvider", new gacui_tpimp_INodeItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeItemView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeItemView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeItemView", new gacui_tpimp_INodeItemView))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeProvider", new gacui_tpimp_INodeProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeProviderCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeProviderCallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeProviderCallback", new gacui_tpimp_INodeProviderCallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::INodeRootProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_INodeRootProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INodeRootProvider", new gacui_tpimp_INodeRootProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ItemProviderBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ItemProviderBase) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ItemProviderBase", new gacui_tpimp_ItemProviderBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ItemStyleControllerBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ItemStyleControllerBase) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ItemStyleControllerBase", new gacui_tpimp_ItemStyleControllerBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::ITreeViewItemView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ITreeViewItemView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ITreeViewItemView", new gacui_tpimp_ITreeViewItemView))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewBigIconContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewBigIconContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewBigIconContentProvider", new gacui_tpimp_ListViewBigIconContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewColumnItemArranger", new gacui_tpimp_ListViewColumnItemArranger))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemView", new gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemView))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewColumnItemArranger_member_IColumnItemViewCallback) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemViewCallback", new gacui_tpimp_ListViewColumnItemArranger :: gacui_tpimp_IColumnItemViewCallback))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewDetailContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewDetailContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewDetailContentProvider", new gacui_tpimp_ListViewDetailContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewInformationContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewInformationContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewInformationContentProvider", new gacui_tpimp_ListViewInformationContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemProvider", new gacui_tpimp_ListViewItemProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProvider", new gacui_tpimp_ListViewItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContent>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContent) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContent", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContent))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemContentProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContentProvider", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::IListViewItemView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_IListViewItemView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemView", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_IListViewItemView))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProvider::ListViewContentItemStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProvider_member_ListViewContentItemStyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_ListViewContentItemStyleController", new gacui_tpimp_ListViewItemStyleProvider :: gacui_tpimp_ListViewContentItemStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewItemStyleProviderBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProviderBase", new gacui_tpimp_ListViewItemStyleProviderBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewListContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewListContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewListContentProvider", new gacui_tpimp_ListViewListContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewSmallIconContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewSmallIconContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewSmallIconContentProvider", new gacui_tpimp_ListViewSmallIconContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::ListViewTileContentProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_ListViewTileContentProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewTileContentProvider", new gacui_tpimp_ListViewTileContentProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::MemoryNodeProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_MemoryNodeProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_MemoryNodeProvider", new gacui_tpimp_MemoryNodeProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::MemoryNodeRootProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_MemoryNodeRootProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_MemoryNodeRootProvider", new gacui_tpimp_MemoryNodeRootProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeItemProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_NodeItemProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeItemProvider", new gacui_tpimp_NodeItemProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_NodeItemStyleProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeItemStyleProvider", new gacui_tpimp_NodeItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::NodeRootProviderBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_NodeRootProviderBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_NodeRootProviderBase", new gacui_tpimp_NodeRootProviderBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::RangedItemArrangerBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_RangedItemArrangerBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_RangedItemArrangerBase", new gacui_tpimp_RangedItemArrangerBase))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TextItemProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemProvider", new gacui_tpimp_TextItemProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemStyleProvider", new gacui_tpimp_TextItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::ITextItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemStyleProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemStyleProvider", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::ITextItemView>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_ITextItemView) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemView", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_ITextItemView))->GetTypeDescriptor());
				Description<vl::presentation::controls::list::TextItemStyleProvider::TextItemStyleController>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TextItemStyleProvider_member_TextItemStyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_TextItemStyleController", new gacui_tpimp_TextItemStyleProvider :: gacui_tpimp_TextItemStyleController))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewItem>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TreeViewItem) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewItem", new gacui_tpimp_TreeViewItem))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewItemRootProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TreeViewItemRootProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewItemRootProvider", new gacui_tpimp_TreeViewItemRootProvider))->GetTypeDescriptor());
				Description<vl::presentation::controls::tree::TreeViewNodeItemStyleProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_TreeViewNodeItemStyleProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_TreeViewNodeItemStyleProvider", new gacui_tpimp_TreeViewNodeItemStyleProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ButtonStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ButtonStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ButtonStyle", new gacui_tpimp_Win7ButtonStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ButtonStyleBase>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ButtonStyleBase) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ButtonStyleBase", new gacui_tpimp_Win7ButtonStyleBase))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7CheckBoxStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7CheckBoxStyle", new gacui_tpimp_Win7CheckBoxStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7CheckTextListProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7CheckTextListProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7CheckTextListProvider", new gacui_tpimp_Win7CheckTextListProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7DropDownComboBoxStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7DropDownComboBoxStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7DropDownComboBoxStyle", new gacui_tpimp_Win7DropDownComboBoxStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7EmptyStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7EmptyStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7EmptyStyle", new gacui_tpimp_Win7EmptyStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7GroupBoxStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7GroupBoxStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7GroupBoxStyle", new gacui_tpimp_Win7GroupBoxStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ListViewColumnDropDownStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnDropDownStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ListViewColumnDropDownStyle", new gacui_tpimp_Win7ListViewColumnDropDownStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ListViewColumnHeaderStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ListViewColumnHeaderStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ListViewColumnHeaderStyle", new gacui_tpimp_Win7ListViewColumnHeaderStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ListViewProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ListViewProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ListViewProvider", new gacui_tpimp_Win7ListViewProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MenuBarButtonStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MenuBarButtonStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MenuBarButtonStyle", new gacui_tpimp_Win7MenuBarButtonStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MenuBarStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MenuBarStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MenuBarStyle", new gacui_tpimp_Win7MenuBarStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MenuItemButtonStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MenuItemButtonStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MenuItemButtonStyle", new gacui_tpimp_Win7MenuItemButtonStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MenuSplitterStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MenuSplitterStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MenuSplitterStyle", new gacui_tpimp_Win7MenuSplitterStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MenuStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MenuStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MenuStyle", new gacui_tpimp_Win7MenuStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7MultilineTextBoxProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7MultilineTextBoxProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7MultilineTextBoxProvider", new gacui_tpimp_Win7MultilineTextBoxProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7RadioTextListProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7RadioTextListProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7RadioTextListProvider", new gacui_tpimp_Win7RadioTextListProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ScrollStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ScrollStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ScrollStyle", new gacui_tpimp_Win7ScrollStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ScrollViewProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ScrollViewProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ScrollViewProvider", new gacui_tpimp_Win7ScrollViewProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7SelectableItemStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7SelectableItemStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7SelectableItemStyle", new gacui_tpimp_Win7SelectableItemStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7SinglelineTextBoxProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7SinglelineTextBoxProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7SinglelineTextBoxProvider", new gacui_tpimp_Win7SinglelineTextBoxProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TabPageHeaderStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TabPageHeaderStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TabPageHeaderStyle", new gacui_tpimp_Win7TabPageHeaderStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TabStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TabStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TabStyle", new gacui_tpimp_Win7TabStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TextBoxBackground>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TextBoxBackground) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TextBoxBackground", new gacui_tpimp_Win7TextBoxBackground))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TextListProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TextListProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TextListProvider", new gacui_tpimp_Win7TextListProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7ToolstripButtonStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7ToolstripButtonStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7ToolstripButtonStyle", new gacui_tpimp_Win7ToolstripButtonStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TrackStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TrackStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TrackStyle", new gacui_tpimp_Win7TrackStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TreeViewExpandingButtonStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TreeViewExpandingButtonStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TreeViewExpandingButtonStyle", new gacui_tpimp_Win7TreeViewExpandingButtonStyle))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7TreeViewProvider>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7TreeViewProvider) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7TreeViewProvider", new gacui_tpimp_Win7TreeViewProvider))->GetTypeDescriptor());
				Description<vl::presentation::win7::Win7WindowStyle>::SetTypeDescroptorByTypeProvider(((gacui_tpimp_type_cache_table.cache_Win7WindowStyle) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Win7WindowStyle", new gacui_tpimp_Win7WindowStyle))->GetTypeDescriptor());
				((gacui_tpimp_type_cache_table.cache_Alignment_member_Type) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_Alignment :: gacui_tpimp_Type", new gacui_tpimp_Alignment :: gacui_tpimp_Type));
				((gacui_tpimp_type_cache_table.cache_Array_of_ColorEntry) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_Array_of_ColorEntry", new gacui_tpimp_Array_of_ColorEntry));
				((gacui_tpimp_type_cache_table.cache_AxisAlignedItemCoordinateTransformer_member_Alignment) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_AxisAlignedItemCoordinateTransformer :: gacui_tpimp_Alignment", new gacui_tpimp_AxisAlignedItemCoordinateTransformer :: gacui_tpimp_Alignment));
				((gacui_tpimp_type_cache_table.cache_CharAtt) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_CharAtt", new gacui_tpimp_CharAtt));
				((gacui_tpimp_type_cache_table.cache_CharMeasurer) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_CharMeasurer", new gacui_tpimp_CharMeasurer));
				((gacui_tpimp_type_cache_table.cache_Color) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Color", new gacui_tpimp_Color));
				((gacui_tpimp_type_cache_table.cache_CommonScrollStyle_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_CommonScrollStyle :: gacui_tpimp_Direction", new gacui_tpimp_CommonScrollStyle :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_CommonTrackStyle_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_CommonTrackStyle :: gacui_tpimp_Direction", new gacui_tpimp_CommonTrackStyle :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_DescriptableObject) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_DescriptableObject", new gacui_tpimp_DescriptableObject));
				((gacui_tpimp_type_cache_table.cache_ElementShape_member_Type) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_ElementShape :: gacui_tpimp_Type", new gacui_tpimp_ElementShape :: gacui_tpimp_Type));
				((gacui_tpimp_type_cache_table.cache_FontProperties) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_FontProperties", new gacui_tpimp_FontProperties));
				((gacui_tpimp_type_cache_table.cache_Gui3DSplitterElement_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_Gui3DSplitterElement :: gacui_tpimp_Direction", new gacui_tpimp_Gui3DSplitterElement :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_GuiApplication) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiApplication", new gacui_tpimp_GuiApplication));
				((gacui_tpimp_type_cache_table.cache_GuiButton_member_ControlState) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiButton :: gacui_tpimp_ControlState", new gacui_tpimp_GuiButton :: gacui_tpimp_ControlState));
				((gacui_tpimp_type_cache_table.cache_GuiCellOption) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiCellOption", new gacui_tpimp_GuiCellOption));
				((gacui_tpimp_type_cache_table.cache_GuiCellOption_member_ComposeType) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiCellOption :: gacui_tpimp_ComposeType", new gacui_tpimp_GuiCellOption :: gacui_tpimp_ComposeType));
				((gacui_tpimp_type_cache_table.cache_GuiCharEventArgs) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiCharEventArgs", new gacui_tpimp_GuiCharEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiEventArgs) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiEventArgs", new gacui_tpimp_GuiEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGradientBackgroundElement_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGradientBackgroundElement :: gacui_tpimp_Direction", new gacui_tpimp_GuiGradientBackgroundElement :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsAnimationManager) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsAnimationManager", new gacui_tpimp_GuiGraphicsAnimationManager));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_MinSizeLimitation) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_MinSizeLimitation", new gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_MinSizeLimitation));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsComposition_member_ParentSizeAffection) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_ParentSizeAffection", new gacui_tpimp_GuiGraphicsComposition :: gacui_tpimp_ParentSizeAffection));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiCharEventArgs) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiCharEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiEventArgs) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiKeyEventArgs) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiKeyEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiMouseEventArgs) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiMouseEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEvent_of_GuiRequestEventArgs) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs", new gacui_tpimp_GuiGraphicsEvent_of_GuiRequestEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsEventReceiver) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsEventReceiver", new gacui_tpimp_GuiGraphicsEventReceiver));
				((gacui_tpimp_type_cache_table.cache_GuiGraphicsResourceManager) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_GuiGraphicsResourceManager", new gacui_tpimp_GuiGraphicsResourceManager));
				((gacui_tpimp_type_cache_table.cache_GuiImageData) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiImageData", new gacui_tpimp_GuiImageData));
				((gacui_tpimp_type_cache_table.cache_GuiKeyEventArgs) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiKeyEventArgs", new gacui_tpimp_GuiKeyEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiMouseEventArgs) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiMouseEventArgs", new gacui_tpimp_GuiMouseEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiRequestEventArgs) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_GuiRequestEventArgs", new gacui_tpimp_GuiRequestEventArgs));
				((gacui_tpimp_type_cache_table.cache_GuiSideAlignedComposition_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiSideAlignedComposition :: gacui_tpimp_Direction", new gacui_tpimp_GuiSideAlignedComposition :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_GuiStackComposition_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_GuiStackComposition :: gacui_tpimp_Direction", new gacui_tpimp_GuiStackComposition :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_ICollection_of_ListViewItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_ListViewItem", new gacui_tpimp_ICollection_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_ICollection_of_MemoryNodeProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_MemoryNodeProvider", new gacui_tpimp_ICollection_of_MemoryNodeProvider));
				((gacui_tpimp_type_cache_table.cache_ICollection_of_TextItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_ICollection_of_TextItem", new gacui_tpimp_ICollection_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_IDescriptable) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IDescriptable", new gacui_tpimp_IDescriptable));
				((gacui_tpimp_type_cache_table.cache_IEnumerable_of_ListViewItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_ListViewItem", new gacui_tpimp_IEnumerable_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_IEnumerable_of_MemoryNodeProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_MemoryNodeProvider", new gacui_tpimp_IEnumerable_of_MemoryNodeProvider));
				((gacui_tpimp_type_cache_table.cache_IEnumerable_of_TextItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerable_of_TextItem", new gacui_tpimp_IEnumerable_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_IEnumerator_of_ListViewItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerator_of_ListViewItem", new gacui_tpimp_IEnumerator_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_IEnumerator_of_TextItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IEnumerator_of_TextItem", new gacui_tpimp_IEnumerator_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_IGuiGraphicsElementFactory) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsElementFactory", new gacui_tpimp_IGuiGraphicsElementFactory));
				((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRenderer", new gacui_tpimp_IGuiGraphicsRenderer));
				((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRendererFactory) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRendererFactory", new gacui_tpimp_IGuiGraphicsRendererFactory));
				((gacui_tpimp_type_cache_table.cache_IGuiGraphicsRenderTarget) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IGuiGraphicsRenderTarget", new gacui_tpimp_IGuiGraphicsRenderTarget));
				((gacui_tpimp_type_cache_table.cache_IGuiMenuService_member_Direction) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IGuiMenuService :: gacui_tpimp_Direction", new gacui_tpimp_IGuiMenuService :: gacui_tpimp_Direction));
				((gacui_tpimp_type_cache_table.cache_IList_of_int) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_int", new gacui_tpimp_IList_of_int));
				((gacui_tpimp_type_cache_table.cache_IList_of_ListViewColumn) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_ListViewColumn", new gacui_tpimp_IList_of_ListViewColumn));
				((gacui_tpimp_type_cache_table.cache_IList_of_ListViewItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_ListViewItem", new gacui_tpimp_IList_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_IList_of_MemoryNodeProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_MemoryNodeProvider", new gacui_tpimp_IList_of_MemoryNodeProvider));
				((gacui_tpimp_type_cache_table.cache_IList_of_TextItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IList_of_TextItem", new gacui_tpimp_IList_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_IMemberDescriptor_member_MemberTypeEnum) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IMemberDescriptor :: gacui_tpimp_MemberTypeEnum", new gacui_tpimp_IMemberDescriptor :: gacui_tpimp_MemberTypeEnum));
				((gacui_tpimp_type_cache_table.cache_INativeAsyncService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeAsyncService", new gacui_tpimp_INativeAsyncService));
				((gacui_tpimp_type_cache_table.cache_INativeCallbackService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeCallbackService", new gacui_tpimp_INativeCallbackService));
				((gacui_tpimp_type_cache_table.cache_INativeClipboardService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeClipboardService", new gacui_tpimp_INativeClipboardService));
				((gacui_tpimp_type_cache_table.cache_INativeController) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeController", new gacui_tpimp_INativeController));
				((gacui_tpimp_type_cache_table.cache_INativeControllerListener) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeControllerListener", new gacui_tpimp_INativeControllerListener));
				((gacui_tpimp_type_cache_table.cache_INativeCursor) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeCursor", new gacui_tpimp_INativeCursor));
				((gacui_tpimp_type_cache_table.cache_INativeCursor_member_SystemCursorType) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_INativeCursor :: gacui_tpimp_SystemCursorType", new gacui_tpimp_INativeCursor :: gacui_tpimp_SystemCursorType));
				((gacui_tpimp_type_cache_table.cache_INativeImage) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImage", new gacui_tpimp_INativeImage));
				((gacui_tpimp_type_cache_table.cache_INativeImage_member_FormatType) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_INativeImage :: gacui_tpimp_FormatType", new gacui_tpimp_INativeImage :: gacui_tpimp_FormatType));
				((gacui_tpimp_type_cache_table.cache_INativeImageFrame) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageFrame", new gacui_tpimp_INativeImageFrame));
				((gacui_tpimp_type_cache_table.cache_INativeImageFrameCache) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageFrameCache", new gacui_tpimp_INativeImageFrameCache));
				((gacui_tpimp_type_cache_table.cache_INativeImageService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeImageService", new gacui_tpimp_INativeImageService));
				((gacui_tpimp_type_cache_table.cache_INativeInputService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeInputService", new gacui_tpimp_INativeInputService));
				((gacui_tpimp_type_cache_table.cache_INativeResourceService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeResourceService", new gacui_tpimp_INativeResourceService));
				((gacui_tpimp_type_cache_table.cache_INativeScreen) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeScreen", new gacui_tpimp_INativeScreen));
				((gacui_tpimp_type_cache_table.cache_INativeScreenService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeScreenService", new gacui_tpimp_INativeScreenService));
				((gacui_tpimp_type_cache_table.cache_INativeWindow) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindow", new gacui_tpimp_INativeWindow));
				((gacui_tpimp_type_cache_table.cache_INativeWindowListener) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindowListener", new gacui_tpimp_INativeWindowListener));
				((gacui_tpimp_type_cache_table.cache_INativeWindowService) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_INativeWindowService", new gacui_tpimp_INativeWindowService));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ColorEntry) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_ColorEntry", new gacui_tpimp_IReadonlyList_of_ColorEntry));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_DescriptableValue) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_IReadonlyList_of_DescriptableValue", new gacui_tpimp_IReadonlyList_of_DescriptableValue));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiGraphicsComposition_raw_pointer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiGraphicsComposition_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiListControl_IItemStyleController_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiStackItemComposition_raw_pointer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiStackItemComposition_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiTabPage_raw_pointer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiTabPage_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_GuiWindow_raw_pointer) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer", new gacui_tpimp_IReadonlyList_of_GuiWindow_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_int) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_int", new gacui_tpimp_IReadonlyList_of_int));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_ListViewItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_ListViewItem", new gacui_tpimp_IReadonlyList_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_MemoryNodeProvider) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_MemoryNodeProvider", new gacui_tpimp_IReadonlyList_of_MemoryNodeProvider));
				((gacui_tpimp_type_cache_table.cache_IReadonlyList_of_TextItem) = typeProvider->CreateType(IType::Interface, L"gacui_tpimp_IReadonlyList_of_TextItem", new gacui_tpimp_IReadonlyList_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_IType_member_TypeEnum) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_IType :: gacui_tpimp_TypeEnum", new gacui_tpimp_IType :: gacui_tpimp_TypeEnum));
				((gacui_tpimp_type_cache_table.cache_List_of_IMethodDescriptor_raw_pointer) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_List_of_IMethodDescriptor_raw_pointer", new gacui_tpimp_List_of_IMethodDescriptor_raw_pointer));
				((gacui_tpimp_type_cache_table.cache_List_of_ObjectString_of_wchar_t) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_List_of_ObjectString_of_wchar_t", new gacui_tpimp_List_of_ObjectString_of_wchar_t));
				((gacui_tpimp_type_cache_table.cache_ListProvider_of_ListViewItem) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListProvider_of_ListViewItem", new gacui_tpimp_ListProvider_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_ListProvider_of_TextItem) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListProvider_of_TextItem", new gacui_tpimp_ListProvider_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_ListViewItem) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_ListViewItem", new gacui_tpimp_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_ListViewItemStyleProviderBase_member_ListViewItemStyleController) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListViewItemStyleProviderBase :: gacui_tpimp_ListViewItemStyleController", new gacui_tpimp_ListViewItemStyleProviderBase :: gacui_tpimp_ListViewItemStyleController));
				((gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_ListViewItem) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListWrapperProvider_of_ListViewItem", new gacui_tpimp_ListWrapperProvider_of_ListViewItem));
				((gacui_tpimp_type_cache_table.cache_ListWrapperProvider_of_TextItem) = typeProvider->CreateType(IType::Class, L"gacui_tpimp_ListWrapperProvider_of_TextItem", new gacui_tpimp_ListWrapperProvider_of_TextItem));
				((gacui_tpimp_type_cache_table.cache_Margin) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Margin", new gacui_tpimp_Margin));
				((gacui_tpimp_type_cache_table.cache_NativeWindowCharInfo) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowCharInfo", new gacui_tpimp_NativeWindowCharInfo));
				((gacui_tpimp_type_cache_table.cache_NativeWindowKeyInfo) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowKeyInfo", new gacui_tpimp_NativeWindowKeyInfo));
				((gacui_tpimp_type_cache_table.cache_NativeWindowMouseInfo) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_NativeWindowMouseInfo", new gacui_tpimp_NativeWindowMouseInfo));
				((gacui_tpimp_type_cache_table.cache_Point) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Point", new gacui_tpimp_Point));
				((gacui_tpimp_type_cache_table.cache_Rect) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Rect", new gacui_tpimp_Rect));
				((gacui_tpimp_type_cache_table.cache_Size) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Size", new gacui_tpimp_Size));
				((gacui_tpimp_type_cache_table.cache_TextItem) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextItem", new gacui_tpimp_TextItem));
				((gacui_tpimp_type_cache_table.cache_TextLine) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextLine", new gacui_tpimp_TextLine));
				((gacui_tpimp_type_cache_table.cache_TextLines) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextLines", new gacui_tpimp_TextLines));
				((gacui_tpimp_type_cache_table.cache_TextPos) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_TextPos", new gacui_tpimp_TextPos));
				((gacui_tpimp_type_cache_table.cache_Win7ButtonColors) = typeProvider->CreateType(IType::Struct, L"gacui_tpimp_Win7ButtonColors", new gacui_tpimp_Win7ButtonColors));
				((gacui_tpimp_type_cache_table.cache_Win7CheckBoxStyle_member_BulletStyle) = typeProvider->CreateType(IType::Enum, L"gacui_tpimp_Win7CheckBoxStyle :: gacui_tpimp_BulletStyle", new gacui_tpimp_Win7CheckBoxStyle :: gacui_tpimp_BulletStyle));
				return typeProvider;
			}
		}
	}
}

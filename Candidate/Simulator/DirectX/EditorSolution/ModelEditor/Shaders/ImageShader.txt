cbuffer MatrixBuffer : register(b0)
{
    matrix worldMatrix;
    matrix viewMatrix;
    matrix projectionMatrix;
};

struct VIn
{
	float4 position : POSITION;
	float2 tex : TEXCOORD;
};

struct PIn
{
    float4 position : SV_POSITION;
	float2 tex : TEXCOORD;
};

Texture2D shaderTexture : register(t0);
SamplerState shaderSampler : register(s0);

PIn VShader(VIn input)
{
    PIn output;
    input.position.w = 1.0f;

    output.position = mul(input.position, worldMatrix);
    output.position = mul(output.position, viewMatrix);
    output.position = mul(output.position, projectionMatrix);

    output.tex = input.tex;
    
    return output;
}

float4 PShader(PIn input) : SV_TARGET
{
	float4 color=shaderTexture.Sample(shaderSampler, input.tex);
	return color;
}